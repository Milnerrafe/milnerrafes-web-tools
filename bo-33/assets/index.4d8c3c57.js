var Rf=Object.defineProperty,Yf=Object.defineProperties;var Gf=Object.getOwnPropertyDescriptors;var va=Object.getOwnPropertySymbols;var $u=Object.prototype.hasOwnProperty,tq=Object.prototype.propertyIsEnumerable;var Xu=(e,t,n)=>t in e?Rf(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,nt=(e,t)=>{for(var n in t||(t={}))$u.call(t,n)&&Xu(e,n,t[n]);if(va)for(var n of va(t))tq.call(t,n)&&Xu(e,n,t[n]);return e},wt=(e,t)=>Yf(e,Gf(t));var Wr=(e,t)=>{var n={};for(var s in e)$u.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(e!=null&&va)for(var s of va(e))t.indexOf(s)<0&&tq.call(e,s)&&(n[s]=e[s]);return n};const _f=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function n(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerpolicy&&(r.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?r.credentials="include":i.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(i){if(i.ep)return;i.ep=!0;const r=n(i);fetch(i.href,r)}};_f();function ml(e,t){const n=Object.create(null),s=e.split(",");for(let i=0;i<s.length;i++)n[s[i]]=!0;return t?i=>!!n[i.toLowerCase()]:i=>!!n[i]}const xf="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",Ff=ml(xf);function sp(e){return!!e||e===""}function vr(e){if(Rt(e)){const t={};for(let n=0;n<e.length;n++){const s=e[n],i=Be(s)?Jf(s):vr(s);if(i)for(const r in i)t[r]=i[r]}return t}else{if(Be(e))return e;if(Ee(e))return e}}const Zf=/;(?![^(]*\))/g,Kf=/:(.+)/;function Jf(e){const t={};return e.split(Zf).forEach(n=>{if(n){const s=n.split(Kf);s.length>1&&(t[s[0].trim()]=s[1].trim())}}),t}function Rn(e){let t="";if(Be(e))t=e;else if(Rt(e))for(let n=0;n<e.length;n++){const s=Rn(e[n]);s&&(t+=s+" ")}else if(Ee(e))for(const n in e)e[n]&&(t+=n+" ");return t.trim()}function Lf(e,t){if(e.length!==t.length)return!1;let n=!0;for(let s=0;n&&s<e.length;s++)n=uA(e[s],t[s]);return n}function uA(e,t){if(e===t)return!0;let n=eq(e),s=eq(t);if(n||s)return n&&s?e.getTime()===t.getTime():!1;if(n=Rt(e),s=Rt(t),n||s)return n&&s?Lf(e,t):!1;if(n=Ee(e),s=Ee(t),n||s){if(!n||!s)return!1;const i=Object.keys(e).length,r=Object.keys(t).length;if(i!==r)return!1;for(const a in e){const o=e.hasOwnProperty(a),A=t.hasOwnProperty(a);if(o&&!A||!o&&A||!uA(e[a],t[a]))return!1}}return String(e)===String(t)}function zf(e,t){return e.findIndex(n=>uA(n,t))}const Cs=e=>Be(e)?e:e==null?"":Rt(e)||Ee(e)&&(e.toString===rp||!Yt(e.toString))?JSON.stringify(e,ip,2):String(e),ip=(e,t)=>t&&t.__v_isRef?ip(e,t.value):Li(t)?{[`Map(${t.size})`]:[...t.entries()].reduce((n,[s,i])=>(n[`${s} =>`]=i,n),{})}:hA(t)?{[`Set(${t.size})`]:[...t.values()]}:Ee(t)&&!Rt(t)&&!ap(t)?String(t):t,Ae={},Ji=[],Tn=()=>{},jf=()=>!1,Hf=/^on[^a-z]/,qA=e=>Hf.test(e),Nl=e=>e.startsWith("onUpdate:"),sn=Object.assign,Vl=(e,t)=>{const n=e.indexOf(t);n>-1&&e.splice(n,1)},Xf=Object.prototype.hasOwnProperty,Kt=(e,t)=>Xf.call(e,t),Rt=Array.isArray,Li=e=>pA(e)==="[object Map]",hA=e=>pA(e)==="[object Set]",eq=e=>e instanceof Date,Yt=e=>typeof e=="function",Be=e=>typeof e=="string",Ml=e=>typeof e=="symbol",Ee=e=>e!==null&&typeof e=="object",Ol=e=>Ee(e)&&Yt(e.then)&&Yt(e.catch),rp=Object.prototype.toString,pA=e=>rp.call(e),$f=e=>pA(e).slice(8,-1),ap=e=>pA(e)==="[object Object]",yl=e=>Be(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,oo=ml(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),dA=e=>{const t=Object.create(null);return n=>t[n]||(t[n]=e(n))},tm=/-(\w)/g,Ln=dA(e=>e.replace(tm,(t,n)=>n?n.toUpperCase():"")),em=/\B([A-Z])/g,qr=dA(e=>e.replace(em,"-$1").toLowerCase()),DA=dA(e=>e.charAt(0).toUpperCase()+e.slice(1)),HA=dA(e=>e?`on${DA(e)}`:""),Rr=(e,t)=>!Object.is(e,t),Ao=(e,t)=>{for(let n=0;n<e.length;n++)e[n](t)},go=(e,t,n)=>{Object.defineProperty(e,t,{configurable:!0,enumerable:!1,value:n})},Yr=e=>{const t=parseFloat(e);return isNaN(t)?e:t};let nq;const nm=()=>nq||(nq=typeof globalThis!="undefined"?globalThis:typeof self!="undefined"?self:typeof window!="undefined"?window:typeof global!="undefined"?global:{});let Fn;class sm{constructor(t=!1){this.active=!0,this.effects=[],this.cleanups=[],!t&&Fn&&(this.parent=Fn,this.index=(Fn.scopes||(Fn.scopes=[])).push(this)-1)}run(t){if(this.active){const n=Fn;try{return Fn=this,t()}finally{Fn=n}}}on(){Fn=this}off(){Fn=this.parent}stop(t){if(this.active){let n,s;for(n=0,s=this.effects.length;n<s;n++)this.effects[n].stop();for(n=0,s=this.cleanups.length;n<s;n++)this.cleanups[n]();if(this.scopes)for(n=0,s=this.scopes.length;n<s;n++)this.scopes[n].stop(!0);if(this.parent&&!t){const i=this.parent.scopes.pop();i&&i!==this&&(this.parent.scopes[this.index]=i,i.index=this.index)}this.active=!1}}}function im(e,t=Fn){t&&t.active&&t.effects.push(e)}const Wl=e=>{const t=new Set(e);return t.w=0,t.n=0,t},op=e=>(e.w&Ys)>0,Ap=e=>(e.n&Ys)>0,rm=({deps:e})=>{if(e.length)for(let t=0;t<e.length;t++)e[t].w|=Ys},am=e=>{const{deps:t}=e;if(t.length){let n=0;for(let s=0;s<t.length;s++){const i=t[s];op(i)&&!Ap(i)?i.delete(e):t[n++]=i,i.w&=~Ys,i.n&=~Ys}t.length=n}},Vc=new WeakMap;let Er=0,Ys=1;const Mc=30;let Sn;const pi=Symbol(""),Oc=Symbol("");class El{constructor(t,n=null,s){this.fn=t,this.scheduler=n,this.active=!0,this.deps=[],this.parent=void 0,im(this,s)}run(){if(!this.active)return this.fn();let t=Sn,n=ws;for(;t;){if(t===this)return;t=t.parent}try{return this.parent=Sn,Sn=this,ws=!0,Ys=1<<++Er,Er<=Mc?rm(this):sq(this),this.fn()}finally{Er<=Mc&&am(this),Ys=1<<--Er,Sn=this.parent,ws=n,this.parent=void 0,this.deferStop&&this.stop()}}stop(){Sn===this?this.deferStop=!0:this.active&&(sq(this),this.onStop&&this.onStop(),this.active=!1)}}function sq(e){const{deps:t}=e;if(t.length){for(let n=0;n<t.length;n++)t[n].delete(e);t.length=0}}let ws=!0;const cp=[];function hr(){cp.push(ws),ws=!1}function pr(){const e=cp.pop();ws=e===void 0?!0:e}function Dn(e,t,n){if(ws&&Sn){let s=Vc.get(e);s||Vc.set(e,s=new Map);let i=s.get(n);i||s.set(n,i=Wl()),lp(i)}}function lp(e,t){let n=!1;Er<=Mc?Ap(e)||(e.n|=Ys,n=!op(e)):n=!e.has(Sn),n&&(e.add(Sn),Sn.deps.push(e))}function cs(e,t,n,s,i,r){const a=Vc.get(e);if(!a)return;let o=[];if(t==="clear")o=[...a.values()];else if(n==="length"&&Rt(e))a.forEach((A,l)=>{(l==="length"||l>=s)&&o.push(A)});else switch(n!==void 0&&o.push(a.get(n)),t){case"add":Rt(e)?yl(n)&&o.push(a.get("length")):(o.push(a.get(pi)),Li(e)&&o.push(a.get(Oc)));break;case"delete":Rt(e)||(o.push(a.get(pi)),Li(e)&&o.push(a.get(Oc)));break;case"set":Li(e)&&o.push(a.get(pi));break}if(o.length===1)o[0]&&yc(o[0]);else{const A=[];for(const l of o)l&&A.push(...l);yc(Wl(A))}}function yc(e,t){for(const n of Rt(e)?e:[...e])(n!==Sn||n.allowRecurse)&&(n.scheduler?n.scheduler():n.run())}const om=ml("__proto__,__v_isRef,__isVue"),up=new Set(Object.getOwnPropertyNames(Symbol).map(e=>Symbol[e]).filter(Ml)),Am=Pl(),cm=Pl(!1,!0),lm=Pl(!0),iq=um();function um(){const e={};return["includes","indexOf","lastIndexOf"].forEach(t=>{e[t]=function(...n){const s=$t(this);for(let r=0,a=this.length;r<a;r++)Dn(s,"get",r+"");const i=s[t](...n);return i===-1||i===!1?s[t](...n.map($t)):i}}),["push","pop","shift","unshift","splice"].forEach(t=>{e[t]=function(...n){hr();const s=$t(this)[t].apply(this,n);return pr(),s}}),e}function Pl(e=!1,t=!1){return function(s,i,r){if(i==="__v_isReactive")return!e;if(i==="__v_isReadonly")return e;if(i==="__v_isShallow")return t;if(i==="__v_raw"&&r===(e?t?Pm:Dp:t?dp:pp).get(s))return s;const a=Rt(s);if(!e&&a&&Kt(iq,i))return Reflect.get(iq,i,r);const o=Reflect.get(s,i,r);return(Ml(i)?up.has(i):om(i))||(e||Dn(s,"get",i),t)?o:xe(o)?!a||!yl(i)?o.value:o:Ee(o)?e?gp(o):Cl(o):o}}const qm=qp(),hm=qp(!0);function qp(e=!1){return function(n,s,i,r){let a=n[s];if(Gr(a)&&xe(a)&&!xe(i))return!1;if(!e&&!Gr(i)&&(fp(i)||(i=$t(i),a=$t(a)),!Rt(n)&&xe(a)&&!xe(i)))return a.value=i,!0;const o=Rt(n)&&yl(s)?Number(s)<n.length:Kt(n,s),A=Reflect.set(n,s,i,r);return n===$t(r)&&(o?Rr(i,a)&&cs(n,"set",s,i):cs(n,"add",s,i)),A}}function pm(e,t){const n=Kt(e,t);e[t];const s=Reflect.deleteProperty(e,t);return s&&n&&cs(e,"delete",t,void 0),s}function dm(e,t){const n=Reflect.has(e,t);return(!Ml(t)||!up.has(t))&&Dn(e,"has",t),n}function Dm(e){return Dn(e,"iterate",Rt(e)?"length":pi),Reflect.ownKeys(e)}const hp={get:Am,set:qm,deleteProperty:pm,has:dm,ownKeys:Dm},gm={get:lm,set(e,t){return!0},deleteProperty(e,t){return!0}},fm=sn({},hp,{get:cm,set:hm}),Il=e=>e,gA=e=>Reflect.getPrototypeOf(e);function Ra(e,t,n=!1,s=!1){e=e.__v_raw;const i=$t(e),r=$t(t);t!==r&&!n&&Dn(i,"get",t),!n&&Dn(i,"get",r);const{has:a}=gA(i),o=s?Il:n?Bl:_r;if(a.call(i,t))return o(e.get(t));if(a.call(i,r))return o(e.get(r));e!==i&&e.get(t)}function Ya(e,t=!1){const n=this.__v_raw,s=$t(n),i=$t(e);return e!==i&&!t&&Dn(s,"has",e),!t&&Dn(s,"has",i),e===i?n.has(e):n.has(e)||n.has(i)}function Ga(e,t=!1){return e=e.__v_raw,!t&&Dn($t(e),"iterate",pi),Reflect.get(e,"size",e)}function rq(e){e=$t(e);const t=$t(this);return gA(t).has.call(t,e)||(t.add(e),cs(t,"add",e,e)),this}function aq(e,t){t=$t(t);const n=$t(this),{has:s,get:i}=gA(n);let r=s.call(n,e);r||(e=$t(e),r=s.call(n,e));const a=i.call(n,e);return n.set(e,t),r?Rr(t,a)&&cs(n,"set",e,t):cs(n,"add",e,t),this}function oq(e){const t=$t(this),{has:n,get:s}=gA(t);let i=n.call(t,e);i||(e=$t(e),i=n.call(t,e)),s&&s.call(t,e);const r=t.delete(e);return i&&cs(t,"delete",e,void 0),r}function Aq(){const e=$t(this),t=e.size!==0,n=e.clear();return t&&cs(e,"clear",void 0,void 0),n}function _a(e,t){return function(s,i){const r=this,a=r.__v_raw,o=$t(a),A=t?Il:e?Bl:_r;return!e&&Dn(o,"iterate",pi),a.forEach((l,u)=>s.call(i,A(l),A(u),r))}}function xa(e,t,n){return function(...s){const i=this.__v_raw,r=$t(i),a=Li(r),o=e==="entries"||e===Symbol.iterator&&a,A=e==="keys"&&a,l=i[e](...s),u=n?Il:t?Bl:_r;return!t&&Dn(r,"iterate",A?Oc:pi),{next(){const{value:c,done:h}=l.next();return h?{value:c,done:h}:{value:o?[u(c[0]),u(c[1])]:u(c),done:h}},[Symbol.iterator](){return this}}}}function Os(e){return function(...t){return e==="delete"?!1:this}}function mm(){const e={get(r){return Ra(this,r)},get size(){return Ga(this)},has:Ya,add:rq,set:aq,delete:oq,clear:Aq,forEach:_a(!1,!1)},t={get(r){return Ra(this,r,!1,!0)},get size(){return Ga(this)},has:Ya,add:rq,set:aq,delete:oq,clear:Aq,forEach:_a(!1,!0)},n={get(r){return Ra(this,r,!0)},get size(){return Ga(this,!0)},has(r){return Ya.call(this,r,!0)},add:Os("add"),set:Os("set"),delete:Os("delete"),clear:Os("clear"),forEach:_a(!0,!1)},s={get(r){return Ra(this,r,!0,!0)},get size(){return Ga(this,!0)},has(r){return Ya.call(this,r,!0)},add:Os("add"),set:Os("set"),delete:Os("delete"),clear:Os("clear"),forEach:_a(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(r=>{e[r]=xa(r,!1,!1),n[r]=xa(r,!0,!1),t[r]=xa(r,!1,!0),s[r]=xa(r,!0,!0)}),[e,n,t,s]}const[Nm,Vm,Mm,Om]=mm();function Sl(e,t){const n=t?e?Om:Mm:e?Vm:Nm;return(s,i,r)=>i==="__v_isReactive"?!e:i==="__v_isReadonly"?e:i==="__v_raw"?s:Reflect.get(Kt(n,i)&&i in s?n:s,i,r)}const ym={get:Sl(!1,!1)},Wm={get:Sl(!1,!0)},Em={get:Sl(!0,!1)},pp=new WeakMap,dp=new WeakMap,Dp=new WeakMap,Pm=new WeakMap;function Im(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Sm(e){return e.__v_skip||!Object.isExtensible(e)?0:Im($f(e))}function Cl(e){return Gr(e)?e:wl(e,!1,hp,ym,pp)}function Cm(e){return wl(e,!1,fm,Wm,dp)}function gp(e){return wl(e,!0,gm,Em,Dp)}function wl(e,t,n,s,i){if(!Ee(e)||e.__v_raw&&!(t&&e.__v_isReactive))return e;const r=i.get(e);if(r)return r;const a=Sm(e);if(a===0)return e;const o=new Proxy(e,a===2?s:n);return i.set(e,o),o}function zi(e){return Gr(e)?zi(e.__v_raw):!!(e&&e.__v_isReactive)}function Gr(e){return!!(e&&e.__v_isReadonly)}function fp(e){return!!(e&&e.__v_isShallow)}function mp(e){return zi(e)||Gr(e)}function $t(e){const t=e&&e.__v_raw;return t?$t(t):e}function Np(e){return go(e,"__v_skip",!0),e}const _r=e=>Ee(e)?Cl(e):e,Bl=e=>Ee(e)?gp(e):e;function Vp(e){ws&&Sn&&(e=$t(e),lp(e.dep||(e.dep=Wl())))}function Mp(e,t){e=$t(e),e.dep&&yc(e.dep)}function xe(e){return!!(e&&e.__v_isRef===!0)}function de(e){return wm(e,!1)}function wm(e,t){return xe(e)?e:new Bm(e,t)}class Bm{constructor(t,n){this.__v_isShallow=n,this.dep=void 0,this.__v_isRef=!0,this._rawValue=n?t:$t(t),this._value=n?t:_r(t)}get value(){return Vp(this),this._value}set value(t){t=this.__v_isShallow?t:$t(t),Rr(t,this._rawValue)&&(this._rawValue=t,this._value=this.__v_isShallow?t:_r(t),Mp(this))}}function Me(e){return xe(e)?e.value:e}const km={get:(e,t,n)=>Me(Reflect.get(e,t,n)),set:(e,t,n,s)=>{const i=e[t];return xe(i)&&!xe(n)?(i.value=n,!0):Reflect.set(e,t,n,s)}};function Op(e){return zi(e)?e:new Proxy(e,km)}class Tm{constructor(t,n,s,i){this._setter=n,this.dep=void 0,this.__v_isRef=!0,this._dirty=!0,this.effect=new El(t,()=>{this._dirty||(this._dirty=!0,Mp(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!i,this.__v_isReadonly=s}get value(){const t=$t(this);return Vp(t),(t._dirty||!t._cacheable)&&(t._dirty=!1,t._value=t.effect.run()),t._value}set value(t){this._setter(t)}}function bm(e,t,n=!1){let s,i;const r=Yt(e);return r?(s=e,i=Tn):(s=e.get,i=e.set),new Tm(s,i,r||!i,n)}function Bs(e,t,n,s){let i;try{i=s?e(...s):e()}catch(r){Oa(r,t,n)}return i}function bn(e,t,n,s){if(Yt(e)){const r=Bs(e,t,n,s);return r&&Ol(r)&&r.catch(a=>{Oa(a,t,n)}),r}const i=[];for(let r=0;r<e.length;r++)i.push(bn(e[r],t,n,s));return i}function Oa(e,t,n,s=!0){const i=t?t.vnode:null;if(t){let r=t.parent;const a=t.proxy,o=n;for(;r;){const l=r.ec;if(l){for(let u=0;u<l.length;u++)if(l[u](e,a,o)===!1)return}r=r.parent}const A=t.appContext.config.errorHandler;if(A){Bs(A,null,10,[e,a,o]);return}}Um(e,n,i,s)}function Um(e,t,n,s=!0){console.error(e)}let fo=!1,Wc=!1;const pn=[];let ss=0;const wr=[];let Pr=null,vi=0;const Br=[];let Es=null,Ri=0;const yp=Promise.resolve();let kl=null,Ec=null;function Qm(e){const t=kl||yp;return e?t.then(this?e.bind(this):e):t}function vm(e){let t=ss+1,n=pn.length;for(;t<n;){const s=t+n>>>1;xr(pn[s])<e?t=s+1:n=s}return t}function Wp(e){(!pn.length||!pn.includes(e,fo&&e.allowRecurse?ss+1:ss))&&e!==Ec&&(e.id==null?pn.push(e):pn.splice(vm(e.id),0,e),Ep())}function Ep(){!fo&&!Wc&&(Wc=!0,kl=yp.then(Cp))}function Rm(e){const t=pn.indexOf(e);t>ss&&pn.splice(t,1)}function Pp(e,t,n,s){Rt(e)?n.push(...e):(!t||!t.includes(e,e.allowRecurse?s+1:s))&&n.push(e),Ep()}function Ym(e){Pp(e,Pr,wr,vi)}function Ip(e){Pp(e,Es,Br,Ri)}function Tl(e,t=null){if(wr.length){for(Ec=t,Pr=[...new Set(wr)],wr.length=0,vi=0;vi<Pr.length;vi++)Pr[vi]();Pr=null,vi=0,Ec=null,Tl(e,t)}}function Sp(e){if(Br.length){const t=[...new Set(Br)];if(Br.length=0,Es){Es.push(...t);return}for(Es=t,Es.sort((n,s)=>xr(n)-xr(s)),Ri=0;Ri<Es.length;Ri++)Es[Ri]();Es=null,Ri=0}}const xr=e=>e.id==null?1/0:e.id;function Cp(e){Wc=!1,fo=!0,Tl(e),pn.sort((n,s)=>xr(n)-xr(s));const t=Tn;try{for(ss=0;ss<pn.length;ss++){const n=pn[ss];n&&n.active!==!1&&Bs(n,null,14)}}finally{ss=0,pn.length=0,Sp(),fo=!1,kl=null,(pn.length||wr.length||Br.length)&&Cp(e)}}function Gm(e,t,...n){if(e.isUnmounted)return;const s=e.vnode.props||Ae;let i=n;const r=t.startsWith("update:"),a=r&&t.slice(7);if(a&&a in s){const u=`${a==="modelValue"?"model":a}Modifiers`,{number:c,trim:h}=s[u]||Ae;h?i=n.map(q=>q.trim()):c&&(i=n.map(Yr))}let o,A=s[o=HA(t)]||s[o=HA(Ln(t))];!A&&r&&(A=s[o=HA(qr(t))]),A&&bn(A,e,6,i);const l=s[o+"Once"];if(l){if(!e.emitted)e.emitted={};else if(e.emitted[o])return;e.emitted[o]=!0,bn(l,e,6,i)}}function wp(e,t,n=!1){const s=t.emitsCache,i=s.get(e);if(i!==void 0)return i;const r=e.emits;let a={},o=!1;if(!Yt(e)){const A=l=>{const u=wp(l,t,!0);u&&(o=!0,sn(a,u))};!n&&t.mixins.length&&t.mixins.forEach(A),e.extends&&A(e.extends),e.mixins&&e.mixins.forEach(A)}return!r&&!o?(s.set(e,null),null):(Rt(r)?r.forEach(A=>a[A]=null):sn(a,r),s.set(e,a),a)}function fA(e,t){return!e||!qA(t)?!1:(t=t.slice(2).replace(/Once$/,""),Kt(e,t[0].toLowerCase()+t.slice(1))||Kt(e,qr(t))||Kt(e,t))}let ze=null,mA=null;function mo(e){const t=ze;return ze=e,mA=e&&e.type.__scopeId||null,t}function bl(e){mA=e}function Ul(){mA=null}function we(e,t=ze,n){if(!t||e._n)return e;const s=(...i)=>{s._d&&mq(-1);const r=mo(t),a=e(...i);return mo(r),s._d&&mq(1),a};return s._n=!0,s._c=!0,s._d=!0,s}function XA(e){const{type:t,vnode:n,proxy:s,withProxy:i,props:r,propsOptions:[a],slots:o,attrs:A,emit:l,render:u,renderCache:c,data:h,setupState:q,ctx:p,inheritAttrs:g}=e;let d,D;const f=mo(e);try{if(n.shapeFlag&4){const N=i||s;d=Pn(u.call(N,N,c,r,q,h,p)),D=A}else{const N=t;d=Pn(N.length>1?N(r,{attrs:A,slots:o,emit:l}):N(r,null)),D=t.props?A:xm(A)}}catch(N){kr.length=0,Oa(N,e,1),d=Ot(zn)}let y=d;if(D&&g!==!1){const N=Object.keys(D),{shapeFlag:M}=y;N.length&&M&7&&(a&&N.some(Nl)&&(D=Fm(D,a)),y=Jr(y,D))}return n.dirs&&(y.dirs=y.dirs?y.dirs.concat(n.dirs):n.dirs),n.transition&&(y.transition=n.transition),d=y,mo(f),d}function _m(e){let t;for(let n=0;n<e.length;n++){const s=e[n];if(Kr(s)){if(s.type!==zn||s.children==="v-if"){if(t)return;t=s}}else return}return t}const xm=e=>{let t;for(const n in e)(n==="class"||n==="style"||qA(n))&&((t||(t={}))[n]=e[n]);return t},Fm=(e,t)=>{const n={};for(const s in e)(!Nl(s)||!(s.slice(9)in t))&&(n[s]=e[s]);return n};function Zm(e,t,n){const{props:s,children:i,component:r}=e,{props:a,children:o,patchFlag:A}=t,l=r.emitsOptions;if(t.dirs||t.transition)return!0;if(n&&A>=0){if(A&1024)return!0;if(A&16)return s?cq(s,a,l):!!a;if(A&8){const u=t.dynamicProps;for(let c=0;c<u.length;c++){const h=u[c];if(a[h]!==s[h]&&!fA(l,h))return!0}}}else return(i||o)&&(!o||!o.$stable)?!0:s===a?!1:s?a?cq(s,a,l):!0:!!a;return!1}function cq(e,t,n){const s=Object.keys(t);if(s.length!==Object.keys(e).length)return!0;for(let i=0;i<s.length;i++){const r=s[i];if(t[r]!==e[r]&&!fA(n,r))return!0}return!1}function Ql({vnode:e,parent:t},n){for(;t&&t.subTree===e;)(e=t.vnode).el=n,t=t.parent}const Km=e=>e.__isSuspense,Jm={name:"Suspense",__isSuspense:!0,process(e,t,n,s,i,r,a,o,A,l){e==null?Lm(t,n,s,i,r,a,o,A,l):zm(e,t,n,s,i,a,o,A,l)},hydrate:jm,create:vl,normalize:Hm},$A=Jm;function Fr(e,t){const n=e.props&&e.props[t];Yt(n)&&n()}function Lm(e,t,n,s,i,r,a,o,A){const{p:l,o:{createElement:u}}=A,c=u("div"),h=e.suspense=vl(e,i,s,t,c,n,r,a,o,A);l(null,h.pendingBranch=e.ssContent,c,null,s,h,r,a),h.deps>0?(Fr(e,"onPending"),Fr(e,"onFallback"),l(null,e.ssFallback,t,n,s,null,r,a),ji(h,e.ssFallback)):h.resolve()}function zm(e,t,n,s,i,r,a,o,{p:A,um:l,o:{createElement:u}}){const c=t.suspense=e.suspense;c.vnode=t,t.el=e.el;const h=t.ssContent,q=t.ssFallback,{activeBranch:p,pendingBranch:g,isInFallback:d,isHydrating:D}=c;if(g)c.pendingBranch=h,Ss(h,g)?(A(g,h,c.hiddenContainer,null,i,c,r,a,o),c.deps<=0?c.resolve():d&&(A(p,q,n,s,i,null,r,a,o),ji(c,q))):(c.pendingId++,D?(c.isHydrating=!1,c.activeBranch=g):l(g,i,c),c.deps=0,c.effects.length=0,c.hiddenContainer=u("div"),d?(A(null,h,c.hiddenContainer,null,i,c,r,a,o),c.deps<=0?c.resolve():(A(p,q,n,s,i,null,r,a,o),ji(c,q))):p&&Ss(h,p)?(A(p,h,n,s,i,c,r,a,o),c.resolve(!0)):(A(null,h,c.hiddenContainer,null,i,c,r,a,o),c.deps<=0&&c.resolve()));else if(p&&Ss(h,p))A(p,h,n,s,i,c,r,a,o),ji(c,h);else if(Fr(t,"onPending"),c.pendingBranch=h,c.pendingId++,A(null,h,c.hiddenContainer,null,i,c,r,a,o),c.deps<=0)c.resolve();else{const{timeout:f,pendingId:y}=c;f>0?setTimeout(()=>{c.pendingId===y&&c.fallback(q)},f):f===0&&c.fallback(q)}}function vl(e,t,n,s,i,r,a,o,A,l,u=!1){const{p:c,m:h,um:q,n:p,o:{parentNode:g,remove:d}}=l,D=Yr(e.props&&e.props.timeout),f={vnode:e,parent:t,parentComponent:n,isSVG:a,container:s,hiddenContainer:i,anchor:r,deps:0,pendingId:0,timeout:typeof D=="number"?D:-1,activeBranch:null,pendingBranch:null,isInFallback:!0,isHydrating:u,isUnmounted:!1,effects:[],resolve(y=!1){const{vnode:N,activeBranch:M,pendingBranch:P,pendingId:O,effects:E,parentComponent:V,container:C}=f;if(f.isHydrating)f.isHydrating=!1;else if(!y){const J=M&&P.transition&&P.transition.mode==="out-in";J&&(M.transition.afterLeave=()=>{O===f.pendingId&&h(P,C,K,0)});let{anchor:K}=f;M&&(K=p(M),q(M,V,f,!0)),J||h(P,C,K,0)}ji(f,P),f.pendingBranch=null,f.isInFallback=!1;let B=f.parent,v=!1;for(;B;){if(B.pendingBranch){B.effects.push(...E),v=!0;break}B=B.parent}v||Ip(E),f.effects=[],Fr(N,"onResolve")},fallback(y){if(!f.pendingBranch)return;const{vnode:N,activeBranch:M,parentComponent:P,container:O,isSVG:E}=f;Fr(N,"onFallback");const V=p(M),C=()=>{!f.isInFallback||(c(null,y,O,V,P,null,E,o,A),ji(f,y))},B=y.transition&&y.transition.mode==="out-in";B&&(M.transition.afterLeave=C),f.isInFallback=!0,q(M,P,null,!0),B||C()},move(y,N,M){f.activeBranch&&h(f.activeBranch,y,N,M),f.container=y},next(){return f.activeBranch&&p(f.activeBranch)},registerDep(y,N){const M=!!f.pendingBranch;M&&f.deps++;const P=y.vnode.el;y.asyncDep.catch(O=>{Oa(O,y,0)}).then(O=>{if(y.isUnmounted||f.isUnmounted||f.pendingId!==y.suspenseId)return;y.asyncResolved=!0;const{vnode:E}=y;kc(y,O,!1),P&&(E.el=P);const V=!P&&y.subTree.el;N(y,E,g(P||y.subTree.el),P?null:p(y.subTree),f,a,A),V&&d(V),Ql(y,E.el),M&&--f.deps===0&&f.resolve()})},unmount(y,N){f.isUnmounted=!0,f.activeBranch&&q(f.activeBranch,n,y,N),f.pendingBranch&&q(f.pendingBranch,n,y,N)}};return f}function jm(e,t,n,s,i,r,a,o,A){const l=t.suspense=vl(t,s,n,e.parentNode,document.createElement("div"),null,i,r,a,o,!0),u=A(e,l.pendingBranch=t.ssContent,n,l,r,a);return l.deps===0&&l.resolve(),u}function Hm(e){const{shapeFlag:t,children:n}=e,s=t&32;e.ssContent=lq(s?n.default:n),e.ssFallback=s?lq(n.fallback):Ot(zn)}function lq(e){let t;if(Yt(e)){const n=Zr&&e._c;n&&(e._d=!1,vt()),e=e(),n&&(e._d=!0,t=ks,Jp())}return Rt(e)&&(e=_m(e)),e=Pn(e),t&&!e.dynamicChildren&&(e.dynamicChildren=t.filter(n=>n!==e)),e}function Xm(e,t){t&&t.pendingBranch?Rt(e)?t.effects.push(...e):t.effects.push(e):Ip(e)}function ji(e,t){e.activeBranch=t;const{vnode:n,parentComponent:s}=e,i=n.el=t.el;s&&s.subTree===n&&(s.vnode.el=i,Ql(s,i))}function $m(e,t){if(Qe){let n=Qe.provides;const s=Qe.parent&&Qe.parent.provides;s===n&&(n=Qe.provides=Object.create(s)),n[e]=t}}function tc(e,t,n=!1){const s=Qe||ze;if(s){const i=s.parent==null?s.vnode.appContext&&s.vnode.appContext.provides:s.parent.provides;if(i&&e in i)return i[e];if(arguments.length>1)return n&&Yt(t)?t.call(s.proxy):t}}const uq={};function co(e,t,n){return Bp(e,t,n)}function Bp(e,t,{immediate:n,deep:s,flush:i,onTrack:r,onTrigger:a}=Ae){const o=Qe;let A,l=!1,u=!1;if(xe(e)?(A=()=>e.value,l=fp(e)):zi(e)?(A=()=>e,s=!0):Rt(e)?(u=!0,l=e.some(zi),A=()=>e.map(D=>{if(xe(D))return D.value;if(zi(D))return Ai(D);if(Yt(D))return Bs(D,o,2)})):Yt(e)?t?A=()=>Bs(e,o,2):A=()=>{if(!(o&&o.isUnmounted))return c&&c(),bn(e,o,3,[h])}:A=Tn,t&&s){const D=A;A=()=>Ai(D())}let c,h=D=>{c=d.onStop=()=>{Bs(D,o,4)}};if(Lr)return h=Tn,t?n&&bn(t,o,3,[A(),u?[]:void 0,h]):A(),Tn;let q=u?[]:uq;const p=()=>{if(!!d.active)if(t){const D=d.run();(s||l||(u?D.some((f,y)=>Rr(f,q[y])):Rr(D,q)))&&(c&&c(),bn(t,o,3,[D,q===uq?void 0:q,h]),q=D)}else d.run()};p.allowRecurse=!!t;let g;i==="sync"?g=p:i==="post"?g=()=>on(p,o&&o.suspense):g=()=>{!o||o.isMounted?Ym(p):p()};const d=new El(A,g);return t?n?p():q=d.run():i==="post"?on(d.run.bind(d),o&&o.suspense):d.run(),()=>{d.stop(),o&&o.scope&&Vl(o.scope.effects,d)}}function t0(e,t,n){const s=this.proxy,i=Be(e)?e.includes(".")?kp(s,e):()=>s[e]:e.bind(s,s);let r;Yt(t)?r=t:(r=t.handler,n=t);const a=Qe;Gs(this);const o=Bp(i,r.bind(s),n);return a?Gs(a):Ts(),o}function kp(e,t){const n=t.split(".");return()=>{let s=e;for(let i=0;i<n.length&&s;i++)s=s[n[i]];return s}}function Ai(e,t){if(!Ee(e)||e.__v_skip||(t=t||new Set,t.has(e)))return e;if(t.add(e),xe(e))Ai(e.value,t);else if(Rt(e))for(let n=0;n<e.length;n++)Ai(e[n],t);else if(hA(e)||Li(e))e.forEach(n=>{Ai(n,t)});else if(ap(e))for(const n in e)Ai(e[n],t);return e}function oe(e){return Yt(e)?{setup:e,name:e.name}:e}const No=e=>!!e.type.__asyncLoader,Tp=e=>e.type.__isKeepAlive;function e0(e,t){bp(e,"a",t)}function n0(e,t){bp(e,"da",t)}function bp(e,t,n=Qe){const s=e.__wdc||(e.__wdc=()=>{let i=n;for(;i;){if(i.isDeactivated)return;i=i.parent}return e()});if(NA(t,s,n),n){let i=n.parent;for(;i&&i.parent;)Tp(i.parent.vnode)&&s0(s,t,n,i),i=i.parent}}function s0(e,t,n,s){const i=NA(t,e,s,!0);Up(()=>{Vl(s[t],i)},n)}function NA(e,t,n=Qe,s=!1){if(n){const i=n[e]||(n[e]=[]),r=t.__weh||(t.__weh=(...a)=>{if(n.isUnmounted)return;hr(),Gs(n);const o=bn(t,n,e,a);return Ts(),pr(),o});return s?i.unshift(r):i.push(r),r}}const ds=e=>(t,n=Qe)=>(!Lr||e==="sp")&&NA(e,t,n),i0=ds("bm"),r0=ds("m"),a0=ds("bu"),o0=ds("u"),A0=ds("bum"),Up=ds("um"),c0=ds("sp"),l0=ds("rtg"),u0=ds("rtc");function q0(e,t=Qe){NA("ec",e,t)}let Pc=!0;function h0(e){const t=vp(e),n=e.proxy,s=e.ctx;Pc=!1,t.beforeCreate&&qq(t.beforeCreate,e,"bc");const{data:i,computed:r,methods:a,watch:o,provide:A,inject:l,created:u,beforeMount:c,mounted:h,beforeUpdate:q,updated:p,activated:g,deactivated:d,beforeDestroy:D,beforeUnmount:f,destroyed:y,unmounted:N,render:M,renderTracked:P,renderTriggered:O,errorCaptured:E,serverPrefetch:V,expose:C,inheritAttrs:B,components:v,directives:J,filters:K}=t;if(l&&p0(l,s,null,e.appContext.config.unwrapInjectedRef),a)for(const z in a){const dt=a[z];Yt(dt)&&(s[z]=dt.bind(n))}if(i){const z=i.call(n,n);Ee(z)&&(e.data=Cl(z))}if(Pc=!0,r)for(const z in r){const dt=r[z],at=Yt(dt)?dt.bind(n,n):Yt(dt.get)?dt.get.bind(n,n):Tn,St=!Yt(dt)&&Yt(dt.set)?dt.set.bind(n):Tn,gt=Nn({get:at,set:St});Object.defineProperty(s,z,{enumerable:!0,configurable:!0,get:()=>gt.value,set:kt=>gt.value=kt})}if(o)for(const z in o)Qp(o[z],s,n,z);if(A){const z=Yt(A)?A.call(n):A;Reflect.ownKeys(z).forEach(dt=>{$m(dt,z[dt])})}u&&qq(u,e,"c");function tt(z,dt){Rt(dt)?dt.forEach(at=>z(at.bind(n))):dt&&z(dt.bind(n))}if(tt(i0,c),tt(r0,h),tt(a0,q),tt(o0,p),tt(e0,g),tt(n0,d),tt(q0,E),tt(u0,P),tt(l0,O),tt(A0,f),tt(Up,N),tt(c0,V),Rt(C))if(C.length){const z=e.exposed||(e.exposed={});C.forEach(dt=>{Object.defineProperty(z,dt,{get:()=>n[dt],set:at=>n[dt]=at})})}else e.exposed||(e.exposed={});M&&e.render===Tn&&(e.render=M),B!=null&&(e.inheritAttrs=B),v&&(e.components=v),J&&(e.directives=J)}function p0(e,t,n=Tn,s=!1){Rt(e)&&(e=Ic(e));for(const i in e){const r=e[i];let a;Ee(r)?"default"in r?a=tc(r.from||i,r.default,!0):a=tc(r.from||i):a=tc(r),xe(a)&&s?Object.defineProperty(t,i,{enumerable:!0,configurable:!0,get:()=>a.value,set:o=>a.value=o}):t[i]=a}}function qq(e,t,n){bn(Rt(e)?e.map(s=>s.bind(t.proxy)):e.bind(t.proxy),t,n)}function Qp(e,t,n,s){const i=s.includes(".")?kp(n,s):()=>n[s];if(Be(e)){const r=t[e];Yt(r)&&co(i,r)}else if(Yt(e))co(i,e.bind(n));else if(Ee(e))if(Rt(e))e.forEach(r=>Qp(r,t,n,s));else{const r=Yt(e.handler)?e.handler.bind(n):t[e.handler];Yt(r)&&co(i,r,e)}}function vp(e){const t=e.type,{mixins:n,extends:s}=t,{mixins:i,optionsCache:r,config:{optionMergeStrategies:a}}=e.appContext,o=r.get(t);let A;return o?A=o:!i.length&&!n&&!s?A=t:(A={},i.length&&i.forEach(l=>Vo(A,l,a,!0)),Vo(A,t,a)),r.set(t,A),A}function Vo(e,t,n,s=!1){const{mixins:i,extends:r}=t;r&&Vo(e,r,n,!0),i&&i.forEach(a=>Vo(e,a,n,!0));for(const a in t)if(!(s&&a==="expose")){const o=d0[a]||n&&n[a];e[a]=o?o(e[a],t[a]):t[a]}return e}const d0={data:hq,props:si,emits:si,methods:si,computed:si,beforeCreate:He,created:He,beforeMount:He,mounted:He,beforeUpdate:He,updated:He,beforeDestroy:He,beforeUnmount:He,destroyed:He,unmounted:He,activated:He,deactivated:He,errorCaptured:He,serverPrefetch:He,components:si,directives:si,watch:g0,provide:hq,inject:D0};function hq(e,t){return t?e?function(){return sn(Yt(e)?e.call(this,this):e,Yt(t)?t.call(this,this):t)}:t:e}function D0(e,t){return si(Ic(e),Ic(t))}function Ic(e){if(Rt(e)){const t={};for(let n=0;n<e.length;n++)t[e[n]]=e[n];return t}return e}function He(e,t){return e?[...new Set([].concat(e,t))]:t}function si(e,t){return e?sn(sn(Object.create(null),e),t):t}function g0(e,t){if(!e)return t;if(!t)return e;const n=sn(Object.create(null),e);for(const s in t)n[s]=He(e[s],t[s]);return n}function f0(e,t,n,s=!1){const i={},r={};go(r,VA,1),e.propsDefaults=Object.create(null),Rp(e,t,i,r);for(const a in e.propsOptions[0])a in i||(i[a]=void 0);n?e.props=s?i:Cm(i):e.type.props?e.props=i:e.props=r,e.attrs=r}function m0(e,t,n,s){const{props:i,attrs:r,vnode:{patchFlag:a}}=e,o=$t(i),[A]=e.propsOptions;let l=!1;if((s||a>0)&&!(a&16)){if(a&8){const u=e.vnode.dynamicProps;for(let c=0;c<u.length;c++){let h=u[c];if(fA(e.emitsOptions,h))continue;const q=t[h];if(A)if(Kt(r,h))q!==r[h]&&(r[h]=q,l=!0);else{const p=Ln(h);i[p]=Sc(A,o,p,q,e,!1)}else q!==r[h]&&(r[h]=q,l=!0)}}}else{Rp(e,t,i,r)&&(l=!0);let u;for(const c in o)(!t||!Kt(t,c)&&((u=qr(c))===c||!Kt(t,u)))&&(A?n&&(n[c]!==void 0||n[u]!==void 0)&&(i[c]=Sc(A,o,c,void 0,e,!0)):delete i[c]);if(r!==o)for(const c in r)(!t||!Kt(t,c)&&!0)&&(delete r[c],l=!0)}l&&cs(e,"set","$attrs")}function Rp(e,t,n,s){const[i,r]=e.propsOptions;let a=!1,o;if(t)for(let A in t){if(oo(A))continue;const l=t[A];let u;i&&Kt(i,u=Ln(A))?!r||!r.includes(u)?n[u]=l:(o||(o={}))[u]=l:fA(e.emitsOptions,A)||(!(A in s)||l!==s[A])&&(s[A]=l,a=!0)}if(r){const A=$t(n),l=o||Ae;for(let u=0;u<r.length;u++){const c=r[u];n[c]=Sc(i,A,c,l[c],e,!Kt(l,c))}}return a}function Sc(e,t,n,s,i,r){const a=e[n];if(a!=null){const o=Kt(a,"default");if(o&&s===void 0){const A=a.default;if(a.type!==Function&&Yt(A)){const{propsDefaults:l}=i;n in l?s=l[n]:(Gs(i),s=l[n]=A.call(null,t),Ts())}else s=A}a[0]&&(r&&!o?s=!1:a[1]&&(s===""||s===qr(n))&&(s=!0))}return s}function Yp(e,t,n=!1){const s=t.propsCache,i=s.get(e);if(i)return i;const r=e.props,a={},o=[];let A=!1;if(!Yt(e)){const u=c=>{A=!0;const[h,q]=Yp(c,t,!0);sn(a,h),q&&o.push(...q)};!n&&t.mixins.length&&t.mixins.forEach(u),e.extends&&u(e.extends),e.mixins&&e.mixins.forEach(u)}if(!r&&!A)return s.set(e,Ji),Ji;if(Rt(r))for(let u=0;u<r.length;u++){const c=Ln(r[u]);pq(c)&&(a[c]=Ae)}else if(r)for(const u in r){const c=Ln(u);if(pq(c)){const h=r[u],q=a[c]=Rt(h)||Yt(h)?{type:h}:h;if(q){const p=gq(Boolean,q.type),g=gq(String,q.type);q[0]=p>-1,q[1]=g<0||p<g,(p>-1||Kt(q,"default"))&&o.push(c)}}}const l=[a,o];return s.set(e,l),l}function pq(e){return e[0]!=="$"}function dq(e){const t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:e===null?"null":""}function Dq(e,t){return dq(e)===dq(t)}function gq(e,t){return Rt(t)?t.findIndex(n=>Dq(n,e)):Yt(t)&&Dq(t,e)?0:-1}const Gp=e=>e[0]==="_"||e==="$stable",Rl=e=>Rt(e)?e.map(Pn):[Pn(e)],N0=(e,t,n)=>{const s=we((...i)=>Rl(t(...i)),n);return s._c=!1,s},_p=(e,t,n)=>{const s=e._ctx;for(const i in e){if(Gp(i))continue;const r=e[i];if(Yt(r))t[i]=N0(i,r,s);else if(r!=null){const a=Rl(r);t[i]=()=>a}}},xp=(e,t)=>{const n=Rl(t);e.slots.default=()=>n},V0=(e,t)=>{if(e.vnode.shapeFlag&32){const n=t._;n?(e.slots=$t(t),go(t,"_",n)):_p(t,e.slots={})}else e.slots={},t&&xp(e,t);go(e.slots,VA,1)},M0=(e,t,n)=>{const{vnode:s,slots:i}=e;let r=!0,a=Ae;if(s.shapeFlag&32){const o=t._;o?n&&o===1?r=!1:(sn(i,t),!n&&o===1&&delete i._):(r=!t.$stable,_p(t,i)),a=t}else t&&(xp(e,t),a={default:1});if(r)for(const o in i)!Gp(o)&&!(o in a)&&delete i[o]};function Mo(e,t){const n=ze;if(n===null)return e;const s=MA(n)||n.proxy,i=e.dirs||(e.dirs=[]);for(let r=0;r<t.length;r++){let[a,o,A,l=Ae]=t[r];Yt(a)&&(a={mounted:a,updated:a}),a.deep&&Ai(o),i.push({dir:a,instance:s,value:o,oldValue:void 0,arg:A,modifiers:l})}return e}function ei(e,t,n,s){const i=e.dirs,r=t&&t.dirs;for(let a=0;a<i.length;a++){const o=i[a];r&&(o.oldValue=r[a].value);let A=o.dir[s];A&&(hr(),bn(A,n,8,[e.el,o,e,t]),pr())}}function Fp(){return{app:null,config:{isNativeTag:jf,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let O0=0;function y0(e,t){return function(s,i=null){Yt(s)||(s=Object.assign({},s)),i!=null&&!Ee(i)&&(i=null);const r=Fp(),a=new Set;let o=!1;const A=r.app={_uid:O0++,_component:s,_props:i,_container:null,_context:r,_instance:null,version:L0,get config(){return r.config},set config(l){},use(l,...u){return a.has(l)||(l&&Yt(l.install)?(a.add(l),l.install(A,...u)):Yt(l)&&(a.add(l),l(A,...u))),A},mixin(l){return r.mixins.includes(l)||r.mixins.push(l),A},component(l,u){return u?(r.components[l]=u,A):r.components[l]},directive(l,u){return u?(r.directives[l]=u,A):r.directives[l]},mount(l,u,c){if(!o){const h=Ot(s,i);return h.appContext=r,u&&t?t(h,l):e(h,l,c),o=!0,A._container=l,l.__vue_app__=A,MA(h.component)||h.component.proxy}},unmount(){o&&(e(null,A._container),delete A._container.__vue_app__)},provide(l,u){return r.provides[l]=u,A}};return A}}function Cc(e,t,n,s,i=!1){if(Rt(e)){e.forEach((h,q)=>Cc(h,t&&(Rt(t)?t[q]:t),n,s,i));return}if(No(s)&&!i)return;const r=s.shapeFlag&4?MA(s.component)||s.component.proxy:s.el,a=i?null:r,{i:o,r:A}=e,l=t&&t.r,u=o.refs===Ae?o.refs={}:o.refs,c=o.setupState;if(l!=null&&l!==A&&(Be(l)?(u[l]=null,Kt(c,l)&&(c[l]=null)):xe(l)&&(l.value=null)),Yt(A))Bs(A,o,12,[a,u]);else{const h=Be(A),q=xe(A);if(h||q){const p=()=>{if(e.f){const g=h?u[A]:A.value;i?Rt(g)&&Vl(g,r):Rt(g)?g.includes(r)||g.push(r):h?(u[A]=[r],Kt(c,A)&&(c[A]=u[A])):(A.value=[r],e.k&&(u[e.k]=A.value))}else h?(u[A]=a,Kt(c,A)&&(c[A]=a)):xe(A)&&(A.value=a,e.k&&(u[e.k]=a))};a?(p.id=-1,on(p,n)):p()}}}const on=Xm;function W0(e){return E0(e)}function E0(e,t){const n=nm();n.__VUE__=!0;const{insert:s,remove:i,patchProp:r,createElement:a,createText:o,createComment:A,setText:l,setElementText:u,parentNode:c,nextSibling:h,setScopeId:q=Tn,cloneNode:p,insertStaticContent:g}=e,d=(b,Y,R,Z=null,L=null,X=null,et=!1,$=null,ot=!!Y.dynamicChildren)=>{if(b===Y)return;b&&!Ss(b,Y)&&(Z=ie(b),Gt(b,L,X,!0),b=null),Y.patchFlag===-2&&(ot=!1,Y.dynamicChildren=null);const{type:st,ref:Mt,shapeFlag:mt}=Y;switch(st){case xl:D(b,Y,R,Z);break;case zn:f(b,Y,R,Z);break;case lo:b==null&&y(Y,R,Z,et);break;case $e:J(b,Y,R,Z,L,X,et,$,ot);break;default:mt&1?P(b,Y,R,Z,L,X,et,$,ot):mt&6?K(b,Y,R,Z,L,X,et,$,ot):(mt&64||mt&128)&&st.process(b,Y,R,Z,L,X,et,$,ot,Nt)}Mt!=null&&L&&Cc(Mt,b&&b.ref,X,Y||b,!Y)},D=(b,Y,R,Z)=>{if(b==null)s(Y.el=o(Y.children),R,Z);else{const L=Y.el=b.el;Y.children!==b.children&&l(L,Y.children)}},f=(b,Y,R,Z)=>{b==null?s(Y.el=A(Y.children||""),R,Z):Y.el=b.el},y=(b,Y,R,Z)=>{[b.el,b.anchor]=g(b.children,Y,R,Z,b.el,b.anchor)},N=({el:b,anchor:Y},R,Z)=>{let L;for(;b&&b!==Y;)L=h(b),s(b,R,Z),b=L;s(Y,R,Z)},M=({el:b,anchor:Y})=>{let R;for(;b&&b!==Y;)R=h(b),i(b),b=R;i(Y)},P=(b,Y,R,Z,L,X,et,$,ot)=>{et=et||Y.type==="svg",b==null?O(Y,R,Z,L,X,et,$,ot):C(b,Y,L,X,et,$,ot)},O=(b,Y,R,Z,L,X,et,$)=>{let ot,st;const{type:Mt,props:mt,shapeFlag:Wt,transition:j,patchFlag:T,dirs:k}=b;if(b.el&&p!==void 0&&T===-1)ot=b.el=p(b.el);else{if(ot=b.el=a(b.type,X,mt&&mt.is,mt),Wt&8?u(ot,b.children):Wt&16&&V(b.children,ot,null,Z,L,X&&Mt!=="foreignObject",et,$),k&&ei(b,null,Z,"created"),mt){for(const W in mt)W!=="value"&&!oo(W)&&r(ot,W,null,mt[W],X,b.children,Z,L,Dt);"value"in mt&&r(ot,"value",null,mt.value),(st=mt.onVnodeBeforeMount)&&xn(st,Z,b)}E(ot,b,b.scopeId,et,Z)}k&&ei(b,null,Z,"beforeMount");const m=(!L||L&&!L.pendingBranch)&&j&&!j.persisted;m&&j.beforeEnter(ot),s(ot,Y,R),((st=mt&&mt.onVnodeMounted)||m||k)&&on(()=>{st&&xn(st,Z,b),m&&j.enter(ot),k&&ei(b,null,Z,"mounted")},L)},E=(b,Y,R,Z,L)=>{if(R&&q(b,R),Z)for(let X=0;X<Z.length;X++)q(b,Z[X]);if(L){let X=L.subTree;if(Y===X){const et=L.vnode;E(b,et,et.scopeId,et.slotScopeIds,L.parent)}}},V=(b,Y,R,Z,L,X,et,$,ot=0)=>{for(let st=ot;st<b.length;st++){const Mt=b[st]=$?Ps(b[st]):Pn(b[st]);d(null,Mt,Y,R,Z,L,X,et,$)}},C=(b,Y,R,Z,L,X,et)=>{const $=Y.el=b.el;let{patchFlag:ot,dynamicChildren:st,dirs:Mt}=Y;ot|=b.patchFlag&16;const mt=b.props||Ae,Wt=Y.props||Ae;let j;R&&ni(R,!1),(j=Wt.onVnodeBeforeUpdate)&&xn(j,R,Y,b),Mt&&ei(Y,b,R,"beforeUpdate"),R&&ni(R,!0);const T=L&&Y.type!=="foreignObject";if(st?B(b.dynamicChildren,st,$,R,Z,T,X):et||at(b,Y,$,null,R,Z,T,X,!1),ot>0){if(ot&16)v($,Y,mt,Wt,R,Z,L);else if(ot&2&&mt.class!==Wt.class&&r($,"class",null,Wt.class,L),ot&4&&r($,"style",mt.style,Wt.style,L),ot&8){const k=Y.dynamicProps;for(let m=0;m<k.length;m++){const W=k[m],w=mt[W],_=Wt[W];(_!==w||W==="value")&&r($,W,w,_,L,b.children,R,Z,Dt)}}ot&1&&b.children!==Y.children&&u($,Y.children)}else!et&&st==null&&v($,Y,mt,Wt,R,Z,L);((j=Wt.onVnodeUpdated)||Mt)&&on(()=>{j&&xn(j,R,Y,b),Mt&&ei(Y,b,R,"updated")},Z)},B=(b,Y,R,Z,L,X,et)=>{for(let $=0;$<Y.length;$++){const ot=b[$],st=Y[$],Mt=ot.el&&(ot.type===$e||!Ss(ot,st)||ot.shapeFlag&70)?c(ot.el):R;d(ot,st,Mt,null,Z,L,X,et,!0)}},v=(b,Y,R,Z,L,X,et)=>{if(R!==Z){for(const $ in Z){if(oo($))continue;const ot=Z[$],st=R[$];ot!==st&&$!=="value"&&r(b,$,st,ot,et,Y.children,L,X,Dt)}if(R!==Ae)for(const $ in R)!oo($)&&!($ in Z)&&r(b,$,R[$],null,et,Y.children,L,X,Dt);"value"in Z&&r(b,"value",R.value,Z.value)}},J=(b,Y,R,Z,L,X,et,$,ot)=>{const st=Y.el=b?b.el:o(""),Mt=Y.anchor=b?b.anchor:o("");let{patchFlag:mt,dynamicChildren:Wt,slotScopeIds:j}=Y;j&&($=$?$.concat(j):j),b==null?(s(st,R,Z),s(Mt,R,Z),V(Y.children,R,Mt,L,X,et,$,ot)):mt>0&&mt&64&&Wt&&b.dynamicChildren?(B(b.dynamicChildren,Wt,R,L,X,et,$),(Y.key!=null||L&&Y===L.subTree)&&Zp(b,Y,!0)):at(b,Y,R,Mt,L,X,et,$,ot)},K=(b,Y,R,Z,L,X,et,$,ot)=>{Y.slotScopeIds=$,b==null?Y.shapeFlag&512?L.ctx.activate(Y,R,Z,et,ot):rt(Y,R,Z,L,X,et,ot):tt(b,Y,ot)},rt=(b,Y,R,Z,L,X,et)=>{const $=b.component=R0(b,Z,L);if(Tp(b)&&($.ctx.renderer=Nt),G0($),$.asyncDep){if(L&&L.registerDep($,z),!b.el){const ot=$.subTree=Ot(zn);f(null,ot,Y,R)}return}z($,b,Y,R,L,X,et)},tt=(b,Y,R)=>{const Z=Y.component=b.component;if(Zm(b,Y,R))if(Z.asyncDep&&!Z.asyncResolved){dt(Z,Y,R);return}else Z.next=Y,Rm(Z.update),Z.update();else Y.component=b.component,Y.el=b.el,Z.vnode=Y},z=(b,Y,R,Z,L,X,et)=>{const $=()=>{if(b.isMounted){let{next:Mt,bu:mt,u:Wt,parent:j,vnode:T}=b,k=Mt,m;ni(b,!1),Mt?(Mt.el=T.el,dt(b,Mt,et)):Mt=T,mt&&Ao(mt),(m=Mt.props&&Mt.props.onVnodeBeforeUpdate)&&xn(m,j,Mt,T),ni(b,!0);const W=XA(b),w=b.subTree;b.subTree=W,d(w,W,c(w.el),ie(w),b,L,X),Mt.el=W.el,k===null&&Ql(b,W.el),Wt&&on(Wt,L),(m=Mt.props&&Mt.props.onVnodeUpdated)&&on(()=>xn(m,j,Mt,T),L)}else{let Mt;const{el:mt,props:Wt}=Y,{bm:j,m:T,parent:k}=b,m=No(Y);if(ni(b,!1),j&&Ao(j),!m&&(Mt=Wt&&Wt.onVnodeBeforeMount)&&xn(Mt,k,Y),ni(b,!0),mt&&be){const W=()=>{b.subTree=XA(b),be(mt,b.subTree,b,L,null)};m?Y.type.__asyncLoader().then(()=>!b.isUnmounted&&W()):W()}else{const W=b.subTree=XA(b);d(null,W,R,Z,b,L,X),Y.el=W.el}if(T&&on(T,L),!m&&(Mt=Wt&&Wt.onVnodeMounted)){const W=Y;on(()=>xn(Mt,k,W),L)}Y.shapeFlag&256&&b.a&&on(b.a,L),b.isMounted=!0,Y=R=Z=null}},ot=b.effect=new El($,()=>Wp(b.update),b.scope),st=b.update=ot.run.bind(ot);st.id=b.uid,ni(b,!0),st()},dt=(b,Y,R)=>{Y.component=b;const Z=b.vnode.props;b.vnode=Y,b.next=null,m0(b,Y.props,Z,R),M0(b,Y.children,R),hr(),Tl(void 0,b.update),pr()},at=(b,Y,R,Z,L,X,et,$,ot=!1)=>{const st=b&&b.children,Mt=b?b.shapeFlag:0,mt=Y.children,{patchFlag:Wt,shapeFlag:j}=Y;if(Wt>0){if(Wt&128){gt(st,mt,R,Z,L,X,et,$,ot);return}else if(Wt&256){St(st,mt,R,Z,L,X,et,$,ot);return}}j&8?(Mt&16&&Dt(st,L,X),mt!==st&&u(R,mt)):Mt&16?j&16?gt(st,mt,R,Z,L,X,et,$,ot):Dt(st,L,X,!0):(Mt&8&&u(R,""),j&16&&V(mt,R,Z,L,X,et,$,ot))},St=(b,Y,R,Z,L,X,et,$,ot)=>{b=b||Ji,Y=Y||Ji;const st=b.length,Mt=Y.length,mt=Math.min(st,Mt);let Wt;for(Wt=0;Wt<mt;Wt++){const j=Y[Wt]=ot?Ps(Y[Wt]):Pn(Y[Wt]);d(b[Wt],j,R,null,L,X,et,$,ot)}st>Mt?Dt(b,L,X,!0,!1,mt):V(Y,R,Z,L,X,et,$,ot,mt)},gt=(b,Y,R,Z,L,X,et,$,ot)=>{let st=0;const Mt=Y.length;let mt=b.length-1,Wt=Mt-1;for(;st<=mt&&st<=Wt;){const j=b[st],T=Y[st]=ot?Ps(Y[st]):Pn(Y[st]);if(Ss(j,T))d(j,T,R,null,L,X,et,$,ot);else break;st++}for(;st<=mt&&st<=Wt;){const j=b[mt],T=Y[Wt]=ot?Ps(Y[Wt]):Pn(Y[Wt]);if(Ss(j,T))d(j,T,R,null,L,X,et,$,ot);else break;mt--,Wt--}if(st>mt){if(st<=Wt){const j=Wt+1,T=j<Mt?Y[j].el:Z;for(;st<=Wt;)d(null,Y[st]=ot?Ps(Y[st]):Pn(Y[st]),R,T,L,X,et,$,ot),st++}}else if(st>Wt)for(;st<=mt;)Gt(b[st],L,X,!0),st++;else{const j=st,T=st,k=new Map;for(st=T;st<=Wt;st++){const bt=Y[st]=ot?Ps(Y[st]):Pn(Y[st]);bt.key!=null&&k.set(bt.key,st)}let m,W=0;const w=Wt-T+1;let _=!1,ct=0;const ht=new Array(w);for(st=0;st<w;st++)ht[st]=0;for(st=j;st<=mt;st++){const bt=b[st];if(W>=w){Gt(bt,L,X,!0);continue}let te;if(bt.key!=null)te=k.get(bt.key);else for(m=T;m<=Wt;m++)if(ht[m-T]===0&&Ss(bt,Y[m])){te=m;break}te===void 0?Gt(bt,L,X,!0):(ht[te-T]=st+1,te>=ct?ct=te:_=!0,d(bt,Y[te],R,null,L,X,et,$,ot),W++)}const Bt=_?P0(ht):Ji;for(m=Bt.length-1,st=w-1;st>=0;st--){const bt=T+st,te=Y[bt],Je=bt+1<Mt?Y[bt+1].el:Z;ht[st]===0?d(null,te,R,Je,L,X,et,$,ot):_&&(m<0||st!==Bt[m]?kt(te,R,Je,2):m--)}}},kt=(b,Y,R,Z,L=null)=>{const{el:X,type:et,transition:$,children:ot,shapeFlag:st}=b;if(st&6){kt(b.component.subTree,Y,R,Z);return}if(st&128){b.suspense.move(Y,R,Z);return}if(st&64){et.move(b,Y,R,Nt);return}if(et===$e){s(X,Y,R);for(let mt=0;mt<ot.length;mt++)kt(ot[mt],Y,R,Z);s(b.anchor,Y,R);return}if(et===lo){N(b,Y,R);return}if(Z!==2&&st&1&&$)if(Z===0)$.beforeEnter(X),s(X,Y,R),on(()=>$.enter(X),L);else{const{leave:mt,delayLeave:Wt,afterLeave:j}=$,T=()=>s(X,Y,R),k=()=>{mt(X,()=>{T(),j&&j()})};Wt?Wt(X,T,k):k()}else s(X,Y,R)},Gt=(b,Y,R,Z=!1,L=!1)=>{const{type:X,props:et,ref:$,children:ot,dynamicChildren:st,shapeFlag:Mt,patchFlag:mt,dirs:Wt}=b;if($!=null&&Cc($,null,R,b,!0),Mt&256){Y.ctx.deactivate(b);return}const j=Mt&1&&Wt,T=!No(b);let k;if(T&&(k=et&&et.onVnodeBeforeUnmount)&&xn(k,Y,b),Mt&6)ft(b.component,R,Z);else{if(Mt&128){b.suspense.unmount(R,Z);return}j&&ei(b,null,Y,"beforeUnmount"),Mt&64?b.type.remove(b,Y,R,L,Nt,Z):st&&(X!==$e||mt>0&&mt&64)?Dt(st,Y,R,!1,!0):(X===$e&&mt&384||!L&&Mt&16)&&Dt(ot,Y,R),Z&&ce(b)}(T&&(k=et&&et.onVnodeUnmounted)||j)&&on(()=>{k&&xn(k,Y,b),j&&ei(b,null,Y,"unmounted")},R)},ce=b=>{const{type:Y,el:R,anchor:Z,transition:L}=b;if(Y===$e){Tt(R,Z);return}if(Y===lo){M(b);return}const X=()=>{i(R),L&&!L.persisted&&L.afterLeave&&L.afterLeave()};if(b.shapeFlag&1&&L&&!L.persisted){const{leave:et,delayLeave:$}=L,ot=()=>et(R,X);$?$(b.el,X,ot):ot()}else X()},Tt=(b,Y)=>{let R;for(;b!==Y;)R=h(b),i(b),b=R;i(Y)},ft=(b,Y,R)=>{const{bum:Z,scope:L,update:X,subTree:et,um:$}=b;Z&&Ao(Z),L.stop(),X&&(X.active=!1,Gt(et,b,Y,R)),$&&on($,Y),on(()=>{b.isUnmounted=!0},Y),Y&&Y.pendingBranch&&!Y.isUnmounted&&b.asyncDep&&!b.asyncResolved&&b.suspenseId===Y.pendingId&&(Y.deps--,Y.deps===0&&Y.resolve())},Dt=(b,Y,R,Z=!1,L=!1,X=0)=>{for(let et=X;et<b.length;et++)Gt(b[et],Y,R,Z,L)},ie=b=>b.shapeFlag&6?ie(b.component.subTree):b.shapeFlag&128?b.suspense.next():h(b.anchor||b.el),Oe=(b,Y,R)=>{b==null?Y._vnode&&Gt(Y._vnode,null,null,!0):d(Y._vnode||null,b,Y,null,null,null,R),Sp(),Y._vnode=b},Nt={p:d,um:Gt,m:kt,r:ce,mt:rt,mc:V,pc:at,pbc:B,n:ie,o:e};let Ie,be;return t&&([Ie,be]=t(Nt)),{render:Oe,hydrate:Ie,createApp:y0(Oe,Ie)}}function ni({effect:e,update:t},n){e.allowRecurse=t.allowRecurse=n}function Zp(e,t,n=!1){const s=e.children,i=t.children;if(Rt(s)&&Rt(i))for(let r=0;r<s.length;r++){const a=s[r];let o=i[r];o.shapeFlag&1&&!o.dynamicChildren&&((o.patchFlag<=0||o.patchFlag===32)&&(o=i[r]=Ps(i[r]),o.el=a.el),n||Zp(a,o))}}function P0(e){const t=e.slice(),n=[0];let s,i,r,a,o;const A=e.length;for(s=0;s<A;s++){const l=e[s];if(l!==0){if(i=n[n.length-1],e[i]<l){t[s]=i,n.push(s);continue}for(r=0,a=n.length-1;r<a;)o=r+a>>1,e[n[o]]<l?r=o+1:a=o;l<e[n[r]]&&(r>0&&(t[s]=n[r-1]),n[r]=s)}}for(r=n.length,a=n[r-1];r-- >0;)n[r]=a,a=t[a];return n}const I0=e=>e.__isTeleport,Yl="components",S0="directives";function Gl(e,t){return _l(Yl,e,!0,t)||e}const Kp=Symbol();function C0(e){return Be(e)?_l(Yl,e,!1)||e:e||Kp}function w0(e){return _l(S0,e)}function _l(e,t,n=!0,s=!1){const i=ze||Qe;if(i){const r=i.type;if(e===Yl){const o=Z0(r);if(o&&(o===t||o===Ln(t)||o===DA(Ln(t))))return r}const a=fq(i[e]||r[e],t)||fq(i.appContext[e],t);return!a&&s?r:a}}function fq(e,t){return e&&(e[t]||e[Ln(t)]||e[DA(Ln(t))])}const $e=Symbol(void 0),xl=Symbol(void 0),zn=Symbol(void 0),lo=Symbol(void 0),kr=[];let ks=null;function vt(e=!1){kr.push(ks=e?null:[])}function Jp(){kr.pop(),ks=kr[kr.length-1]||null}let Zr=1;function mq(e){Zr+=e}function Lp(e){return e.dynamicChildren=Zr>0?ks||Ji:null,Jp(),Zr>0&&ks&&ks.push(e),e}function ne(e,t,n,s,i,r){return Lp(qt(e,t,n,s,i,r,!0))}function ve(e,t,n,s,i){return Lp(Ot(e,t,n,s,i,!0))}function Kr(e){return e?e.__v_isVNode===!0:!1}function Ss(e,t){return e.type===t.type&&e.key===t.key}const VA="__vInternal",zp=({key:e})=>e!=null?e:null,uo=({ref:e,ref_key:t,ref_for:n})=>e!=null?Be(e)||xe(e)||Yt(e)?{i:ze,r:e,k:t,f:!!n}:e:null;function qt(e,t=null,n=null,s=0,i=null,r=e===$e?0:1,a=!1,o=!1){const A={__v_isVNode:!0,__v_skip:!0,type:e,props:t,key:t&&zp(t),ref:t&&uo(t),scopeId:mA,slotScopeIds:null,children:n,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:r,patchFlag:s,dynamicProps:i,dynamicChildren:null,appContext:null};return o?(Fl(A,n),r&128&&e.normalize(A)):n&&(A.shapeFlag|=Be(n)?8:16),Zr>0&&!a&&ks&&(A.patchFlag>0||r&6)&&A.patchFlag!==32&&ks.push(A),A}const Ot=B0;function B0(e,t=null,n=null,s=0,i=null,r=!1){if((!e||e===Kp)&&(e=zn),Kr(e)){const o=Jr(e,t,!0);return n&&Fl(o,n),o}if(K0(e)&&(e=e.__vccOpts),t){t=k0(t);let{class:o,style:A}=t;o&&!Be(o)&&(t.class=Rn(o)),Ee(A)&&(mp(A)&&!Rt(A)&&(A=sn({},A)),t.style=vr(A))}const a=Be(e)?1:Km(e)?128:I0(e)?64:Ee(e)?4:Yt(e)?2:0;return qt(e,t,n,s,i,a,r,!0)}function k0(e){return e?mp(e)||VA in e?sn({},e):e:null}function Jr(e,t,n=!1){const{props:s,ref:i,patchFlag:r,children:a}=e,o=t?b0(s||{},t):s;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:o,key:o&&zp(o),ref:t&&t.ref?n&&i?Rt(i)?i.concat(uo(t)):[i,uo(t)]:uo(t):i,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:a,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:t&&e.type!==$e?r===-1?16:r|16:r,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&Jr(e.ssContent),ssFallback:e.ssFallback&&Jr(e.ssFallback),el:e.el,anchor:e.anchor}}function _e(e=" ",t=0){return Ot(xl,null,e,t)}function T0(e,t){const n=Ot(lo,null,e);return n.staticCount=t,n}function Jn(e="",t=!1){return t?(vt(),ve(zn,null,e)):Ot(zn,null,e)}function Pn(e){return e==null||typeof e=="boolean"?Ot(zn):Rt(e)?Ot($e,null,e.slice()):typeof e=="object"?Ps(e):Ot(xl,null,String(e))}function Ps(e){return e.el===null||e.memo?e:Jr(e)}function Fl(e,t){let n=0;const{shapeFlag:s}=e;if(t==null)t=null;else if(Rt(t))n=16;else if(typeof t=="object")if(s&65){const i=t.default;i&&(i._c&&(i._d=!1),Fl(e,i()),i._c&&(i._d=!0));return}else{n=32;const i=t._;!i&&!(VA in t)?t._ctx=ze:i===3&&ze&&(ze.slots._===1?t._=1:(t._=2,e.patchFlag|=1024))}else Yt(t)?(t={default:t,_ctx:ze},n=32):(t=String(t),s&64?(n=16,t=[_e(t)]):n=8);e.children=t,e.shapeFlag|=n}function b0(...e){const t={};for(let n=0;n<e.length;n++){const s=e[n];for(const i in s)if(i==="class")t.class!==s.class&&(t.class=Rn([t.class,s.class]));else if(i==="style")t.style=vr([t.style,s.style]);else if(qA(i)){const r=t[i],a=s[i];a&&r!==a&&!(Rt(r)&&r.includes(a))&&(t[i]=r?[].concat(r,a):a)}else i!==""&&(t[i]=s[i])}return t}function xn(e,t,n,s=null){bn(e,t,7,[n,s])}function wc(e,t,n,s){let i;const r=n&&n[s];if(Rt(e)||Be(e)){i=new Array(e.length);for(let a=0,o=e.length;a<o;a++)i[a]=t(e[a],a,void 0,r&&r[a])}else if(typeof e=="number"){i=new Array(e);for(let a=0;a<e;a++)i[a]=t(a+1,a,void 0,r&&r[a])}else if(Ee(e))if(e[Symbol.iterator])i=Array.from(e,(a,o)=>t(a,o,void 0,r&&r[o]));else{const a=Object.keys(e);i=new Array(a.length);for(let o=0,A=a.length;o<A;o++){const l=a[o];i[o]=t(e[l],l,o,r&&r[o])}}else i=[];return n&&(n[s]=i),i}function jp(e,t,n={},s,i){if(ze.isCE||ze.parent&&No(ze.parent)&&ze.parent.isCE)return Ot("slot",t==="default"?null:{name:t},s&&s());let r=e[t];r&&r._c&&(r._d=!1),vt();const a=r&&Hp(r(n)),o=ve($e,{key:n.key||`_${t}`},a||(s?s():[]),a&&e._===1?64:-2);return!i&&o.scopeId&&(o.slotScopeIds=[o.scopeId+"-s"]),r&&r._c&&(r._d=!0),o}function Hp(e){return e.some(t=>Kr(t)?!(t.type===zn||t.type===$e&&!Hp(t.children)):!0)?e:null}const Bc=e=>e?Xp(e)?MA(e)||e.proxy:Bc(e.parent):null,Oo=sn(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>Bc(e.parent),$root:e=>Bc(e.root),$emit:e=>e.emit,$options:e=>vp(e),$forceUpdate:e=>()=>Wp(e.update),$nextTick:e=>Qm.bind(e.proxy),$watch:e=>t0.bind(e)}),U0={get({_:e},t){const{ctx:n,setupState:s,data:i,props:r,accessCache:a,type:o,appContext:A}=e;let l;if(t[0]!=="$"){const q=a[t];if(q!==void 0)switch(q){case 1:return s[t];case 2:return i[t];case 4:return n[t];case 3:return r[t]}else{if(s!==Ae&&Kt(s,t))return a[t]=1,s[t];if(i!==Ae&&Kt(i,t))return a[t]=2,i[t];if((l=e.propsOptions[0])&&Kt(l,t))return a[t]=3,r[t];if(n!==Ae&&Kt(n,t))return a[t]=4,n[t];Pc&&(a[t]=0)}}const u=Oo[t];let c,h;if(u)return t==="$attrs"&&Dn(e,"get",t),u(e);if((c=o.__cssModules)&&(c=c[t]))return c;if(n!==Ae&&Kt(n,t))return a[t]=4,n[t];if(h=A.config.globalProperties,Kt(h,t))return h[t]},set({_:e},t,n){const{data:s,setupState:i,ctx:r}=e;return i!==Ae&&Kt(i,t)?(i[t]=n,!0):s!==Ae&&Kt(s,t)?(s[t]=n,!0):Kt(e.props,t)||t[0]==="$"&&t.slice(1)in e?!1:(r[t]=n,!0)},has({_:{data:e,setupState:t,accessCache:n,ctx:s,appContext:i,propsOptions:r}},a){let o;return!!n[a]||e!==Ae&&Kt(e,a)||t!==Ae&&Kt(t,a)||(o=r[0])&&Kt(o,a)||Kt(s,a)||Kt(Oo,a)||Kt(i.config.globalProperties,a)},defineProperty(e,t,n){return n.get!=null?e._.accessCache[t]=0:Kt(n,"value")&&this.set(e,t,n.value,null),Reflect.defineProperty(e,t,n)}},Q0=Fp();let v0=0;function R0(e,t,n){const s=e.type,i=(t?t.appContext:e.appContext)||Q0,r={uid:v0++,vnode:e,type:s,parent:t,appContext:i,root:null,next:null,subTree:null,effect:null,update:null,scope:new sm(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(i.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Yp(s,i),emitsOptions:wp(s,i),emit:null,emitted:null,propsDefaults:Ae,inheritAttrs:s.inheritAttrs,ctx:Ae,data:Ae,props:Ae,attrs:Ae,slots:Ae,refs:Ae,setupState:Ae,setupContext:null,suspense:n,suspenseId:n?n.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return r.ctx={_:r},r.root=t?t.root:r,r.emit=Gm.bind(null,r),e.ce&&e.ce(r),r}let Qe=null;const Y0=()=>Qe||ze,Gs=e=>{Qe=e,e.scope.on()},Ts=()=>{Qe&&Qe.scope.off(),Qe=null};function Xp(e){return e.vnode.shapeFlag&4}let Lr=!1;function G0(e,t=!1){Lr=t;const{props:n,children:s}=e.vnode,i=Xp(e);f0(e,n,i,t),V0(e,s);const r=i?_0(e,t):void 0;return Lr=!1,r}function _0(e,t){const n=e.type;e.accessCache=Object.create(null),e.proxy=Np(new Proxy(e.ctx,U0));const{setup:s}=n;if(s){const i=e.setupContext=s.length>1?F0(e):null;Gs(e),hr();const r=Bs(s,e,0,[e.props,i]);if(pr(),Ts(),Ol(r)){if(r.then(Ts,Ts),t)return r.then(a=>{kc(e,a,t)}).catch(a=>{Oa(a,e,0)});e.asyncDep=r}else kc(e,r,t)}else $p(e,t)}function kc(e,t,n){Yt(t)?e.type.__ssrInlineRender?e.ssrRender=t:e.render=t:Ee(t)&&(e.setupState=Op(t)),$p(e,n)}let Nq;function $p(e,t,n){const s=e.type;if(!e.render){if(!t&&Nq&&!s.render){const i=s.template;if(i){const{isCustomElement:r,compilerOptions:a}=e.appContext.config,{delimiters:o,compilerOptions:A}=s,l=sn(sn({isCustomElement:r,delimiters:o},a),A);s.render=Nq(i,l)}}e.render=s.render||Tn}Gs(e),hr(),h0(e),pr(),Ts()}function x0(e){return new Proxy(e.attrs,{get(t,n){return Dn(e,"get","$attrs"),t[n]}})}function F0(e){const t=s=>{e.exposed=s||{}};let n;return{get attrs(){return n||(n=x0(e))},slots:e.slots,emit:e.emit,expose:t}}function MA(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(Op(Np(e.exposed)),{get(t,n){if(n in t)return t[n];if(n in Oo)return Oo[n](e)}}))}function Z0(e){return Yt(e)&&e.displayName||e.name}function K0(e){return Yt(e)&&"__vccOpts"in e}const Nn=(e,t)=>bm(e,t,Lr);function J0(e){const t=Y0();let n=e();return Ts(),Ol(n)&&(n=n.catch(s=>{throw Gs(t),s})),[n,()=>Gs(t)]}function Zl(e,t,n){const s=arguments.length;return s===2?Ee(t)&&!Rt(t)?Kr(t)?Ot(e,null,[t]):Ot(e,t):Ot(e,null,t):(s>3?n=Array.prototype.slice.call(arguments,2):s===3&&Kr(n)&&(n=[n]),Ot(e,t,n))}const L0="3.2.33",z0="http://www.w3.org/2000/svg",ri=typeof document!="undefined"?document:null,Vq=ri&&ri.createElement("template"),j0={insert:(e,t,n)=>{t.insertBefore(e,n||null)},remove:e=>{const t=e.parentNode;t&&t.removeChild(e)},createElement:(e,t,n,s)=>{const i=t?ri.createElementNS(z0,e):ri.createElement(e,n?{is:n}:void 0);return e==="select"&&s&&s.multiple!=null&&i.setAttribute("multiple",s.multiple),i},createText:e=>ri.createTextNode(e),createComment:e=>ri.createComment(e),setText:(e,t)=>{e.nodeValue=t},setElementText:(e,t)=>{e.textContent=t},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>ri.querySelector(e),setScopeId(e,t){e.setAttribute(t,"")},cloneNode(e){const t=e.cloneNode(!0);return"_value"in e&&(t._value=e._value),t},insertStaticContent(e,t,n,s,i,r){const a=n?n.previousSibling:t.lastChild;if(i&&(i===r||i.nextSibling))for(;t.insertBefore(i.cloneNode(!0),n),!(i===r||!(i=i.nextSibling)););else{Vq.innerHTML=s?`<svg>${e}</svg>`:e;const o=Vq.content;if(s){const A=o.firstChild;for(;A.firstChild;)o.appendChild(A.firstChild);o.removeChild(A)}t.insertBefore(o,n)}return[a?a.nextSibling:t.firstChild,n?n.previousSibling:t.lastChild]}};function H0(e,t,n){const s=e._vtc;s&&(t=(t?[t,...s]:[...s]).join(" ")),t==null?e.removeAttribute("class"):n?e.setAttribute("class",t):e.className=t}function X0(e,t,n){const s=e.style,i=Be(n);if(n&&!i){for(const r in n)Tc(s,r,n[r]);if(t&&!Be(t))for(const r in t)n[r]==null&&Tc(s,r,"")}else{const r=s.display;i?t!==n&&(s.cssText=n):t&&e.removeAttribute("style"),"_vod"in e&&(s.display=r)}}const Mq=/\s*!important$/;function Tc(e,t,n){if(Rt(n))n.forEach(s=>Tc(e,t,s));else if(n==null&&(n=""),t.startsWith("--"))e.setProperty(t,n);else{const s=$0(e,t);Mq.test(n)?e.setProperty(qr(s),n.replace(Mq,""),"important"):e[s]=n}}const Oq=["Webkit","Moz","ms"],ec={};function $0(e,t){const n=ec[t];if(n)return n;let s=Ln(t);if(s!=="filter"&&s in e)return ec[t]=s;s=DA(s);for(let i=0;i<Oq.length;i++){const r=Oq[i]+s;if(r in e)return ec[t]=r}return t}const yq="http://www.w3.org/1999/xlink";function tN(e,t,n,s,i){if(s&&t.startsWith("xlink:"))n==null?e.removeAttributeNS(yq,t.slice(6,t.length)):e.setAttributeNS(yq,t,n);else{const r=Ff(t);n==null||r&&!sp(n)?e.removeAttribute(t):e.setAttribute(t,r?"":n)}}function eN(e,t,n,s,i,r,a){if(t==="innerHTML"||t==="textContent"){s&&a(s,i,r),e[t]=n==null?"":n;return}if(t==="value"&&e.tagName!=="PROGRESS"&&!e.tagName.includes("-")){e._value=n;const A=n==null?"":n;(e.value!==A||e.tagName==="OPTION")&&(e.value=A),n==null&&e.removeAttribute(t);return}let o=!1;if(n===""||n==null){const A=typeof e[t];A==="boolean"?n=sp(n):n==null&&A==="string"?(n="",o=!0):A==="number"&&(n=0,o=!0)}try{e[t]=n}catch{}o&&e.removeAttribute(t)}const[td,nN]=(()=>{let e=Date.now,t=!1;if(typeof window!="undefined"){Date.now()>document.createEvent("Event").timeStamp&&(e=()=>performance.now());const n=navigator.userAgent.match(/firefox\/(\d+)/i);t=!!(n&&Number(n[1])<=53)}return[e,t]})();let bc=0;const sN=Promise.resolve(),iN=()=>{bc=0},rN=()=>bc||(sN.then(iN),bc=td());function ai(e,t,n,s){e.addEventListener(t,n,s)}function aN(e,t,n,s){e.removeEventListener(t,n,s)}function oN(e,t,n,s,i=null){const r=e._vei||(e._vei={}),a=r[t];if(s&&a)a.value=s;else{const[o,A]=AN(t);if(s){const l=r[t]=cN(s,i);ai(e,o,l,A)}else a&&(aN(e,o,a,A),r[t]=void 0)}}const Wq=/(?:Once|Passive|Capture)$/;function AN(e){let t;if(Wq.test(e)){t={};let n;for(;n=e.match(Wq);)e=e.slice(0,e.length-n[0].length),t[n[0].toLowerCase()]=!0}return[qr(e.slice(2)),t]}function cN(e,t){const n=s=>{const i=s.timeStamp||td();(nN||i>=n.attached-1)&&bn(lN(s,n.value),t,5,[s])};return n.value=e,n.attached=rN(),n}function lN(e,t){if(Rt(t)){const n=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{n.call(e),e._stopped=!0},t.map(s=>i=>!i._stopped&&s&&s(i))}else return t}const Eq=/^on[a-z]/,uN=(e,t,n,s,i=!1,r,a,o,A)=>{t==="class"?H0(e,s,i):t==="style"?X0(e,n,s):qA(t)?Nl(t)||oN(e,t,n,s,a):(t[0]==="."?(t=t.slice(1),!0):t[0]==="^"?(t=t.slice(1),!1):qN(e,t,s,i))?eN(e,t,s,r,a,o,A):(t==="true-value"?e._trueValue=s:t==="false-value"&&(e._falseValue=s),tN(e,t,s,i))};function qN(e,t,n,s){return s?!!(t==="innerHTML"||t==="textContent"||t in e&&Eq.test(t)&&Yt(n)):t==="spellcheck"||t==="draggable"||t==="translate"||t==="form"||t==="list"&&e.tagName==="INPUT"||t==="type"&&e.tagName==="TEXTAREA"||Eq.test(t)&&Be(n)?!1:t in e}const yo=e=>{const t=e.props["onUpdate:modelValue"];return Rt(t)?n=>Ao(t,n):t};function hN(e){e.target.composing=!0}function Pq(e){const t=e.target;t.composing&&(t.composing=!1,pN(t,"input"))}function pN(e,t){const n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}const dN={created(e,{modifiers:{lazy:t,trim:n,number:s}},i){e._assign=yo(i);const r=s||i.props&&i.props.type==="number";ai(e,t?"change":"input",a=>{if(a.target.composing)return;let o=e.value;n?o=o.trim():r&&(o=Yr(o)),e._assign(o)}),n&&ai(e,"change",()=>{e.value=e.value.trim()}),t||(ai(e,"compositionstart",hN),ai(e,"compositionend",Pq),ai(e,"change",Pq))},mounted(e,{value:t}){e.value=t==null?"":t},beforeUpdate(e,{value:t,modifiers:{lazy:n,trim:s,number:i}},r){if(e._assign=yo(r),e.composing||document.activeElement===e&&(n||s&&e.value.trim()===t||(i||e.type==="number")&&Yr(e.value)===t))return;const a=t==null?"":t;e.value!==a&&(e.value=a)}},ed={deep:!0,created(e,{value:t,modifiers:{number:n}},s){const i=hA(t);ai(e,"change",()=>{const r=Array.prototype.filter.call(e.options,a=>a.selected).map(a=>n?Yr(Wo(a)):Wo(a));e._assign(e.multiple?i?new Set(r):r:r[0])}),e._assign=yo(s)},mounted(e,{value:t}){Iq(e,t)},beforeUpdate(e,t,n){e._assign=yo(n)},updated(e,{value:t}){Iq(e,t)}};function Iq(e,t){const n=e.multiple;if(!(n&&!Rt(t)&&!hA(t))){for(let s=0,i=e.options.length;s<i;s++){const r=e.options[s],a=Wo(r);if(n)Rt(t)?r.selected=zf(t,a)>-1:r.selected=t.has(a);else if(uA(Wo(r),t)){e.selectedIndex!==s&&(e.selectedIndex=s);return}}!n&&e.selectedIndex!==-1&&(e.selectedIndex=-1)}}function Wo(e){return"_value"in e?e._value:e.value}const DN=sn({patchProp:uN},j0);let Sq;function gN(){return Sq||(Sq=W0(DN))}const fN=(...e)=>{const t=gN().createApp(...e),{mount:n}=t;return t.mount=s=>{const i=mN(s);if(!i)return;const r=t._component;!Yt(r)&&!r.render&&!r.template&&(r.template=i.innerHTML),i.innerHTML="";const a=n(i,!1,i instanceof SVGElement);return i instanceof Element&&(i.removeAttribute("v-cloak"),i.setAttribute("data-v-app","")),a},t};function mN(e){return Be(e)?document.querySelector(e):e}const nd=new Set,ln=new WeakMap,Hi=new WeakMap,gi=new WeakMap,Uc=new WeakMap,NN=new WeakMap,sr=new WeakMap,Eo=new WeakMap,Ir=new WeakSet;let _s;const is="__aa_tgt",Qc="__aa_del",VN=e=>{const t=EN(e);t&&t.forEach(n=>PN(n))},MN=e=>{e.forEach(t=>{t.target===_s&&yN(),ln.has(t.target)&&Bi(t.target)})};function ON(e){const t=Uc.get(e);t==null||t.disconnect();let n=ln.get(e),s=0;const i=5;n||(n=ir(e),ln.set(e,n));const{offsetWidth:r,offsetHeight:a}=_s,A=[n.top-i,r-(n.left+i+n.width),a-(n.top+i+n.height),n.left-i].map(u=>`${-1*Math.floor(u)}px`).join(" "),l=new IntersectionObserver(()=>{++s>1&&Bi(e)},{root:_s,threshold:1,rootMargin:A});l.observe(e),Uc.set(e,l)}function Bi(e){clearTimeout(Eo.get(e));const t=OA(e),n=typeof t=="function"?500:t.duration;Eo.set(e,setTimeout(async()=>{const s=gi.get(e);(!s||await s.finished)&&(ln.set(e,ir(e)),ON(e))},n))}function yN(){clearTimeout(Eo.get(_s)),Eo.set(_s,setTimeout(()=>{nd.forEach(e=>ad(e,t=>sd(()=>Bi(t))))},100))}function WN(e){setTimeout(()=>{NN.set(e,setInterval(()=>sd(Bi.bind(null,e)),2e3))},Math.round(2e3*Math.random()))}function sd(e){typeof requestIdleCallback=="function"?requestIdleCallback(()=>e()):requestAnimationFrame(()=>e())}let vc,Gi;typeof window!="undefined"&&(_s=document.documentElement,vc=new MutationObserver(VN),Gi=new ResizeObserver(MN),Gi.observe(_s));function EN(e){return e.reduce((t,n)=>{if(t===!1)return!1;if(n.target instanceof Element){if(nc(n.target),!t.has(n.target)){t.add(n.target);for(let s=0;s<n.target.children.length;s++){const i=n.target.children.item(s);if(!!i){if(Qc in i)return!1;nc(n.target,i),t.add(i)}}}if(n.removedNodes.length)for(let s=0;s<n.removedNodes.length;s++){const i=n.removedNodes[s];if(Qc in i)return!1;i instanceof Element&&(t.add(i),nc(n.target,i),Hi.set(i,[n.previousSibling,n.nextSibling]))}}return t},new Set)}function nc(e,t){!t&&!(is in e)?Object.defineProperty(e,is,{value:e}):t&&!(is in t)&&Object.defineProperty(t,is,{value:e})}function PN(e){var t;const n=_s.contains(e),s=ln.has(e);n&&Hi.has(e)&&Hi.delete(e),gi.has(e)&&((t=gi.get(e))===null||t===void 0||t.cancel()),s&&n?IN(e):s&&!n?CN(e):SN(e)}function Zn(e){return Number(e.replace(/[^0-9.\-]/g,""))}function ir(e){const t=e.getBoundingClientRect();return{top:t.top+window.scrollY,left:t.left+window.scrollX,width:t.width,height:t.height}}function id(e,t,n){let s=t.width,i=t.height,r=n.width,a=n.height;const o=getComputedStyle(e);if(o.getPropertyValue("box-sizing")==="content-box"){const l=Zn(o.paddingTop)+Zn(o.paddingBottom)+Zn(o.borderTopWidth)+Zn(o.borderBottomWidth),u=Zn(o.paddingLeft)+Zn(o.paddingRight)+Zn(o.borderRightWidth)+Zn(o.borderLeftWidth);s-=u,r-=u,i-=l,a-=l}return[s,r,i,a].map(Math.round)}function OA(e){return is in e&&sr.has(e[is])?sr.get(e[is]):{duration:250,easing:"ease-in-out"}}function rd(e){if(is in e)return e[is]}function Kl(e){const t=rd(e);return t?Ir.has(t):!1}function ad(e,...t){t.forEach(n=>n(e,sr.has(e)));for(let n=0;n<e.children.length;n++){const s=e.children.item(n);s&&t.forEach(i=>i(s,sr.has(s)))}}function IN(e){const t=ln.get(e),n=ir(e);if(!Kl(e))return ln.set(e,n);let s;if(!t)return;const i=OA(e);if(typeof i!="function"){const r=t.left-n.left,a=t.top-n.top,[o,A,l,u]=id(e,t,n),c={transform:`translate(${r}px, ${a}px)`},h={transform:"translate(0, 0)"};o!==A&&(c.width=`${o}px`,h.width=`${A}px`),l!==u&&(c.height=`${l}px`,h.height=`${u}px`),s=e.animate([c,h],{duration:i.duration,easing:i.easing})}else s=new Animation(i(e,"remain",t,n)),s.play();gi.set(e,s),ln.set(e,n),s.addEventListener("finish",Bi.bind(null,e))}function SN(e){const t=ir(e);ln.set(e,t);const n=OA(e);if(!Kl(e))return;let s;typeof n!="function"?s=e.animate([{transform:"scale(.98)",opacity:0},{transform:"scale(0.98)",opacity:0,offset:.5},{transform:"scale(1)",opacity:1}],{duration:n.duration*1.5,easing:"ease-in"}):(s=new Animation(n(e,"add",t)),s.play()),gi.set(e,s),s.addEventListener("finish",Bi.bind(null,e))}function CN(e){var t;if(!Hi.has(e)||!ln.has(e))return;const[n,s]=Hi.get(e);Object.defineProperty(e,Qc,{value:!0}),s&&s.parentNode&&s.parentNode instanceof Element?s.parentNode.insertBefore(e,s):n&&n.parentNode?n.parentNode.appendChild(e):(t=rd(e))===null||t===void 0||t.appendChild(e);function i(){var h;e.remove(),ln.delete(e),Hi.delete(e),gi.delete(e),(h=Uc.get(e))===null||h===void 0||h.disconnect()}if(!Kl(e))return i();const[r,a,o,A]=wN(e),l=OA(e),u=ln.get(e);let c;Object.assign(e.style,{position:"absolute",top:`${r}px`,left:`${a}px`,width:`${o}px`,height:`${A}px`,margin:0,pointerEvents:"none",transformOrigin:"center",zIndex:100}),typeof l!="function"?c=e.animate([{transform:"scale(1)",opacity:1},{transform:"scale(.98)",opacity:0}],{duration:l.duration,easing:"ease-out"}):(c=new Animation(l(e,"remove",u)),c.play()),gi.set(e,c),c.addEventListener("finish",i)}function wN(e){const t=ln.get(e),[n,,s]=id(e,t,ir(e));let i=e.parentElement;for(;i&&(getComputedStyle(i).position==="static"||i instanceof HTMLBodyElement);)i=i.parentElement;i||(i=document.body);const r=getComputedStyle(i),a=ln.get(i)||ir(i),o=Math.round(t.top-a.top)-Zn(r.borderTopWidth),A=Math.round(t.left-a.left)-Zn(r.borderLeftWidth);return[o,A,n,s]}function BN(e,t={}){return vc&&Gi&&(window.matchMedia("(prefers-reduced-motion: reduce)").matches&&typeof t!="function"&&!t.disrespectUserMotionPreference||(Ir.add(e),getComputedStyle(e).position==="static"&&Object.assign(e.style,{position:"relative"}),ad(e,Bi,WN,i=>Gi==null?void 0:Gi.observe(i)),typeof t=="function"?sr.set(e,t):sr.set(e,nt({duration:250,easing:"ease-in-out"},t)),vc.observe(e,{childList:!0}),nd.add(e))),Object.freeze({parent:e,enable:()=>{Ir.add(e)},disable:()=>{Ir.delete(e)},isEnabled:()=>Ir.has(e)})}const kN={mounted:(e,t)=>{BN(e,t.value||{})}},TN={install(e){e.directive("auto-animate",kN)}};function Cq(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter(function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable})),n.push.apply(n,s)}return n}function Vt(e){for(var t=1;t<arguments.length;t++){var n=arguments[t]!=null?arguments[t]:{};t%2?Cq(Object(n),!0).forEach(function(s){ke(e,s,n[s])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Cq(Object(n)).forEach(function(s){Object.defineProperty(e,s,Object.getOwnPropertyDescriptor(n,s))})}return e}function Po(e){return Po=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(t){return typeof t}:function(t){return t&&typeof Symbol=="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Po(e)}function bN(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function wq(e,t){for(var n=0;n<t.length;n++){var s=t[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}function UN(e,t,n){return t&&wq(e.prototype,t),n&&wq(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function ke(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Jl(e,t){return vN(e)||YN(e,t)||od(e,t)||_N()}function ya(e){return QN(e)||RN(e)||od(e)||GN()}function QN(e){if(Array.isArray(e))return Rc(e)}function vN(e){if(Array.isArray(e))return e}function RN(e){if(typeof Symbol!="undefined"&&e[Symbol.iterator]!=null||e["@@iterator"]!=null)return Array.from(e)}function YN(e,t){var n=e==null?null:typeof Symbol!="undefined"&&e[Symbol.iterator]||e["@@iterator"];if(n!=null){var s=[],i=!0,r=!1,a,o;try{for(n=n.call(e);!(i=(a=n.next()).done)&&(s.push(a.value),!(t&&s.length===t));i=!0);}catch(A){r=!0,o=A}finally{try{!i&&n.return!=null&&n.return()}finally{if(r)throw o}}return s}}function od(e,t){if(!!e){if(typeof e=="string")return Rc(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(n==="Object"&&e.constructor&&(n=e.constructor.name),n==="Map"||n==="Set")return Array.from(e);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Rc(e,t)}}function Rc(e,t){(t==null||t>e.length)&&(t=e.length);for(var n=0,s=new Array(t);n<t;n++)s[n]=e[n];return s}function GN(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function _N(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var Bq=function(){},Ll={},Ad={},cd=null,ld={mark:Bq,measure:Bq};try{typeof window!="undefined"&&(Ll=window),typeof document!="undefined"&&(Ad=document),typeof MutationObserver!="undefined"&&(cd=MutationObserver),typeof performance!="undefined"&&(ld=performance)}catch{}var xN=Ll.navigator||{},kq=xN.userAgent,Tq=kq===void 0?"":kq,xs=Ll,pe=Ad,bq=cd,Fa=ld;xs.document;var Ds=!!pe.documentElement&&!!pe.head&&typeof pe.addEventListener=="function"&&typeof pe.createElement=="function",ud=~Tq.indexOf("MSIE")||~Tq.indexOf("Trident/"),Za,Ka,Ja,La,za,ls="___FONT_AWESOME___",Yc=16,qd="fa",hd="svg-inline--fa",fi="data-fa-i2svg",Gc="data-fa-pseudo-element",FN="data-fa-pseudo-element-pending",zl="data-prefix",jl="data-icon",Uq="fontawesome-i2svg",ZN="async",KN=["HTML","HEAD","STYLE","SCRIPT"],pd=function(){try{return!0}catch{return!1}}(),he="classic",Ne="sharp",Hl=[he,Ne];function Wa(e){return new Proxy(e,{get:function(n,s){return s in n?n[s]:n[he]}})}var zr=Wa((Za={},ke(Za,he,{fa:"solid",fas:"solid","fa-solid":"solid",far:"regular","fa-regular":"regular",fal:"light","fa-light":"light",fat:"thin","fa-thin":"thin",fad:"duotone","fa-duotone":"duotone",fab:"brands","fa-brands":"brands",fak:"kit","fa-kit":"kit"}),ke(Za,Ne,{fa:"solid",fass:"solid","fa-solid":"solid"}),Za)),jr=Wa((Ka={},ke(Ka,he,{solid:"fas",regular:"far",light:"fal",thin:"fat",duotone:"fad",brands:"fab",kit:"fak"}),ke(Ka,Ne,{solid:"fass"}),Ka)),Hr=Wa((Ja={},ke(Ja,he,{fab:"fa-brands",fad:"fa-duotone",fak:"fa-kit",fal:"fa-light",far:"fa-regular",fas:"fa-solid",fat:"fa-thin"}),ke(Ja,Ne,{fass:"fa-solid"}),Ja)),JN=Wa((La={},ke(La,he,{"fa-brands":"fab","fa-duotone":"fad","fa-kit":"fak","fa-light":"fal","fa-regular":"far","fa-solid":"fas","fa-thin":"fat"}),ke(La,Ne,{"fa-solid":"fass"}),La)),LN=/fa(s|r|l|t|d|b|k|ss)?[\-\ ]/,dd="fa-layers-text",zN=/Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp|Kit)?.*/i,jN=Wa((za={},ke(za,he,{"900":"fas","400":"far",normal:"far","300":"fal","100":"fat"}),ke(za,Ne,{"900":"fass"}),za)),Dd=[1,2,3,4,5,6,7,8,9,10],HN=Dd.concat([11,12,13,14,15,16,17,18,19,20]),XN=["class","data-prefix","data-icon","data-fa-transform","data-fa-mask"],ci={GROUP:"duotone-group",SWAP_OPACITY:"swap-opacity",PRIMARY:"primary",SECONDARY:"secondary"},Xr=new Set;Object.keys(jr[he]).map(Xr.add.bind(Xr));Object.keys(jr[Ne]).map(Xr.add.bind(Xr));var $N=[].concat(Hl,ya(Xr),["2xs","xs","sm","lg","xl","2xl","beat","border","fade","beat-fade","bounce","flip-both","flip-horizontal","flip-vertical","flip","fw","inverse","layers-counter","layers-text","layers","li","pull-left","pull-right","pulse","rotate-180","rotate-270","rotate-90","rotate-by","shake","spin-pulse","spin-reverse","spin","stack-1x","stack-2x","stack","ul",ci.GROUP,ci.SWAP_OPACITY,ci.PRIMARY,ci.SECONDARY]).concat(Dd.map(function(e){return"".concat(e,"x")})).concat(HN.map(function(e){return"w-".concat(e)})),Tr=xs.FontAwesomeConfig||{};function tV(e){var t=pe.querySelector("script["+e+"]");if(t)return t.getAttribute(e)}function eV(e){return e===""?!0:e==="false"?!1:e==="true"?!0:e}if(pe&&typeof pe.querySelector=="function"){var nV=[["data-family-prefix","familyPrefix"],["data-css-prefix","cssPrefix"],["data-family-default","familyDefault"],["data-style-default","styleDefault"],["data-replacement-class","replacementClass"],["data-auto-replace-svg","autoReplaceSvg"],["data-auto-add-css","autoAddCss"],["data-auto-a11y","autoA11y"],["data-search-pseudo-elements","searchPseudoElements"],["data-observe-mutations","observeMutations"],["data-mutate-approach","mutateApproach"],["data-keep-original-source","keepOriginalSource"],["data-measure-performance","measurePerformance"],["data-show-missing-icons","showMissingIcons"]];nV.forEach(function(e){var t=Jl(e,2),n=t[0],s=t[1],i=eV(tV(n));i!=null&&(Tr[s]=i)})}var gd={styleDefault:"solid",familyDefault:"classic",cssPrefix:qd,replacementClass:hd,autoReplaceSvg:!0,autoAddCss:!0,autoA11y:!0,searchPseudoElements:!1,observeMutations:!0,mutateApproach:"async",keepOriginalSource:!0,measurePerformance:!1,showMissingIcons:!0};Tr.familyPrefix&&(Tr.cssPrefix=Tr.familyPrefix);var rr=Vt(Vt({},gd),Tr);rr.autoReplaceSvg||(rr.observeMutations=!1);var Pt={};Object.keys(gd).forEach(function(e){Object.defineProperty(Pt,e,{enumerable:!0,set:function(n){rr[e]=n,br.forEach(function(s){return s(Pt)})},get:function(){return rr[e]}})});Object.defineProperty(Pt,"familyPrefix",{enumerable:!0,set:function(t){rr.cssPrefix=t,br.forEach(function(n){return n(Pt)})},get:function(){return rr.cssPrefix}});xs.FontAwesomeConfig=Pt;var br=[];function sV(e){return br.push(e),function(){br.splice(br.indexOf(e),1)}}var ys=Yc,Kn={size:16,x:0,y:0,rotate:0,flipX:!1,flipY:!1};function iV(e){if(!(!e||!Ds)){var t=pe.createElement("style");t.setAttribute("type","text/css"),t.innerHTML=e;for(var n=pe.head.childNodes,s=null,i=n.length-1;i>-1;i--){var r=n[i],a=(r.tagName||"").toUpperCase();["STYLE","LINK"].indexOf(a)>-1&&(s=r)}return pe.head.insertBefore(t,s),e}}var rV="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";function $r(){for(var e=12,t="";e-- >0;)t+=rV[Math.random()*62|0];return t}function dr(e){for(var t=[],n=(e||[]).length>>>0;n--;)t[n]=e[n];return t}function Xl(e){return e.classList?dr(e.classList):(e.getAttribute("class")||"").split(" ").filter(function(t){return t})}function fd(e){return"".concat(e).replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function aV(e){return Object.keys(e||{}).reduce(function(t,n){return t+"".concat(n,'="').concat(fd(e[n]),'" ')},"").trim()}function yA(e){return Object.keys(e||{}).reduce(function(t,n){return t+"".concat(n,": ").concat(e[n].trim(),";")},"")}function $l(e){return e.size!==Kn.size||e.x!==Kn.x||e.y!==Kn.y||e.rotate!==Kn.rotate||e.flipX||e.flipY}function oV(e){var t=e.transform,n=e.containerWidth,s=e.iconWidth,i={transform:"translate(".concat(n/2," 256)")},r="translate(".concat(t.x*32,", ").concat(t.y*32,") "),a="scale(".concat(t.size/16*(t.flipX?-1:1),", ").concat(t.size/16*(t.flipY?-1:1),") "),o="rotate(".concat(t.rotate," 0 0)"),A={transform:"".concat(r," ").concat(a," ").concat(o)},l={transform:"translate(".concat(s/2*-1," -256)")};return{outer:i,inner:A,path:l}}function AV(e){var t=e.transform,n=e.width,s=n===void 0?Yc:n,i=e.height,r=i===void 0?Yc:i,a=e.startCentered,o=a===void 0?!1:a,A="";return o&&ud?A+="translate(".concat(t.x/ys-s/2,"em, ").concat(t.y/ys-r/2,"em) "):o?A+="translate(calc(-50% + ".concat(t.x/ys,"em), calc(-50% + ").concat(t.y/ys,"em)) "):A+="translate(".concat(t.x/ys,"em, ").concat(t.y/ys,"em) "),A+="scale(".concat(t.size/ys*(t.flipX?-1:1),", ").concat(t.size/ys*(t.flipY?-1:1),") "),A+="rotate(".concat(t.rotate,"deg) "),A}var cV=`:root, :host {
  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Solid";
  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Regular";
  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Light";
  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Thin";
  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";
  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";
  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";
}

svg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {
  overflow: visible;
  box-sizing: content-box;
}

.svg-inline--fa {
  display: var(--fa-display, inline-block);
  height: 1em;
  overflow: visible;
  vertical-align: -0.125em;
}
.svg-inline--fa.fa-2xs {
  vertical-align: 0.1em;
}
.svg-inline--fa.fa-xs {
  vertical-align: 0em;
}
.svg-inline--fa.fa-sm {
  vertical-align: -0.0714285705em;
}
.svg-inline--fa.fa-lg {
  vertical-align: -0.2em;
}
.svg-inline--fa.fa-xl {
  vertical-align: -0.25em;
}
.svg-inline--fa.fa-2xl {
  vertical-align: -0.3125em;
}
.svg-inline--fa.fa-pull-left {
  margin-right: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-pull-right {
  margin-left: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-li {
  width: var(--fa-li-width, 2em);
  top: 0.25em;
}
.svg-inline--fa.fa-fw {
  width: var(--fa-fw-width, 1.25em);
}

.fa-layers svg.svg-inline--fa {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.fa-layers-counter, .fa-layers-text {
  display: inline-block;
  position: absolute;
  text-align: center;
}

.fa-layers {
  display: inline-block;
  height: 1em;
  position: relative;
  text-align: center;
  vertical-align: -0.125em;
  width: 1em;
}
.fa-layers svg.svg-inline--fa {
  -webkit-transform-origin: center center;
          transform-origin: center center;
}

.fa-layers-text {
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  -webkit-transform-origin: center center;
          transform-origin: center center;
}

.fa-layers-counter {
  background-color: var(--fa-counter-background-color, #ff253a);
  border-radius: var(--fa-counter-border-radius, 1em);
  box-sizing: border-box;
  color: var(--fa-inverse, #fff);
  line-height: var(--fa-counter-line-height, 1);
  max-width: var(--fa-counter-max-width, 5em);
  min-width: var(--fa-counter-min-width, 1.5em);
  overflow: hidden;
  padding: var(--fa-counter-padding, 0.25em 0.5em);
  right: var(--fa-right, 0);
  text-overflow: ellipsis;
  top: var(--fa-top, 0);
  -webkit-transform: scale(var(--fa-counter-scale, 0.25));
          transform: scale(var(--fa-counter-scale, 0.25));
  -webkit-transform-origin: top right;
          transform-origin: top right;
}

.fa-layers-bottom-right {
  bottom: var(--fa-bottom, 0);
  right: var(--fa-right, 0);
  top: auto;
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: bottom right;
          transform-origin: bottom right;
}

.fa-layers-bottom-left {
  bottom: var(--fa-bottom, 0);
  left: var(--fa-left, 0);
  right: auto;
  top: auto;
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: bottom left;
          transform-origin: bottom left;
}

.fa-layers-top-right {
  top: var(--fa-top, 0);
  right: var(--fa-right, 0);
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: top right;
          transform-origin: top right;
}

.fa-layers-top-left {
  left: var(--fa-left, 0);
  right: auto;
  top: var(--fa-top, 0);
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: top left;
          transform-origin: top left;
}

.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-2xs {
  font-size: 0.625em;
  line-height: 0.1em;
  vertical-align: 0.225em;
}

.fa-xs {
  font-size: 0.75em;
  line-height: 0.0833333337em;
  vertical-align: 0.125em;
}

.fa-sm {
  font-size: 0.875em;
  line-height: 0.0714285718em;
  vertical-align: 0.0535714295em;
}

.fa-lg {
  font-size: 1.25em;
  line-height: 0.05em;
  vertical-align: -0.075em;
}

.fa-xl {
  font-size: 1.5em;
  line-height: 0.0416666682em;
  vertical-align: -0.125em;
}

.fa-2xl {
  font-size: 2em;
  line-height: 0.03125em;
  vertical-align: -0.1875em;
}

.fa-fw {
  text-align: center;
  width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-left: var(--fa-li-margin, 2.5em);
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  left: calc(var(--fa-li-width, 2em) * -1);
  position: absolute;
  text-align: center;
  width: var(--fa-li-width, 2em);
  line-height: inherit;
}

.fa-border {
  border-color: var(--fa-border-color, #eee);
  border-radius: var(--fa-border-radius, 0.1em);
  border-style: var(--fa-border-style, solid);
  border-width: var(--fa-border-width, 0.08em);
  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);
}

.fa-pull-left {
  float: left;
  margin-right: var(--fa-pull-margin, 0.3em);
}

.fa-pull-right {
  float: right;
  margin-left: var(--fa-pull-margin, 0.3em);
}

.fa-beat {
  -webkit-animation-name: fa-beat;
          animation-name: fa-beat;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);
          animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-bounce {
  -webkit-animation-name: fa-bounce;
          animation-name: fa-bounce;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
}

.fa-fade {
  -webkit-animation-name: fa-fade;
          animation-name: fa-fade;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-beat-fade {
  -webkit-animation-name: fa-beat-fade;
          animation-name: fa-beat-fade;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-flip {
  -webkit-animation-name: fa-flip;
          animation-name: fa-flip;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);
          animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-shake {
  -webkit-animation-name: fa-shake;
          animation-name: fa-shake;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, linear);
          animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin {
  -webkit-animation-name: fa-spin;
          animation-name: fa-spin;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 2s);
          animation-duration: var(--fa-animation-duration, 2s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, linear);
          animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin-reverse {
  --fa-animation-direction: reverse;
}

.fa-pulse,
.fa-spin-pulse {
  -webkit-animation-name: fa-spin;
          animation-name: fa-spin;
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, steps(8));
          animation-timing-function: var(--fa-animation-timing, steps(8));
}

@media (prefers-reduced-motion: reduce) {
  .fa-beat,
.fa-bounce,
.fa-fade,
.fa-beat-fade,
.fa-flip,
.fa-pulse,
.fa-shake,
.fa-spin,
.fa-spin-pulse {
    -webkit-animation-delay: -1ms;
            animation-delay: -1ms;
    -webkit-animation-duration: 1ms;
            animation-duration: 1ms;
    -webkit-animation-iteration-count: 1;
            animation-iteration-count: 1;
    transition-delay: 0s;
    transition-duration: 0s;
  }
}
@-webkit-keyframes fa-beat {
  0%, 90% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  45% {
    -webkit-transform: scale(var(--fa-beat-scale, 1.25));
            transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@keyframes fa-beat {
  0%, 90% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  45% {
    -webkit-transform: scale(var(--fa-beat-scale, 1.25));
            transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@-webkit-keyframes fa-bounce {
  0% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  10% {
    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  100% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
}
@keyframes fa-bounce {
  0% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  10% {
    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  100% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
}
@-webkit-keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@-webkit-keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  50% {
    opacity: 1;
    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));
            transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  50% {
    opacity: 1;
    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));
            transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@-webkit-keyframes fa-flip {
  50% {
    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@keyframes fa-flip {
  50% {
    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@-webkit-keyframes fa-shake {
  0% {
    -webkit-transform: rotate(-15deg);
            transform: rotate(-15deg);
  }
  4% {
    -webkit-transform: rotate(15deg);
            transform: rotate(15deg);
  }
  8%, 24% {
    -webkit-transform: rotate(-18deg);
            transform: rotate(-18deg);
  }
  12%, 28% {
    -webkit-transform: rotate(18deg);
            transform: rotate(18deg);
  }
  16% {
    -webkit-transform: rotate(-22deg);
            transform: rotate(-22deg);
  }
  20% {
    -webkit-transform: rotate(22deg);
            transform: rotate(22deg);
  }
  32% {
    -webkit-transform: rotate(-12deg);
            transform: rotate(-12deg);
  }
  36% {
    -webkit-transform: rotate(12deg);
            transform: rotate(12deg);
  }
  40%, 100% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
}
@keyframes fa-shake {
  0% {
    -webkit-transform: rotate(-15deg);
            transform: rotate(-15deg);
  }
  4% {
    -webkit-transform: rotate(15deg);
            transform: rotate(15deg);
  }
  8%, 24% {
    -webkit-transform: rotate(-18deg);
            transform: rotate(-18deg);
  }
  12%, 28% {
    -webkit-transform: rotate(18deg);
            transform: rotate(18deg);
  }
  16% {
    -webkit-transform: rotate(-22deg);
            transform: rotate(-22deg);
  }
  20% {
    -webkit-transform: rotate(22deg);
            transform: rotate(22deg);
  }
  32% {
    -webkit-transform: rotate(-12deg);
            transform: rotate(-12deg);
  }
  36% {
    -webkit-transform: rotate(12deg);
            transform: rotate(12deg);
  }
  40%, 100% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
}
@-webkit-keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}
@keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
}

.fa-rotate-180 {
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.fa-rotate-270 {
  -webkit-transform: rotate(270deg);
          transform: rotate(270deg);
}

.fa-flip-horizontal {
  -webkit-transform: scale(-1, 1);
          transform: scale(-1, 1);
}

.fa-flip-vertical {
  -webkit-transform: scale(1, -1);
          transform: scale(1, -1);
}

.fa-flip-both,
.fa-flip-horizontal.fa-flip-vertical {
  -webkit-transform: scale(-1, -1);
          transform: scale(-1, -1);
}

.fa-rotate-by {
  -webkit-transform: rotate(var(--fa-rotate-angle, none));
          transform: rotate(var(--fa-rotate-angle, none));
}

.fa-stack {
  display: inline-block;
  vertical-align: middle;
  height: 2em;
  position: relative;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  z-index: var(--fa-stack-z-index, auto);
}

.svg-inline--fa.fa-stack-1x {
  height: 1em;
  width: 1.25em;
}
.svg-inline--fa.fa-stack-2x {
  height: 2em;
  width: 2.5em;
}

.fa-inverse {
  color: var(--fa-inverse, #fff);
}

.sr-only,
.fa-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.sr-only-focusable:not(:focus),
.fa-sr-only-focusable:not(:focus) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.svg-inline--fa .fa-primary {
  fill: var(--fa-primary-color, currentColor);
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa .fa-secondary {
  fill: var(--fa-secondary-color, currentColor);
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-primary {
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-secondary {
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa mask .fa-primary,
.svg-inline--fa mask .fa-secondary {
  fill: black;
}

.fad.fa-inverse,
.fa-duotone.fa-inverse {
  color: var(--fa-inverse, #fff);
}`;function md(){var e=qd,t=hd,n=Pt.cssPrefix,s=Pt.replacementClass,i=cV;if(n!==e||s!==t){var r=new RegExp("\\.".concat(e,"\\-"),"g"),a=new RegExp("\\--".concat(e,"\\-"),"g"),o=new RegExp("\\.".concat(t),"g");i=i.replace(r,".".concat(n,"-")).replace(a,"--".concat(n,"-")).replace(o,".".concat(s))}return i}var Qq=!1;function sc(){Pt.autoAddCss&&!Qq&&(iV(md()),Qq=!0)}var lV={mixout:function(){return{dom:{css:md,insertCss:sc}}},hooks:function(){return{beforeDOMElementCreation:function(){sc()},beforeI2svg:function(){sc()}}}},us=xs||{};us[ls]||(us[ls]={});us[ls].styles||(us[ls].styles={});us[ls].hooks||(us[ls].hooks={});us[ls].shims||(us[ls].shims=[]);var wn=us[ls],Nd=[],uV=function e(){pe.removeEventListener("DOMContentLoaded",e),Io=1,Nd.map(function(t){return t()})},Io=!1;Ds&&(Io=(pe.documentElement.doScroll?/^loaded|^c/:/^loaded|^i|^c/).test(pe.readyState),Io||pe.addEventListener("DOMContentLoaded",uV));function qV(e){!Ds||(Io?setTimeout(e,0):Nd.push(e))}function Ea(e){var t=e.tag,n=e.attributes,s=n===void 0?{}:n,i=e.children,r=i===void 0?[]:i;return typeof e=="string"?fd(e):"<".concat(t," ").concat(aV(s),">").concat(r.map(Ea).join(""),"</").concat(t,">")}function vq(e,t,n){if(e&&e[t]&&e[t][n])return{prefix:t,iconName:n,icon:e[t][n]}}var hV=function(t,n){return function(s,i,r,a){return t.call(n,s,i,r,a)}},ic=function(t,n,s,i){var r=Object.keys(t),a=r.length,o=i!==void 0?hV(n,i):n,A,l,u;for(s===void 0?(A=1,u=t[r[0]]):(A=0,u=s);A<a;A++)l=r[A],u=o(u,t[l],l,t);return u};function pV(e){for(var t=[],n=0,s=e.length;n<s;){var i=e.charCodeAt(n++);if(i>=55296&&i<=56319&&n<s){var r=e.charCodeAt(n++);(r&64512)==56320?t.push(((i&1023)<<10)+(r&1023)+65536):(t.push(i),n--)}else t.push(i)}return t}function _c(e){var t=pV(e);return t.length===1?t[0].toString(16):null}function dV(e,t){var n=e.length,s=e.charCodeAt(t),i;return s>=55296&&s<=56319&&n>t+1&&(i=e.charCodeAt(t+1),i>=56320&&i<=57343)?(s-55296)*1024+i-56320+65536:s}function Rq(e){return Object.keys(e).reduce(function(t,n){var s=e[n],i=!!s.icon;return i?t[s.iconName]=s.icon:t[n]=s,t},{})}function xc(e,t){var n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},s=n.skipHooks,i=s===void 0?!1:s,r=Rq(t);typeof wn.hooks.addPack=="function"&&!i?wn.hooks.addPack(e,Rq(t)):wn.styles[e]=Vt(Vt({},wn.styles[e]||{}),r),e==="fas"&&xc("fa",t)}var ja,Ha,Xa,_i=wn.styles,DV=wn.shims,gV=(ja={},ke(ja,he,Object.values(Hr[he])),ke(ja,Ne,Object.values(Hr[Ne])),ja),tu=null,Vd={},Md={},Od={},yd={},Wd={},fV=(Ha={},ke(Ha,he,Object.keys(zr[he])),ke(Ha,Ne,Object.keys(zr[Ne])),Ha);function mV(e){return~$N.indexOf(e)}function NV(e,t){var n=t.split("-"),s=n[0],i=n.slice(1).join("-");return s===e&&i!==""&&!mV(i)?i:null}var Ed=function(){var t=function(r){return ic(_i,function(a,o,A){return a[A]=ic(o,r,{}),a},{})};Vd=t(function(i,r,a){if(r[3]&&(i[r[3]]=a),r[2]){var o=r[2].filter(function(A){return typeof A=="number"});o.forEach(function(A){i[A.toString(16)]=a})}return i}),Md=t(function(i,r,a){if(i[a]=a,r[2]){var o=r[2].filter(function(A){return typeof A=="string"});o.forEach(function(A){i[A]=a})}return i}),Wd=t(function(i,r,a){var o=r[2];return i[a]=a,o.forEach(function(A){i[A]=a}),i});var n="far"in _i||Pt.autoFetchSvg,s=ic(DV,function(i,r){var a=r[0],o=r[1],A=r[2];return o==="far"&&!n&&(o="fas"),typeof a=="string"&&(i.names[a]={prefix:o,iconName:A}),typeof a=="number"&&(i.unicodes[a.toString(16)]={prefix:o,iconName:A}),i},{names:{},unicodes:{}});Od=s.names,yd=s.unicodes,tu=WA(Pt.styleDefault,{family:Pt.familyDefault})};sV(function(e){tu=WA(e.styleDefault,{family:Pt.familyDefault})});Ed();function eu(e,t){return(Vd[e]||{})[t]}function VV(e,t){return(Md[e]||{})[t]}function li(e,t){return(Wd[e]||{})[t]}function Pd(e){return Od[e]||{prefix:null,iconName:null}}function MV(e){var t=yd[e],n=eu("fas",e);return t||(n?{prefix:"fas",iconName:n}:null)||{prefix:null,iconName:null}}function Fs(){return tu}var nu=function(){return{prefix:null,iconName:null,rest:[]}};function WA(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},n=t.family,s=n===void 0?he:n,i=zr[s][e],r=jr[s][e]||jr[s][i],a=e in wn.styles?e:null;return r||a||null}var Yq=(Xa={},ke(Xa,he,Object.keys(Hr[he])),ke(Xa,Ne,Object.keys(Hr[Ne])),Xa);function EA(e){var t,n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},s=n.skipLookups,i=s===void 0?!1:s,r=(t={},ke(t,he,"".concat(Pt.cssPrefix,"-").concat(he)),ke(t,Ne,"".concat(Pt.cssPrefix,"-").concat(Ne)),t),a=null,o=he;(e.includes(r[he])||e.some(function(l){return Yq[he].includes(l)}))&&(o=he),(e.includes(r[Ne])||e.some(function(l){return Yq[Ne].includes(l)}))&&(o=Ne);var A=e.reduce(function(l,u){var c=NV(Pt.cssPrefix,u);if(_i[u]?(u=gV[o].includes(u)?JN[o][u]:u,a=u,l.prefix=u):fV[o].indexOf(u)>-1?(a=u,l.prefix=WA(u,{family:o})):c?l.iconName=c:u!==Pt.replacementClass&&u!==r[he]&&u!==r[Ne]&&l.rest.push(u),!i&&l.prefix&&l.iconName){var h=a==="fa"?Pd(l.iconName):{},q=li(l.prefix,l.iconName);h.prefix&&(a=null),l.iconName=h.iconName||q||l.iconName,l.prefix=h.prefix||l.prefix,l.prefix==="far"&&!_i.far&&_i.fas&&!Pt.autoFetchSvg&&(l.prefix="fas")}return l},nu());return(e.includes("fa-brands")||e.includes("fab"))&&(A.prefix="fab"),(e.includes("fa-duotone")||e.includes("fad"))&&(A.prefix="fad"),!A.prefix&&o===Ne&&(_i.fass||Pt.autoFetchSvg)&&(A.prefix="fass",A.iconName=li(A.prefix,A.iconName)||A.iconName),(A.prefix==="fa"||a==="fa")&&(A.prefix=Fs()||"fas"),A}var OV=function(){function e(){bN(this,e),this.definitions={}}return UN(e,[{key:"add",value:function(){for(var n=this,s=arguments.length,i=new Array(s),r=0;r<s;r++)i[r]=arguments[r];var a=i.reduce(this._pullDefinitions,{});Object.keys(a).forEach(function(o){n.definitions[o]=Vt(Vt({},n.definitions[o]||{}),a[o]),xc(o,a[o]);var A=Hr[he][o];A&&xc(A,a[o]),Ed()})}},{key:"reset",value:function(){this.definitions={}}},{key:"_pullDefinitions",value:function(n,s){var i=s.prefix&&s.iconName&&s.icon?{0:s}:s;return Object.keys(i).map(function(r){var a=i[r],o=a.prefix,A=a.iconName,l=a.icon,u=l[2];n[o]||(n[o]={}),u.length>0&&u.forEach(function(c){typeof c=="string"&&(n[o][c]=l)}),n[o][A]=l}),n}}]),e}(),Gq=[],xi={},Xi={},yV=Object.keys(Xi);function WV(e,t){var n=t.mixoutsTo;return Gq=e,xi={},Object.keys(Xi).forEach(function(s){yV.indexOf(s)===-1&&delete Xi[s]}),Gq.forEach(function(s){var i=s.mixout?s.mixout():{};if(Object.keys(i).forEach(function(a){typeof i[a]=="function"&&(n[a]=i[a]),Po(i[a])==="object"&&Object.keys(i[a]).forEach(function(o){n[a]||(n[a]={}),n[a][o]=i[a][o]})}),s.hooks){var r=s.hooks();Object.keys(r).forEach(function(a){xi[a]||(xi[a]=[]),xi[a].push(r[a])})}s.provides&&s.provides(Xi)}),n}function Fc(e,t){for(var n=arguments.length,s=new Array(n>2?n-2:0),i=2;i<n;i++)s[i-2]=arguments[i];var r=xi[e]||[];return r.forEach(function(a){t=a.apply(null,[t].concat(s))}),t}function mi(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),s=1;s<t;s++)n[s-1]=arguments[s];var i=xi[e]||[];i.forEach(function(r){r.apply(null,n)})}function qs(){var e=arguments[0],t=Array.prototype.slice.call(arguments,1);return Xi[e]?Xi[e].apply(null,t):void 0}function Zc(e){e.prefix==="fa"&&(e.prefix="fas");var t=e.iconName,n=e.prefix||Fs();if(!!t)return t=li(n,t)||t,vq(Id.definitions,n,t)||vq(wn.styles,n,t)}var Id=new OV,EV=function(){Pt.autoReplaceSvg=!1,Pt.observeMutations=!1,mi("noAuto")},PV={i2svg:function(){var t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};return Ds?(mi("beforeI2svg",t),qs("pseudoElements2svg",t),qs("i2svg",t)):Promise.reject("Operation requires a DOM of some kind.")},watch:function(){var t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},n=t.autoReplaceSvgRoot;Pt.autoReplaceSvg===!1&&(Pt.autoReplaceSvg=!0),Pt.observeMutations=!0,qV(function(){SV({autoReplaceSvgRoot:n}),mi("watch",t)})}},IV={icon:function(t){if(t===null)return null;if(Po(t)==="object"&&t.prefix&&t.iconName)return{prefix:t.prefix,iconName:li(t.prefix,t.iconName)||t.iconName};if(Array.isArray(t)&&t.length===2){var n=t[1].indexOf("fa-")===0?t[1].slice(3):t[1],s=WA(t[0]);return{prefix:s,iconName:li(s,n)||n}}if(typeof t=="string"&&(t.indexOf("".concat(Pt.cssPrefix,"-"))>-1||t.match(LN))){var i=EA(t.split(" "),{skipLookups:!0});return{prefix:i.prefix||Fs(),iconName:li(i.prefix,i.iconName)||i.iconName}}if(typeof t=="string"){var r=Fs();return{prefix:r,iconName:li(r,t)||t}}}},fn={noAuto:EV,config:Pt,dom:PV,parse:IV,library:Id,findIconDefinition:Zc,toHtml:Ea},SV=function(){var t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},n=t.autoReplaceSvgRoot,s=n===void 0?pe:n;(Object.keys(wn.styles).length>0||Pt.autoFetchSvg)&&Ds&&Pt.autoReplaceSvg&&fn.dom.i2svg({node:s})};function PA(e,t){return Object.defineProperty(e,"abstract",{get:t}),Object.defineProperty(e,"html",{get:function(){return e.abstract.map(function(s){return Ea(s)})}}),Object.defineProperty(e,"node",{get:function(){if(!!Ds){var s=pe.createElement("div");return s.innerHTML=e.html,s.children}}}),e}function CV(e){var t=e.children,n=e.main,s=e.mask,i=e.attributes,r=e.styles,a=e.transform;if($l(a)&&n.found&&!s.found){var o=n.width,A=n.height,l={x:o/A/2,y:.5};i.style=yA(Vt(Vt({},r),{},{"transform-origin":"".concat(l.x+a.x/16,"em ").concat(l.y+a.y/16,"em")}))}return[{tag:"svg",attributes:i,children:t}]}function wV(e){var t=e.prefix,n=e.iconName,s=e.children,i=e.attributes,r=e.symbol,a=r===!0?"".concat(t,"-").concat(Pt.cssPrefix,"-").concat(n):r;return[{tag:"svg",attributes:{style:"display: none;"},children:[{tag:"symbol",attributes:Vt(Vt({},i),{},{id:a}),children:s}]}]}function su(e){var t=e.icons,n=t.main,s=t.mask,i=e.prefix,r=e.iconName,a=e.transform,o=e.symbol,A=e.title,l=e.maskId,u=e.titleId,c=e.extra,h=e.watchable,q=h===void 0?!1:h,p=s.found?s:n,g=p.width,d=p.height,D=i==="fak",f=[Pt.replacementClass,r?"".concat(Pt.cssPrefix,"-").concat(r):""].filter(function(V){return c.classes.indexOf(V)===-1}).filter(function(V){return V!==""||!!V}).concat(c.classes).join(" "),y={children:[],attributes:Vt(Vt({},c.attributes),{},{"data-prefix":i,"data-icon":r,class:f,role:c.attributes.role||"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 ".concat(g," ").concat(d)})},N=D&&!~c.classes.indexOf("fa-fw")?{width:"".concat(g/d*16*.0625,"em")}:{};q&&(y.attributes[fi]=""),A&&(y.children.push({tag:"title",attributes:{id:y.attributes["aria-labelledby"]||"title-".concat(u||$r())},children:[A]}),delete y.attributes.title);var M=Vt(Vt({},y),{},{prefix:i,iconName:r,main:n,mask:s,maskId:l,transform:a,symbol:o,styles:Vt(Vt({},N),c.styles)}),P=s.found&&n.found?qs("generateAbstractMask",M)||{children:[],attributes:{}}:qs("generateAbstractIcon",M)||{children:[],attributes:{}},O=P.children,E=P.attributes;return M.children=O,M.attributes=E,o?wV(M):CV(M)}function _q(e){var t=e.content,n=e.width,s=e.height,i=e.transform,r=e.title,a=e.extra,o=e.watchable,A=o===void 0?!1:o,l=Vt(Vt(Vt({},a.attributes),r?{title:r}:{}),{},{class:a.classes.join(" ")});A&&(l[fi]="");var u=Vt({},a.styles);$l(i)&&(u.transform=AV({transform:i,startCentered:!0,width:n,height:s}),u["-webkit-transform"]=u.transform);var c=yA(u);c.length>0&&(l.style=c);var h=[];return h.push({tag:"span",attributes:l,children:[t]}),r&&h.push({tag:"span",attributes:{class:"sr-only"},children:[r]}),h}function BV(e){var t=e.content,n=e.title,s=e.extra,i=Vt(Vt(Vt({},s.attributes),n?{title:n}:{}),{},{class:s.classes.join(" ")}),r=yA(s.styles);r.length>0&&(i.style=r);var a=[];return a.push({tag:"span",attributes:i,children:[t]}),n&&a.push({tag:"span",attributes:{class:"sr-only"},children:[n]}),a}var rc=wn.styles;function Kc(e){var t=e[0],n=e[1],s=e.slice(4),i=Jl(s,1),r=i[0],a=null;return Array.isArray(r)?a={tag:"g",attributes:{class:"".concat(Pt.cssPrefix,"-").concat(ci.GROUP)},children:[{tag:"path",attributes:{class:"".concat(Pt.cssPrefix,"-").concat(ci.SECONDARY),fill:"currentColor",d:r[0]}},{tag:"path",attributes:{class:"".concat(Pt.cssPrefix,"-").concat(ci.PRIMARY),fill:"currentColor",d:r[1]}}]}:a={tag:"path",attributes:{fill:"currentColor",d:r}},{found:!0,width:t,height:n,icon:a}}var kV={found:!1,width:512,height:512};function TV(e,t){!pd&&!Pt.showMissingIcons&&e&&console.error('Icon with name "'.concat(e,'" and prefix "').concat(t,'" is missing.'))}function Jc(e,t){var n=t;return t==="fa"&&Pt.styleDefault!==null&&(t=Fs()),new Promise(function(s,i){if(qs("missingIconAbstract"),n==="fa"){var r=Pd(e)||{};e=r.iconName||e,t=r.prefix||t}if(e&&t&&rc[t]&&rc[t][e]){var a=rc[t][e];return s(Kc(a))}TV(e,t),s(Vt(Vt({},kV),{},{icon:Pt.showMissingIcons&&e?qs("missingIconAbstract")||{}:{}}))})}var xq=function(){},Lc=Pt.measurePerformance&&Fa&&Fa.mark&&Fa.measure?Fa:{mark:xq,measure:xq},Sr='FA "6.2.0"',bV=function(t){return Lc.mark("".concat(Sr," ").concat(t," begins")),function(){return Sd(t)}},Sd=function(t){Lc.mark("".concat(Sr," ").concat(t," ends")),Lc.measure("".concat(Sr," ").concat(t),"".concat(Sr," ").concat(t," begins"),"".concat(Sr," ").concat(t," ends"))},iu={begin:bV,end:Sd},qo=function(){};function Fq(e){var t=e.getAttribute?e.getAttribute(fi):null;return typeof t=="string"}function UV(e){var t=e.getAttribute?e.getAttribute(zl):null,n=e.getAttribute?e.getAttribute(jl):null;return t&&n}function QV(e){return e&&e.classList&&e.classList.contains&&e.classList.contains(Pt.replacementClass)}function vV(){if(Pt.autoReplaceSvg===!0)return ho.replace;var e=ho[Pt.autoReplaceSvg];return e||ho.replace}function RV(e){return pe.createElementNS("http://www.w3.org/2000/svg",e)}function YV(e){return pe.createElement(e)}function Cd(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},n=t.ceFn,s=n===void 0?e.tag==="svg"?RV:YV:n;if(typeof e=="string")return pe.createTextNode(e);var i=s(e.tag);Object.keys(e.attributes||[]).forEach(function(a){i.setAttribute(a,e.attributes[a])});var r=e.children||[];return r.forEach(function(a){i.appendChild(Cd(a,{ceFn:s}))}),i}function GV(e){var t=" ".concat(e.outerHTML," ");return t="".concat(t,"Font Awesome fontawesome.com "),t}var ho={replace:function(t){var n=t[0];if(n.parentNode)if(t[1].forEach(function(i){n.parentNode.insertBefore(Cd(i),n)}),n.getAttribute(fi)===null&&Pt.keepOriginalSource){var s=pe.createComment(GV(n));n.parentNode.replaceChild(s,n)}else n.remove()},nest:function(t){var n=t[0],s=t[1];if(~Xl(n).indexOf(Pt.replacementClass))return ho.replace(t);var i=new RegExp("".concat(Pt.cssPrefix,"-.*"));if(delete s[0].attributes.id,s[0].attributes.class){var r=s[0].attributes.class.split(" ").reduce(function(o,A){return A===Pt.replacementClass||A.match(i)?o.toSvg.push(A):o.toNode.push(A),o},{toNode:[],toSvg:[]});s[0].attributes.class=r.toSvg.join(" "),r.toNode.length===0?n.removeAttribute("class"):n.setAttribute("class",r.toNode.join(" "))}var a=s.map(function(o){return Ea(o)}).join(`
`);n.setAttribute(fi,""),n.innerHTML=a}};function Zq(e){e()}function wd(e,t){var n=typeof t=="function"?t:qo;if(e.length===0)n();else{var s=Zq;Pt.mutateApproach===ZN&&(s=xs.requestAnimationFrame||Zq),s(function(){var i=vV(),r=iu.begin("mutate");e.map(i),r(),n()})}}var ru=!1;function Bd(){ru=!0}function zc(){ru=!1}var So=null;function Kq(e){if(!!bq&&!!Pt.observeMutations){var t=e.treeCallback,n=t===void 0?qo:t,s=e.nodeCallback,i=s===void 0?qo:s,r=e.pseudoElementsCallback,a=r===void 0?qo:r,o=e.observeMutationsRoot,A=o===void 0?pe:o;So=new bq(function(l){if(!ru){var u=Fs();dr(l).forEach(function(c){if(c.type==="childList"&&c.addedNodes.length>0&&!Fq(c.addedNodes[0])&&(Pt.searchPseudoElements&&a(c.target),n(c.target)),c.type==="attributes"&&c.target.parentNode&&Pt.searchPseudoElements&&a(c.target.parentNode),c.type==="attributes"&&Fq(c.target)&&~XN.indexOf(c.attributeName))if(c.attributeName==="class"&&UV(c.target)){var h=EA(Xl(c.target)),q=h.prefix,p=h.iconName;c.target.setAttribute(zl,q||u),p&&c.target.setAttribute(jl,p)}else QV(c.target)&&i(c.target)})}}),Ds&&So.observe(A,{childList:!0,attributes:!0,characterData:!0,subtree:!0})}}function _V(){!So||So.disconnect()}function xV(e){var t=e.getAttribute("style"),n=[];return t&&(n=t.split(";").reduce(function(s,i){var r=i.split(":"),a=r[0],o=r.slice(1);return a&&o.length>0&&(s[a]=o.join(":").trim()),s},{})),n}function FV(e){var t=e.getAttribute("data-prefix"),n=e.getAttribute("data-icon"),s=e.innerText!==void 0?e.innerText.trim():"",i=EA(Xl(e));return i.prefix||(i.prefix=Fs()),t&&n&&(i.prefix=t,i.iconName=n),i.iconName&&i.prefix||(i.prefix&&s.length>0&&(i.iconName=VV(i.prefix,e.innerText)||eu(i.prefix,_c(e.innerText))),!i.iconName&&Pt.autoFetchSvg&&e.firstChild&&e.firstChild.nodeType===Node.TEXT_NODE&&(i.iconName=e.firstChild.data)),i}function ZV(e){var t=dr(e.attributes).reduce(function(i,r){return i.name!=="class"&&i.name!=="style"&&(i[r.name]=r.value),i},{}),n=e.getAttribute("title"),s=e.getAttribute("data-fa-title-id");return Pt.autoA11y&&(n?t["aria-labelledby"]="".concat(Pt.replacementClass,"-title-").concat(s||$r()):(t["aria-hidden"]="true",t.focusable="false")),t}function KV(){return{iconName:null,title:null,titleId:null,prefix:null,transform:Kn,symbol:!1,mask:{iconName:null,prefix:null,rest:[]},maskId:null,extra:{classes:[],styles:{},attributes:{}}}}function Jq(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{styleParser:!0},n=FV(e),s=n.iconName,i=n.prefix,r=n.rest,a=ZV(e),o=Fc("parseNodeAttributes",{},e),A=t.styleParser?xV(e):[];return Vt({iconName:s,title:e.getAttribute("title"),titleId:e.getAttribute("data-fa-title-id"),prefix:i,transform:Kn,mask:{iconName:null,prefix:null,rest:[]},maskId:null,symbol:!1,extra:{classes:r,styles:A,attributes:a}},o)}var JV=wn.styles;function kd(e){var t=Pt.autoReplaceSvg==="nest"?Jq(e,{styleParser:!1}):Jq(e);return~t.extra.classes.indexOf(dd)?qs("generateLayersText",e,t):qs("generateSvgReplacementMutation",e,t)}var Zs=new Set;Hl.map(function(e){Zs.add("fa-".concat(e))});Object.keys(zr[he]).map(Zs.add.bind(Zs));Object.keys(zr[Ne]).map(Zs.add.bind(Zs));Zs=ya(Zs);function Lq(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;if(!Ds)return Promise.resolve();var n=pe.documentElement.classList,s=function(c){return n.add("".concat(Uq,"-").concat(c))},i=function(c){return n.remove("".concat(Uq,"-").concat(c))},r=Pt.autoFetchSvg?Zs:Hl.map(function(u){return"fa-".concat(u)}).concat(Object.keys(JV));r.includes("fa")||r.push("fa");var a=[".".concat(dd,":not([").concat(fi,"])")].concat(r.map(function(u){return".".concat(u,":not([").concat(fi,"])")})).join(", ");if(a.length===0)return Promise.resolve();var o=[];try{o=dr(e.querySelectorAll(a))}catch{}if(o.length>0)s("pending"),i("complete");else return Promise.resolve();var A=iu.begin("onTree"),l=o.reduce(function(u,c){try{var h=kd(c);h&&u.push(h)}catch(q){pd||q.name==="MissingIcon"&&console.error(q)}return u},[]);return new Promise(function(u,c){Promise.all(l).then(function(h){wd(h,function(){s("active"),s("complete"),i("pending"),typeof t=="function"&&t(),A(),u()})}).catch(function(h){A(),c(h)})})}function LV(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;kd(e).then(function(n){n&&wd([n],t)})}function zV(e){return function(t){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},s=(t||{}).icon?t:Zc(t||{}),i=n.mask;return i&&(i=(i||{}).icon?i:Zc(i||{})),e(s,Vt(Vt({},n),{},{mask:i}))}}var jV=function(t){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},s=n.transform,i=s===void 0?Kn:s,r=n.symbol,a=r===void 0?!1:r,o=n.mask,A=o===void 0?null:o,l=n.maskId,u=l===void 0?null:l,c=n.title,h=c===void 0?null:c,q=n.titleId,p=q===void 0?null:q,g=n.classes,d=g===void 0?[]:g,D=n.attributes,f=D===void 0?{}:D,y=n.styles,N=y===void 0?{}:y;if(!!t){var M=t.prefix,P=t.iconName,O=t.icon;return PA(Vt({type:"icon"},t),function(){return mi("beforeDOMElementCreation",{iconDefinition:t,params:n}),Pt.autoA11y&&(h?f["aria-labelledby"]="".concat(Pt.replacementClass,"-title-").concat(p||$r()):(f["aria-hidden"]="true",f.focusable="false")),su({icons:{main:Kc(O),mask:A?Kc(A.icon):{found:!1,width:null,height:null,icon:{}}},prefix:M,iconName:P,transform:Vt(Vt({},Kn),i),symbol:a,title:h,maskId:u,titleId:p,extra:{attributes:f,styles:N,classes:d}})})}},HV={mixout:function(){return{icon:zV(jV)}},hooks:function(){return{mutationObserverCallbacks:function(n){return n.treeCallback=Lq,n.nodeCallback=LV,n}}},provides:function(t){t.i2svg=function(n){var s=n.node,i=s===void 0?pe:s,r=n.callback,a=r===void 0?function(){}:r;return Lq(i,a)},t.generateSvgReplacementMutation=function(n,s){var i=s.iconName,r=s.title,a=s.titleId,o=s.prefix,A=s.transform,l=s.symbol,u=s.mask,c=s.maskId,h=s.extra;return new Promise(function(q,p){Promise.all([Jc(i,o),u.iconName?Jc(u.iconName,u.prefix):Promise.resolve({found:!1,width:512,height:512,icon:{}})]).then(function(g){var d=Jl(g,2),D=d[0],f=d[1];q([n,su({icons:{main:D,mask:f},prefix:o,iconName:i,transform:A,symbol:l,maskId:c,title:r,titleId:a,extra:h,watchable:!0})])}).catch(p)})},t.generateAbstractIcon=function(n){var s=n.children,i=n.attributes,r=n.main,a=n.transform,o=n.styles,A=yA(o);A.length>0&&(i.style=A);var l;return $l(a)&&(l=qs("generateAbstractTransformGrouping",{main:r,transform:a,containerWidth:r.width,iconWidth:r.width})),s.push(l||r.icon),{children:s,attributes:i}}}},XV={mixout:function(){return{layer:function(n){var s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},i=s.classes,r=i===void 0?[]:i;return PA({type:"layer"},function(){mi("beforeDOMElementCreation",{assembler:n,params:s});var a=[];return n(function(o){Array.isArray(o)?o.map(function(A){a=a.concat(A.abstract)}):a=a.concat(o.abstract)}),[{tag:"span",attributes:{class:["".concat(Pt.cssPrefix,"-layers")].concat(ya(r)).join(" ")},children:a}]})}}}},$V={mixout:function(){return{counter:function(n){var s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},i=s.title,r=i===void 0?null:i,a=s.classes,o=a===void 0?[]:a,A=s.attributes,l=A===void 0?{}:A,u=s.styles,c=u===void 0?{}:u;return PA({type:"counter",content:n},function(){return mi("beforeDOMElementCreation",{content:n,params:s}),BV({content:n.toString(),title:r,extra:{attributes:l,styles:c,classes:["".concat(Pt.cssPrefix,"-layers-counter")].concat(ya(o))}})})}}}},t1={mixout:function(){return{text:function(n){var s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},i=s.transform,r=i===void 0?Kn:i,a=s.title,o=a===void 0?null:a,A=s.classes,l=A===void 0?[]:A,u=s.attributes,c=u===void 0?{}:u,h=s.styles,q=h===void 0?{}:h;return PA({type:"text",content:n},function(){return mi("beforeDOMElementCreation",{content:n,params:s}),_q({content:n,transform:Vt(Vt({},Kn),r),title:o,extra:{attributes:c,styles:q,classes:["".concat(Pt.cssPrefix,"-layers-text")].concat(ya(l))}})})}}},provides:function(t){t.generateLayersText=function(n,s){var i=s.title,r=s.transform,a=s.extra,o=null,A=null;if(ud){var l=parseInt(getComputedStyle(n).fontSize,10),u=n.getBoundingClientRect();o=u.width/l,A=u.height/l}return Pt.autoA11y&&!i&&(a.attributes["aria-hidden"]="true"),Promise.resolve([n,_q({content:n.innerHTML,width:o,height:A,transform:r,title:i,extra:a,watchable:!0})])}}},e1=new RegExp('"',"ug"),zq=[1105920,1112319];function n1(e){var t=e.replace(e1,""),n=dV(t,0),s=n>=zq[0]&&n<=zq[1],i=t.length===2?t[0]===t[1]:!1;return{value:_c(i?t[0]:t),isSecondary:s||i}}function jq(e,t){var n="".concat(FN).concat(t.replace(":","-"));return new Promise(function(s,i){if(e.getAttribute(n)!==null)return s();var r=dr(e.children),a=r.filter(function(O){return O.getAttribute(Gc)===t})[0],o=xs.getComputedStyle(e,t),A=o.getPropertyValue("font-family").match(zN),l=o.getPropertyValue("font-weight"),u=o.getPropertyValue("content");if(a&&!A)return e.removeChild(a),s();if(A&&u!=="none"&&u!==""){var c=o.getPropertyValue("content"),h=~["Sharp"].indexOf(A[2])?Ne:he,q=~["Solid","Regular","Light","Thin","Duotone","Brands","Kit"].indexOf(A[2])?jr[h][A[2].toLowerCase()]:jN[h][l],p=n1(c),g=p.value,d=p.isSecondary,D=A[0].startsWith("FontAwesome"),f=eu(q,g),y=f;if(D){var N=MV(g);N.iconName&&N.prefix&&(f=N.iconName,q=N.prefix)}if(f&&!d&&(!a||a.getAttribute(zl)!==q||a.getAttribute(jl)!==y)){e.setAttribute(n,y),a&&e.removeChild(a);var M=KV(),P=M.extra;P.attributes[Gc]=t,Jc(f,q).then(function(O){var E=su(Vt(Vt({},M),{},{icons:{main:O,mask:nu()},prefix:q,iconName:y,extra:P,watchable:!0})),V=pe.createElement("svg");t==="::before"?e.insertBefore(V,e.firstChild):e.appendChild(V),V.outerHTML=E.map(function(C){return Ea(C)}).join(`
`),e.removeAttribute(n),s()}).catch(i)}else s()}else s()})}function s1(e){return Promise.all([jq(e,"::before"),jq(e,"::after")])}function i1(e){return e.parentNode!==document.head&&!~KN.indexOf(e.tagName.toUpperCase())&&!e.getAttribute(Gc)&&(!e.parentNode||e.parentNode.tagName!=="svg")}function Hq(e){if(!!Ds)return new Promise(function(t,n){var s=dr(e.querySelectorAll("*")).filter(i1).map(s1),i=iu.begin("searchPseudoElements");Bd(),Promise.all(s).then(function(){i(),zc(),t()}).catch(function(){i(),zc(),n()})})}var r1={hooks:function(){return{mutationObserverCallbacks:function(n){return n.pseudoElementsCallback=Hq,n}}},provides:function(t){t.pseudoElements2svg=function(n){var s=n.node,i=s===void 0?pe:s;Pt.searchPseudoElements&&Hq(i)}}},Xq=!1,a1={mixout:function(){return{dom:{unwatch:function(){Bd(),Xq=!0}}}},hooks:function(){return{bootstrap:function(){Kq(Fc("mutationObserverCallbacks",{}))},noAuto:function(){_V()},watch:function(n){var s=n.observeMutationsRoot;Xq?zc():Kq(Fc("mutationObserverCallbacks",{observeMutationsRoot:s}))}}}},$q=function(t){var n={size:16,x:0,y:0,flipX:!1,flipY:!1,rotate:0};return t.toLowerCase().split(" ").reduce(function(s,i){var r=i.toLowerCase().split("-"),a=r[0],o=r.slice(1).join("-");if(a&&o==="h")return s.flipX=!0,s;if(a&&o==="v")return s.flipY=!0,s;if(o=parseFloat(o),isNaN(o))return s;switch(a){case"grow":s.size=s.size+o;break;case"shrink":s.size=s.size-o;break;case"left":s.x=s.x-o;break;case"right":s.x=s.x+o;break;case"up":s.y=s.y-o;break;case"down":s.y=s.y+o;break;case"rotate":s.rotate=s.rotate+o;break}return s},n)},o1={mixout:function(){return{parse:{transform:function(n){return $q(n)}}}},hooks:function(){return{parseNodeAttributes:function(n,s){var i=s.getAttribute("data-fa-transform");return i&&(n.transform=$q(i)),n}}},provides:function(t){t.generateAbstractTransformGrouping=function(n){var s=n.main,i=n.transform,r=n.containerWidth,a=n.iconWidth,o={transform:"translate(".concat(r/2," 256)")},A="translate(".concat(i.x*32,", ").concat(i.y*32,") "),l="scale(".concat(i.size/16*(i.flipX?-1:1),", ").concat(i.size/16*(i.flipY?-1:1),") "),u="rotate(".concat(i.rotate," 0 0)"),c={transform:"".concat(A," ").concat(l," ").concat(u)},h={transform:"translate(".concat(a/2*-1," -256)")},q={outer:o,inner:c,path:h};return{tag:"g",attributes:Vt({},q.outer),children:[{tag:"g",attributes:Vt({},q.inner),children:[{tag:s.icon.tag,children:s.icon.children,attributes:Vt(Vt({},s.icon.attributes),q.path)}]}]}}}},ac={x:0,y:0,width:"100%",height:"100%"};function th(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return e.attributes&&(e.attributes.fill||t)&&(e.attributes.fill="black"),e}function A1(e){return e.tag==="g"?e.children:[e]}var c1={hooks:function(){return{parseNodeAttributes:function(n,s){var i=s.getAttribute("data-fa-mask"),r=i?EA(i.split(" ").map(function(a){return a.trim()})):nu();return r.prefix||(r.prefix=Fs()),n.mask=r,n.maskId=s.getAttribute("data-fa-mask-id"),n}}},provides:function(t){t.generateAbstractMask=function(n){var s=n.children,i=n.attributes,r=n.main,a=n.mask,o=n.maskId,A=n.transform,l=r.width,u=r.icon,c=a.width,h=a.icon,q=oV({transform:A,containerWidth:c,iconWidth:l}),p={tag:"rect",attributes:Vt(Vt({},ac),{},{fill:"white"})},g=u.children?{children:u.children.map(th)}:{},d={tag:"g",attributes:Vt({},q.inner),children:[th(Vt({tag:u.tag,attributes:Vt(Vt({},u.attributes),q.path)},g))]},D={tag:"g",attributes:Vt({},q.outer),children:[d]},f="mask-".concat(o||$r()),y="clip-".concat(o||$r()),N={tag:"mask",attributes:Vt(Vt({},ac),{},{id:f,maskUnits:"userSpaceOnUse",maskContentUnits:"userSpaceOnUse"}),children:[p,D]},M={tag:"defs",children:[{tag:"clipPath",attributes:{id:y},children:A1(h)},N]};return s.push(M,{tag:"rect",attributes:Vt({fill:"currentColor","clip-path":"url(#".concat(y,")"),mask:"url(#".concat(f,")")},ac)}),{children:s,attributes:i}}}},l1={provides:function(t){var n=!1;xs.matchMedia&&(n=xs.matchMedia("(prefers-reduced-motion: reduce)").matches),t.missingIconAbstract=function(){var s=[],i={fill:"currentColor"},r={attributeType:"XML",repeatCount:"indefinite",dur:"2s"};s.push({tag:"path",attributes:Vt(Vt({},i),{},{d:"M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"})});var a=Vt(Vt({},r),{},{attributeName:"opacity"}),o={tag:"circle",attributes:Vt(Vt({},i),{},{cx:"256",cy:"364",r:"28"}),children:[]};return n||o.children.push({tag:"animate",attributes:Vt(Vt({},r),{},{attributeName:"r",values:"28;14;28;28;14;28;"})},{tag:"animate",attributes:Vt(Vt({},a),{},{values:"1;0;1;1;0;1;"})}),s.push(o),s.push({tag:"path",attributes:Vt(Vt({},i),{},{opacity:"1",d:"M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"}),children:n?[]:[{tag:"animate",attributes:Vt(Vt({},a),{},{values:"1;0;0;0;0;1;"})}]}),n||s.push({tag:"path",attributes:Vt(Vt({},i),{},{opacity:"0",d:"M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"}),children:[{tag:"animate",attributes:Vt(Vt({},a),{},{values:"0;0;1;1;0;0;"})}]}),{tag:"g",attributes:{class:"missing"},children:s}}}},u1={hooks:function(){return{parseNodeAttributes:function(n,s){var i=s.getAttribute("data-fa-symbol"),r=i===null?!1:i===""?!0:i;return n.symbol=r,n}}}},q1=[lV,HV,XV,$V,t1,r1,a1,o1,c1,l1,u1];WV(q1,{mixoutsTo:fn});fn.noAuto;var Td=fn.config,h1=fn.library;fn.dom;var Co=fn.parse;fn.findIconDefinition;fn.toHtml;var p1=fn.icon;fn.layer;var d1=fn.text;fn.counter;function eh(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter(function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable})),n.push.apply(n,s)}return n}function Cn(e){for(var t=1;t<arguments.length;t++){var n=arguments[t]!=null?arguments[t]:{};t%2?eh(Object(n),!0).forEach(function(s){an(e,s,n[s])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):eh(Object(n)).forEach(function(s){Object.defineProperty(e,s,Object.getOwnPropertyDescriptor(n,s))})}return e}function wo(e){return wo=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(t){return typeof t}:function(t){return t&&typeof Symbol=="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},wo(e)}function an(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function D1(e,t){if(e==null)return{};var n={},s=Object.keys(e),i,r;for(r=0;r<s.length;r++)i=s[r],!(t.indexOf(i)>=0)&&(n[i]=e[i]);return n}function g1(e,t){if(e==null)return{};var n=D1(e,t),s,i;if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)s=r[i],!(t.indexOf(s)>=0)&&(!Object.prototype.propertyIsEnumerable.call(e,s)||(n[s]=e[s]))}return n}function jc(e){return f1(e)||m1(e)||N1(e)||V1()}function f1(e){if(Array.isArray(e))return Hc(e)}function m1(e){if(typeof Symbol!="undefined"&&e[Symbol.iterator]!=null||e["@@iterator"]!=null)return Array.from(e)}function N1(e,t){if(!!e){if(typeof e=="string")return Hc(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(n==="Object"&&e.constructor&&(n=e.constructor.name),n==="Map"||n==="Set")return Array.from(e);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Hc(e,t)}}function Hc(e,t){(t==null||t>e.length)&&(t=e.length);for(var n=0,s=new Array(t);n<t;n++)s[n]=e[n];return s}function V1(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var M1=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{},bd={exports:{}};(function(e){(function(t){var n=function(D,f,y){if(!l(f)||c(f)||h(f)||q(f)||A(f))return f;var N,M=0,P=0;if(u(f))for(N=[],P=f.length;M<P;M++)N.push(n(D,f[M],y));else{N={};for(var O in f)Object.prototype.hasOwnProperty.call(f,O)&&(N[D(O,y)]=n(D,f[O],y))}return N},s=function(D,f){f=f||{};var y=f.separator||"_",N=f.split||/(?=[A-Z])/;return D.split(N).join(y)},i=function(D){return p(D)?D:(D=D.replace(/[\-_\s]+(.)?/g,function(f,y){return y?y.toUpperCase():""}),D.substr(0,1).toLowerCase()+D.substr(1))},r=function(D){var f=i(D);return f.substr(0,1).toUpperCase()+f.substr(1)},a=function(D,f){return s(D,f).toLowerCase()},o=Object.prototype.toString,A=function(D){return typeof D=="function"},l=function(D){return D===Object(D)},u=function(D){return o.call(D)=="[object Array]"},c=function(D){return o.call(D)=="[object Date]"},h=function(D){return o.call(D)=="[object RegExp]"},q=function(D){return o.call(D)=="[object Boolean]"},p=function(D){return D=D-0,D===D},g=function(D,f){var y=f&&"process"in f?f.process:f;return typeof y!="function"?D:function(N,M){return y(N,D,M)}},d={camelize:i,decamelize:a,pascalize:r,depascalize:a,camelizeKeys:function(D,f){return n(g(i,f),D)},decamelizeKeys:function(D,f){return n(g(a,f),D,f)},pascalizeKeys:function(D,f){return n(g(r,f),D)},depascalizeKeys:function(){return this.decamelizeKeys.apply(this,arguments)}};e.exports?e.exports=d:t.humps=d})(M1)})(bd);var O1=bd.exports,y1=["class","style"];function W1(e){return e.split(";").map(function(t){return t.trim()}).filter(function(t){return t}).reduce(function(t,n){var s=n.indexOf(":"),i=O1.camelize(n.slice(0,s)),r=n.slice(s+1).trim();return t[i]=r,t},{})}function E1(e){return e.split(/\s+/).reduce(function(t,n){return t[n]=!0,t},{})}function au(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};if(typeof e=="string")return e;var s=(e.children||[]).map(function(A){return au(A)}),i=Object.keys(e.attributes||{}).reduce(function(A,l){var u=e.attributes[l];switch(l){case"class":A.class=E1(u);break;case"style":A.style=W1(u);break;default:A.attrs[l]=u}return A},{attrs:{},class:{},style:{}});n.class;var r=n.style,a=r===void 0?{}:r,o=g1(n,y1);return Zl(e.tag,Cn(Cn(Cn({},t),{},{class:i.class,style:Cn(Cn({},i.style),a)},i.attrs),o),s)}var Ud=!1;try{Ud=!0}catch{}function P1(){if(!Ud&&console&&typeof console.error=="function"){var e;(e=console).error.apply(e,arguments)}}function Ur(e,t){return Array.isArray(t)&&t.length>0||!Array.isArray(t)&&t?an({},e,t):{}}function I1(e){var t,n=(t={"fa-spin":e.spin,"fa-pulse":e.pulse,"fa-fw":e.fixedWidth,"fa-border":e.border,"fa-li":e.listItem,"fa-inverse":e.inverse,"fa-flip":e.flip===!0,"fa-flip-horizontal":e.flip==="horizontal"||e.flip==="both","fa-flip-vertical":e.flip==="vertical"||e.flip==="both"},an(t,"fa-".concat(e.size),e.size!==null),an(t,"fa-rotate-".concat(e.rotation),e.rotation!==null),an(t,"fa-pull-".concat(e.pull),e.pull!==null),an(t,"fa-swap-opacity",e.swapOpacity),an(t,"fa-bounce",e.bounce),an(t,"fa-shake",e.shake),an(t,"fa-beat",e.beat),an(t,"fa-fade",e.fade),an(t,"fa-beat-fade",e.beatFade),an(t,"fa-flash",e.flash),an(t,"fa-spin-pulse",e.spinPulse),an(t,"fa-spin-reverse",e.spinReverse),t);return Object.keys(n).map(function(s){return n[s]?s:null}).filter(function(s){return s})}function nh(e){if(e&&wo(e)==="object"&&e.prefix&&e.iconName&&e.icon)return e;if(Co.icon)return Co.icon(e);if(e===null)return null;if(wo(e)==="object"&&e.prefix&&e.iconName)return e;if(Array.isArray(e)&&e.length===2)return{prefix:e[0],iconName:e[1]};if(typeof e=="string")return{prefix:"fas",iconName:e}}var S1=oe({name:"FontAwesomeIcon",props:{border:{type:Boolean,default:!1},fixedWidth:{type:Boolean,default:!1},flip:{type:[Boolean,String],default:!1,validator:function(t){return[!0,!1,"horizontal","vertical","both"].indexOf(t)>-1}},icon:{type:[Object,Array,String],required:!0},mask:{type:[Object,Array,String],default:null},listItem:{type:Boolean,default:!1},pull:{type:String,default:null,validator:function(t){return["right","left"].indexOf(t)>-1}},pulse:{type:Boolean,default:!1},rotation:{type:[String,Number],default:null,validator:function(t){return[90,180,270].indexOf(Number.parseInt(t,10))>-1}},swapOpacity:{type:Boolean,default:!1},size:{type:String,default:null,validator:function(t){return["2xs","xs","sm","lg","xl","2xl","1x","2x","3x","4x","5x","6x","7x","8x","9x","10x"].indexOf(t)>-1}},spin:{type:Boolean,default:!1},transform:{type:[String,Object],default:null},symbol:{type:[Boolean,String],default:!1},title:{type:String,default:null},inverse:{type:Boolean,default:!1},bounce:{type:Boolean,default:!1},shake:{type:Boolean,default:!1},beat:{type:Boolean,default:!1},fade:{type:Boolean,default:!1},beatFade:{type:Boolean,default:!1},flash:{type:Boolean,default:!1},spinPulse:{type:Boolean,default:!1},spinReverse:{type:Boolean,default:!1}},setup:function(t,n){var s=n.attrs,i=Nn(function(){return nh(t.icon)}),r=Nn(function(){return Ur("classes",I1(t))}),a=Nn(function(){return Ur("transform",typeof t.transform=="string"?Co.transform(t.transform):t.transform)}),o=Nn(function(){return Ur("mask",nh(t.mask))}),A=Nn(function(){return p1(i.value,Cn(Cn(Cn(Cn({},r.value),a.value),o.value),{},{symbol:t.symbol,title:t.title}))});co(A,function(u){if(!u)return P1("Could not find one or more icon(s)",i.value,o.value)},{immediate:!0});var l=Nn(function(){return A.value?au(A.value.abstract[0],{},s):null});return function(){return l.value}}});oe({name:"FontAwesomeLayers",props:{fixedWidth:{type:Boolean,default:!1}},setup:function(t,n){var s=n.slots,i=Td.familyPrefix,r=Nn(function(){return["".concat(i,"-layers")].concat(jc(t.fixedWidth?["".concat(i,"-fw")]:[]))});return function(){return Zl("div",{class:r.value},s.default?s.default():[])}}});oe({name:"FontAwesomeLayersText",props:{value:{type:[String,Number],default:""},transform:{type:[String,Object],default:null},counter:{type:Boolean,default:!1},position:{type:String,default:null,validator:function(t){return["bottom-left","bottom-right","top-left","top-right"].indexOf(t)>-1}}},setup:function(t,n){var s=n.attrs,i=Td.familyPrefix,r=Nn(function(){return Ur("classes",[].concat(jc(t.counter?["".concat(i,"-layers-counter")]:[]),jc(t.position?["".concat(i,"-layers-").concat(t.position)]:[])))}),a=Nn(function(){return Ur("transform",typeof t.transform=="string"?Co.transform(t.transform):t.transform)}),o=Nn(function(){var l=d1(t.value.toString(),Cn(Cn({},a.value),r.value)),u=l.abstract;return t.counter&&(u[0].attributes.class=u[0].attributes.class.replace("fa-layers-text","")),u[0]}),A=Nn(function(){return au(o.value,{},s)});return function(){return A.value}}});var C1={prefix:"fas",iconName:"plug",icon:[384,512,[128268],"f1e6","M96 0C78.3 0 64 14.3 64 32v96h64V32c0-17.7-14.3-32-32-32zM288 0c-17.7 0-32 14.3-32 32v96h64V32c0-17.7-14.3-32-32-32zM32 160c-17.7 0-32 14.3-32 32s14.3 32 32 32v32c0 77.4 55 142 128 156.8V480c0 17.7 14.3 32 32 32s32-14.3 32-32V412.8C297 398 352 333.4 352 256V224c17.7 0 32-14.3 32-32s-14.3-32-32-32H32z"]},w1={prefix:"fas",iconName:"arrows-to-dot",icon:[512,512,[],"e4be","M256 0c17.7 0 32 14.3 32 32V64h32c12.9 0 24.6 7.8 29.6 19.8s2.2 25.7-6.9 34.9l-64 64c-12.5 12.5-32.8 12.5-45.3 0l-64-64c-9.2-9.2-11.9-22.9-6.9-34.9s16.6-19.8 29.6-19.8h32V32c0-17.7 14.3-32 32-32zM169.4 393.4l64-64c12.5-12.5 32.8-12.5 45.3 0l64 64c9.2 9.2 11.9 22.9 6.9 34.9s-16.6 19.8-29.6 19.8H288v32c0 17.7-14.3 32-32 32s-32-14.3-32-32V448H192c-12.9 0-24.6-7.8-29.6-19.8s-2.2-25.7 6.9-34.9zM32 224H64V192c0-12.9 7.8-24.6 19.8-29.6s25.7-2.2 34.9 6.9l64 64c12.5 12.5 12.5 32.8 0 45.3l-64 64c-9.2 9.2-22.9 11.9-34.9 6.9s-19.8-16.6-19.8-29.6V288H32c-17.7 0-32-14.3-32-32s14.3-32 32-32zm297.4 54.6c-12.5-12.5-12.5-32.8 0-45.3l64-64c9.2-9.2 22.9-11.9 34.9-6.9s19.8 16.6 19.8 29.6v32h32c17.7 0 32 14.3 32 32s-14.3 32-32 32H448v32c0 12.9-7.8 24.6-19.8 29.6s-25.7 2.2-34.9-6.9l-64-64zM256 288c-17.7 0-32-14.3-32-32s14.3-32 32-32s32 14.3 32 32s-14.3 32-32 32z"]},B1={prefix:"fas",iconName:"floppy-disk",icon:[448,512,[128190,128426,"save"],"f0c7","M64 32C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V173.3c0-17-6.7-33.3-18.7-45.3L352 50.7C340 38.7 323.7 32 306.7 32H64zm0 96c0-17.7 14.3-32 32-32H288c17.7 0 32 14.3 32 32v64c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V128zM224 416c-35.3 0-64-28.7-64-64s28.7-64 64-64s64 28.7 64 64s-28.7 64-64 64z"]},k1={prefix:"fas",iconName:"trash",icon:[448,512,[],"f1f8","M135.2 17.7L128 32H32C14.3 32 0 46.3 0 64S14.3 96 32 96H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H320l-7.2-14.3C307.4 6.8 296.3 0 284.2 0H163.8c-12.1 0-23.2 6.8-28.6 17.7zM416 128H32L53.2 467c1.6 25.3 22.6 45 47.9 45H346.9c25.3 0 46.3-19.7 47.9-45L416 128z"]},T1={prefix:"fas",iconName:"comment",icon:[512,512,[128489,61669],"f075","M512 240c0 114.9-114.6 208-256 208c-37.1 0-72.3-6.4-104.1-17.9c-11.9 8.7-31.3 20.6-54.3 30.6C73.6 471.1 44.7 480 16 480c-6.5 0-12.3-3.9-14.8-9.9c-2.5-6-1.1-12.8 3.4-17.4l0 0 0 0 0 0 0 0 .3-.3c.3-.3 .7-.7 1.3-1.4c1.1-1.2 2.8-3.1 4.9-5.7c4.1-5 9.6-12.4 15.2-21.6c10-16.6 19.5-38.4 21.4-62.9C17.7 326.8 0 285.1 0 240C0 125.1 114.6 32 256 32s256 93.1 256 208z"]},b1={prefix:"fas",iconName:"circle-info",icon:[512,512,["info-circle"],"f05a","M256 512c141.4 0 256-114.6 256-256S397.4 0 256 0S0 114.6 0 256S114.6 512 256 512zM216 336h24V272H216c-13.3 0-24-10.7-24-24s10.7-24 24-24h48c13.3 0 24 10.7 24 24v88h8c13.3 0 24 10.7 24 24s-10.7 24-24 24H216c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-144c-17.7 0-32-14.3-32-32s14.3-32 32-32s32 14.3 32 32s-14.3 32-32 32z"]},U1={prefix:"fas",iconName:"keyboard",icon:[576,512,[9e3],"f11c","M64 64C28.7 64 0 92.7 0 128V384c0 35.3 28.7 64 64 64H512c35.3 0 64-28.7 64-64V128c0-35.3-28.7-64-64-64H64zm16 64h32c8.8 0 16 7.2 16 16v32c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16V144c0-8.8 7.2-16 16-16zM64 240c0-8.8 7.2-16 16-16h32c8.8 0 16 7.2 16 16v32c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16V240zm16 80h32c8.8 0 16 7.2 16 16v32c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16V336c0-8.8 7.2-16 16-16zm80-176c0-8.8 7.2-16 16-16h32c8.8 0 16 7.2 16 16v32c0 8.8-7.2 16-16 16H176c-8.8 0-16-7.2-16-16V144zm16 80h32c8.8 0 16 7.2 16 16v32c0 8.8-7.2 16-16 16H176c-8.8 0-16-7.2-16-16V240c0-8.8 7.2-16 16-16zM160 336c0-8.8 7.2-16 16-16H400c8.8 0 16 7.2 16 16v32c0 8.8-7.2 16-16 16H176c-8.8 0-16-7.2-16-16V336zM272 128h32c8.8 0 16 7.2 16 16v32c0 8.8-7.2 16-16 16H272c-8.8 0-16-7.2-16-16V144c0-8.8 7.2-16 16-16zM256 240c0-8.8 7.2-16 16-16h32c8.8 0 16 7.2 16 16v32c0 8.8-7.2 16-16 16H272c-8.8 0-16-7.2-16-16V240zM368 128h32c8.8 0 16 7.2 16 16v32c0 8.8-7.2 16-16 16H368c-8.8 0-16-7.2-16-16V144c0-8.8 7.2-16 16-16zM352 240c0-8.8 7.2-16 16-16h32c8.8 0 16 7.2 16 16v32c0 8.8-7.2 16-16 16H368c-8.8 0-16-7.2-16-16V240zM464 128h32c8.8 0 16 7.2 16 16v32c0 8.8-7.2 16-16 16H464c-8.8 0-16-7.2-16-16V144c0-8.8 7.2-16 16-16zM448 240c0-8.8 7.2-16 16-16h32c8.8 0 16 7.2 16 16v32c0 8.8-7.2 16-16 16H464c-8.8 0-16-7.2-16-16V240zm16 80h32c8.8 0 16 7.2 16 16v32c0 8.8-7.2 16-16 16H464c-8.8 0-16-7.2-16-16V336c0-8.8 7.2-16 16-16z"]},Q1={prefix:"fas",iconName:"download",icon:[512,512,[],"f019","M288 32c0-17.7-14.3-32-32-32s-32 14.3-32 32V274.7l-73.4-73.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l128 128c12.5 12.5 32.8 12.5 45.3 0l128-128c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L288 274.7V32zM64 352c-35.3 0-64 28.7-64 64v32c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V416c0-35.3-28.7-64-64-64H346.5l-45.3 45.3c-25 25-65.5 25-90.5 0L165.5 352H64zM432 456c-13.3 0-24-10.7-24-24s10.7-24 24-24s24 10.7 24 24s-10.7 24-24 24z"]},v1={prefix:"fas",iconName:"upload",icon:[512,512,[],"f093","M288 109.3V352c0 17.7-14.3 32-32 32s-32-14.3-32-32V109.3l-73.4 73.4c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3l128-128c12.5-12.5 32.8-12.5 45.3 0l128 128c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L288 109.3zM64 352H192c0 35.3 28.7 64 64 64s64-28.7 64-64H448c35.3 0 64 28.7 64 64v32c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V416c0-35.3 28.7-64 64-64zM432 456c13.3 0 24-10.7 24-24s-10.7-24-24-24s-24 10.7-24 24s10.7 24 24 24z"]},R1={prefix:"fas",iconName:"arrows-up-down-left-right",icon:[512,512,["arrows"],"f047","M278.6 9.4c-12.5-12.5-32.8-12.5-45.3 0l-64 64c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l9.4-9.4V224H109.3l9.4-9.4c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-64 64c-12.5 12.5-12.5 32.8 0 45.3l64 64c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3l-9.4-9.4H224V402.7l-9.4-9.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l64 64c12.5 12.5 32.8 12.5 45.3 0l64-64c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-9.4 9.4V288H402.7l-9.4 9.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l64-64c12.5-12.5 12.5-32.8 0-45.3l-64-64c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l9.4 9.4H288V109.3l9.4 9.4c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3l-64-64z"]},Y1={prefix:"fas",iconName:"copyright",icon:[512,512,[169],"f1f9","M256 512c141.4 0 256-114.6 256-256S397.4 0 256 0S0 114.6 0 256S114.6 512 256 512zM199.4 312.6c31.2 31.2 81.9 31.2 113.1 0c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9c-50 50-131 50-181 0s-50-131 0-181s131-50 181 0c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0c-31.2-31.2-81.9-31.2-113.1 0s-31.2 81.9 0 113.1z"]},G1={prefix:"fas",iconName:"music",icon:[512,512,[127925],"f001","M499.1 6.3c8.1 6 12.9 15.6 12.9 25.7v72V368c0 44.2-43 80-96 80s-96-35.8-96-80s43-80 96-80c11.2 0 22 1.6 32 4.6V147L192 223.8V432c0 44.2-43 80-96 80s-96-35.8-96-80s43-80 96-80c11.2 0 22 1.6 32 4.6V200 128c0-14.1 9.3-26.6 22.8-30.7l320-96c9.7-2.9 20.2-1.1 28.3 5z"]},_1={prefix:"fas",iconName:"dollar-sign",icon:[320,512,[128178,61781,"dollar","usd"],"24","M160 0c17.7 0 32 14.3 32 32V67.7c1.6 .2 3.1 .4 4.7 .7c10.6 1.6 42.1 6.7 55.1 10c17.1 4.3 27.5 21.7 23.2 38.9s-21.7 27.5-38.9 23.2c-9.3-2.4-37.6-7-48.9-8.7c-32.1-4.8-59.6-2.4-78.5 4.9c-18.3 7-25.9 16.9-27.9 28c-1.9 10.7-.5 16.8 1.3 20.6c1.9 4 5.6 8.5 12.9 13.4c16.2 10.8 41.1 17.9 73.3 26.7l2.8 .8c28.4 7.7 63.2 17.2 89 34.3c14.1 9.4 27.3 22.1 35.5 39.7c8.3 17.8 10.1 37.8 6.3 59.1c-6.9 38-33.1 63.4-65.6 76.7c-13.7 5.6-28.6 9.2-44.4 11V480c0 17.7-14.3 32-32 32s-32-14.3-32-32V445.1c-.4-.1-.9-.1-1.3-.2l-.2 0 0 0c-24.4-3.8-64.5-14.3-91.5-26.3c-16.2-7.2-23.4-26.1-16.2-42.2s26.1-23.4 42.2-16.2c20.9 9.3 55.3 18.4 75.2 21.6c31.9 4.7 58.2 2 76-5.3c16.9-6.9 24.6-16.9 26.8-28.9c1.9-10.7 .5-16.8-1.3-20.6c-1.9-4-5.6-8.5-12.9-13.4c-16.2-10.8-41.1-17.9-73.3-26.7l-2.8-.8c-28.4-7.7-63.2-17.2-89-34.3c-14.1-9.4-27.3-22.1-35.5-39.7c-8.3-17.8-10.1-37.8-6.3-59.1C25 114.1 53 89.3 86 76.7c13-5 27.2-8.2 42-10V32c0-17.7 14.3-32 32-32z"]};const Qd="14.7.77",sh=(e,t,n)=>({endTime:t,insertTime:n,type:"exponentialRampToValue",value:e}),ih=(e,t,n)=>({endTime:t,insertTime:n,type:"linearRampToValue",value:e}),Xc=(e,t)=>({startTime:t,type:"setValue",value:e}),vd=(e,t,n)=>({duration:n,startTime:t,type:"setValueCurve",values:e}),Rd=(e,t,{startTime:n,target:s,timeConstant:i})=>s+(t-s)*Math.exp((n-e)/i),Fi=e=>e.type==="exponentialRampToValue",Bo=e=>e.type==="linearRampToValue",Is=e=>Fi(e)||Bo(e),ou=e=>e.type==="setValue",ns=e=>e.type==="setValueCurve",ko=(e,t,n,s)=>{const i=e[t];return i===void 0?s:Is(i)||ou(i)?i.value:ns(i)?i.values[i.values.length-1]:Rd(n,ko(e,t-1,i.startTime,s),i)},rh=(e,t,n,s,i)=>n===void 0?[s.insertTime,i]:Is(n)?[n.endTime,n.value]:ou(n)?[n.startTime,n.value]:ns(n)?[n.startTime+n.duration,n.values[n.values.length-1]]:[n.startTime,ko(e,t-1,n.startTime,i)],$c=e=>e.type==="cancelAndHold",tl=e=>e.type==="cancelScheduledValues",Ws=e=>$c(e)||tl(e)?e.cancelTime:Fi(e)||Bo(e)?e.endTime:e.startTime,ah=(e,t,n,{endTime:s,value:i})=>n===i?i:0<n&&0<i||n<0&&i<0?n*(i/n)**((e-t)/(s-t)):0,oh=(e,t,n,{endTime:s,value:i})=>n+(e-t)/(s-t)*(i-n),x1=(e,t)=>{const n=Math.floor(t),s=Math.ceil(t);return n===s?e[n]:(1-(t-n))*e[n]+(1-(s-t))*e[s]},F1=(e,{duration:t,startTime:n,values:s})=>{const i=(e-n)/t*(s.length-1);return x1(s,i)},$a=e=>e.type==="setTarget";class Z1{constructor(t){this._automationEvents=[],this._currenTime=0,this._defaultValue=t}[Symbol.iterator](){return this._automationEvents[Symbol.iterator]()}add(t){const n=Ws(t);if($c(t)||tl(t)){const s=this._automationEvents.findIndex(r=>tl(t)&&ns(r)?r.startTime+r.duration>=n:Ws(r)>=n),i=this._automationEvents[s];if(s!==-1&&(this._automationEvents=this._automationEvents.slice(0,s)),$c(t)){const r=this._automationEvents[this._automationEvents.length-1];if(i!==void 0&&Is(i)){if($a(r))throw new Error("The internal list is malformed.");const a=ns(r)?r.startTime+r.duration:Ws(r),o=ns(r)?r.values[r.values.length-1]:r.value,A=Fi(i)?ah(n,a,o,i):oh(n,a,o,i),l=Fi(i)?sh(A,n,this._currenTime):ih(A,n,this._currenTime);this._automationEvents.push(l)}r!==void 0&&$a(r)&&this._automationEvents.push(Xc(this.getValue(n),n)),r!==void 0&&ns(r)&&r.startTime+r.duration>n&&(this._automationEvents[this._automationEvents.length-1]=vd(new Float32Array([6,7]),r.startTime,n-r.startTime))}}else{const s=this._automationEvents.findIndex(a=>Ws(a)>n),i=s===-1?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[s-1];if(i!==void 0&&ns(i)&&Ws(i)+i.duration>n)return!1;const r=Fi(t)?sh(t.value,t.endTime,this._currenTime):Bo(t)?ih(t.value,n,this._currenTime):t;if(s===-1)this._automationEvents.push(r);else{if(ns(t)&&n+t.duration>Ws(this._automationEvents[s]))return!1;this._automationEvents.splice(s,0,r)}}return!0}flush(t){const n=this._automationEvents.findIndex(s=>Ws(s)>t);if(n>1){const s=this._automationEvents.slice(n-1),i=s[0];$a(i)&&s.unshift(Xc(ko(this._automationEvents,n-2,i.startTime,this._defaultValue),i.startTime)),this._automationEvents=s}}getValue(t){if(this._automationEvents.length===0)return this._defaultValue;const n=this._automationEvents.findIndex(a=>Ws(a)>t),s=this._automationEvents[n],i=(n===-1?this._automationEvents.length:n)-1,r=this._automationEvents[i];if(r!==void 0&&$a(r)&&(s===void 0||!Is(s)||s.insertTime>t))return Rd(t,ko(this._automationEvents,i-1,r.startTime,this._defaultValue),r);if(r!==void 0&&ou(r)&&(s===void 0||!Is(s)))return r.value;if(r!==void 0&&ns(r)&&(s===void 0||!Is(s)||r.startTime+r.duration>t))return t<r.startTime+r.duration?F1(t,r):r.values[r.values.length-1];if(r!==void 0&&Is(r)&&(s===void 0||!Is(s)))return r.value;if(s!==void 0&&Fi(s)){const[a,o]=rh(this._automationEvents,i,r,s,this._defaultValue);return ah(t,a,o,s)}if(s!==void 0&&Bo(s)){const[a,o]=rh(this._automationEvents,i,r,s,this._defaultValue);return oh(t,a,o,s)}return this._defaultValue}}const K1=e=>({cancelTime:e,type:"cancelAndHold"}),J1=e=>({cancelTime:e,type:"cancelScheduledValues"}),L1=(e,t)=>({endTime:t,type:"exponentialRampToValue",value:e}),z1=(e,t)=>({endTime:t,type:"linearRampToValue",value:e}),j1=(e,t,n)=>({startTime:t,target:e,timeConstant:n,type:"setTarget"}),H1=()=>new DOMException("","AbortError"),X1=e=>(t,n,[s,i,r],a)=>{e(t[i],[n,s,r],o=>o[0]===n&&o[1]===s,a)},$1=e=>(t,n,s)=>{const i=[];for(let r=0;r<s.numberOfInputs;r+=1)i.push(new Set);e.set(t,{activeInputs:i,outputs:new Set,passiveInputs:new WeakMap,renderer:n})},tM=e=>(t,n)=>{e.set(t,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:n})},ar=new WeakSet,Yd=new WeakMap,Au=new WeakMap,Gd=new WeakMap,cu=new WeakMap,IA=new WeakMap,_d=new WeakMap,el=new WeakMap,nl=new WeakMap,sl=new WeakMap,xd={construct(){return xd}},eM=e=>{try{const t=new Proxy(e,xd);new t}catch{return!1}return!0},Ah=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,ch=(e,t)=>{const n=[];let s=e.replace(/^[\s]+/,""),i=s.match(Ah);for(;i!==null;){const r=i[1].slice(1,-1),a=i[0].replace(/([\s]+)?;?$/,"").replace(r,new URL(r,t).toString());n.push(a),s=s.slice(i[0].length).replace(/^[\s]+/,""),i=s.match(Ah)}return[n.join(";"),s]},lh=e=>{if(e!==void 0&&!Array.isArray(e))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},uh=e=>{if(!eM(e))throw new TypeError("The given value for processorCtor should be a constructor.");if(e.prototype===null||typeof e.prototype!="object")throw new TypeError("The given value for processorCtor should have a prototype.")},nM=(e,t,n,s,i,r,a,o,A,l,u,c,h)=>{let q=0;return(p,g,d={credentials:"omit"})=>{const D=u.get(p);if(D!==void 0&&D.has(g))return Promise.resolve();const f=l.get(p);if(f!==void 0){const M=f.get(g);if(M!==void 0)return M}const y=r(p),N=y.audioWorklet===void 0?i(g).then(([M,P])=>{const[O,E]=ch(M,P),V=`${O};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${E}
})})(window,'_AWGS')`;return n(V)}).then(()=>{const M=h._AWGS.pop();if(M===void 0)throw new SyntaxError;s(y.currentTime,y.sampleRate,()=>M(class{},void 0,(P,O)=>{if(P.trim()==="")throw t();const E=nl.get(y);if(E!==void 0){if(E.has(P))throw t();uh(O),lh(O.parameterDescriptors),E.set(P,O)}else uh(O),lh(O.parameterDescriptors),nl.set(y,new Map([[P,O]]))},y.sampleRate,void 0,void 0))}):Promise.all([i(g),Promise.resolve(e(c,c))]).then(([[M,P],O])=>{const E=q+1;q=E;const[V,C]=ch(M,P),K=`${V};((AudioWorkletProcessor,registerProcessor)=>{${C}
})(${O?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${O?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${O?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${E}',class extends AudioWorkletProcessor{process(){return !1}})`,rt=new Blob([K],{type:"application/javascript; charset=utf-8"}),tt=URL.createObjectURL(rt);return y.audioWorklet.addModule(tt,d).then(()=>{if(o(y))return y;const z=a(y);return z.audioWorklet.addModule(tt,d).then(()=>z)}).then(z=>{if(A===null)throw new SyntaxError;try{new A(z,`__sac${E}`)}catch{throw new SyntaxError}}).finally(()=>URL.revokeObjectURL(tt))});return f===void 0?l.set(p,new Map([[g,N]])):f.set(g,N),N.then(()=>{const M=u.get(p);M===void 0?u.set(p,new Set([g])):M.add(g)}).finally(()=>{const M=l.get(p);M!==void 0&&M.delete(g)}),N}},Qn=(e,t)=>{const n=e.get(t);if(n===void 0)throw new Error("A value with the given key could not be found.");return n},SA=(e,t)=>{const n=Array.from(e).filter(t);if(n.length>1)throw Error("More than one element was found.");if(n.length===0)throw Error("No element was found.");const[s]=n;return e.delete(s),s},Fd=(e,t,n,s)=>{const i=Qn(e,t),r=SA(i,a=>a[0]===n&&a[1]===s);return i.size===0&&e.delete(t),r},Pa=e=>Qn(_d,e),or=e=>{if(ar.has(e))throw new Error("The AudioNode is already stored.");ar.add(e),Pa(e).forEach(t=>t(!0))},Zd=e=>"port"in e,Ia=e=>{if(!ar.has(e))throw new Error("The AudioNode is not stored.");ar.delete(e),Pa(e).forEach(t=>t(!1))},il=(e,t)=>{!Zd(e)&&t.every(n=>n.size===0)&&Ia(e)},sM=(e,t,n,s,i,r,a,o,A,l,u,c,h)=>{const q=new WeakMap;return(p,g,d,D,f)=>{const{activeInputs:y,passiveInputs:N}=r(g),{outputs:M}=r(p),P=o(p),O=E=>{const V=A(g),C=A(p);if(E){const B=Fd(N,p,d,D);e(y,p,B,!1),!f&&!c(p)&&n(C,V,d,D),h(g)&&or(g)}else{const B=s(y,p,d,D);t(N,D,B,!1),!f&&!c(p)&&i(C,V,d,D);const v=a(g);if(v===0)u(g)&&il(g,y);else{const J=q.get(g);J!==void 0&&clearTimeout(J),q.set(g,setTimeout(()=>{u(g)&&il(g,y)},v*1e3))}}};return l(M,[g,d,D],E=>E[0]===g&&E[1]===d&&E[2]===D,!0)?(P.add(O),u(p)?e(y,p,[d,D,O],!0):t(N,D,[p,d,O],!0),!0):!1}},iM=e=>(t,n,[s,i,r],a)=>{const o=t.get(s);o===void 0?t.set(s,new Set([[i,n,r]])):e(o,[i,n,r],A=>A[0]===i&&A[1]===n,a)},rM=e=>(t,n)=>{const s=e(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});n.connect(s).connect(t.destination);const i=()=>{n.removeEventListener("ended",i),n.disconnect(s),s.disconnect()};n.addEventListener("ended",i)},aM=e=>(t,n)=>{e(t).add(n)},oM={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},AM=(e,t,n,s,i,r)=>class extends e{constructor(o,A){const l=i(o),u=nt(nt({},oM),A),c=s(l,u),h=r(l)?t():null;super(o,!1,c,h),this._nativeAnalyserNode=c}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(o){this._nativeAnalyserNode.fftSize=o}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(o){const A=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=o,!(o>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=A,n()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(o){const A=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=o,!(this._nativeAnalyserNode.maxDecibels>o))throw this._nativeAnalyserNode.minDecibels=A,n()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(o){this._nativeAnalyserNode.smoothingTimeConstant=o}getByteFrequencyData(o){this._nativeAnalyserNode.getByteFrequencyData(o)}getByteTimeDomainData(o){this._nativeAnalyserNode.getByteTimeDomainData(o)}getFloatFrequencyData(o){this._nativeAnalyserNode.getFloatFrequencyData(o)}getFloatTimeDomainData(o){this._nativeAnalyserNode.getFloatTimeDomainData(o)}},je=(e,t)=>e.context===t,cM=(e,t,n)=>()=>{const s=new WeakMap,i=async(r,a)=>{let o=t(r);if(!je(o,a)){const l={channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,fftSize:o.fftSize,maxDecibels:o.maxDecibels,minDecibels:o.minDecibels,smoothingTimeConstant:o.smoothingTimeConstant};o=e(a,l)}return s.set(a,o),await n(r,a,o),o};return{render(r,a){const o=s.get(a);return o!==void 0?Promise.resolve(o):i(r,a)}}},To=e=>{try{e.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},Xn=()=>new DOMException("","IndexSizeError"),lu=e=>{e.getChannelData=(t=>n=>{try{return t.call(e,n)}catch(s){throw s.code===12?Xn():s}})(e.getChannelData)},lM={numberOfChannels:1},uM=(e,t,n,s,i,r,a,o)=>{let A=null;return class Kd{constructor(u){if(i===null)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:c,numberOfChannels:h,sampleRate:q}=nt(nt({},lM),u);A===null&&(A=new i(1,1,44100));const p=s!==null&&t(r,r)?new s({length:c,numberOfChannels:h,sampleRate:q}):A.createBuffer(h,c,q);if(p.numberOfChannels===0)throw n();return typeof p.copyFromChannel!="function"?(a(p),lu(p)):t(To,()=>To(p))||o(p),e.add(p),p}static[Symbol.hasInstance](u){return u!==null&&typeof u=="object"&&Object.getPrototypeOf(u)===Kd.prototype||e.has(u)}}},An=-34028234663852886e22,tn=-An,os=e=>ar.has(e),qM={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},hM=(e,t,n,s,i,r,a,o)=>class extends e{constructor(l,u){const c=r(l),h=nt(nt({},qM),u),q=i(c,h),p=a(c),g=p?t():null;super(l,!1,q,g),this._audioBufferSourceNodeRenderer=g,this._isBufferNullified=!1,this._isBufferSet=h.buffer!==null,this._nativeAudioBufferSourceNode=q,this._onended=null,this._playbackRate=n(this,p,q.playbackRate,tn,An)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(l){if(this._nativeAudioBufferSourceNode.buffer=l,l!==null){if(this._isBufferSet)throw s();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(l){this._nativeAudioBufferSourceNode.loop=l}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(l){this._nativeAudioBufferSourceNode.loopEnd=l}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(l){this._nativeAudioBufferSourceNode.loopStart=l}get onended(){return this._onended}set onended(l){const u=typeof l=="function"?o(this,l):null;this._nativeAudioBufferSourceNode.onended=u;const c=this._nativeAudioBufferSourceNode.onended;this._onended=c!==null&&c===u?l:c}get playbackRate(){return this._playbackRate}start(l=0,u=0,c){if(this._nativeAudioBufferSourceNode.start(l,u,c),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.start=c===void 0?[l,u]:[l,u,c]),this.context.state!=="closed"){or(this);const h=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",h),os(this)&&Ia(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",h)}}stop(l=0){this._nativeAudioBufferSourceNode.stop(l),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.stop=l)}},pM=(e,t,n,s,i)=>()=>{const r=new WeakMap;let a=null,o=null;const A=async(l,u)=>{let c=n(l);const h=je(c,u);if(!h){const q={buffer:c.buffer,channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,loop:c.loop,loopEnd:c.loopEnd,loopStart:c.loopStart,playbackRate:c.playbackRate.value};c=t(u,q),a!==null&&c.start(...a),o!==null&&c.stop(o)}return r.set(u,c),h?await e(u,l.playbackRate,c.playbackRate):await s(u,l.playbackRate,c.playbackRate),await i(l,u,c),c};return{set start(l){a=l},set stop(l){o=l},render(l,u){const c=r.get(u);return c!==void 0?Promise.resolve(c):A(l,u)}}},dM=e=>"playbackRate"in e,DM=e=>"frequency"in e&&"gain"in e,gM=e=>"offset"in e,fM=e=>!("frequency"in e)&&"gain"in e,mM=e=>"detune"in e&&"frequency"in e,NM=e=>"pan"in e,nn=e=>Qn(Yd,e),Sa=e=>Qn(Gd,e),rl=(e,t)=>{const{activeInputs:n}=nn(e);n.forEach(i=>i.forEach(([r])=>{t.includes(e)||rl(r,[...t,e])}));const s=dM(e)?[e.playbackRate]:Zd(e)?Array.from(e.parameters.values()):DM(e)?[e.Q,e.detune,e.frequency,e.gain]:gM(e)?[e.offset]:fM(e)?[e.gain]:mM(e)?[e.detune,e.frequency]:NM(e)?[e.pan]:[];for(const i of s){const r=Sa(i);r!==void 0&&r.activeInputs.forEach(([a])=>rl(a,t))}os(e)&&Ia(e)},Jd=e=>{rl(e.destination,[])},VM=e=>e===void 0||typeof e=="number"||typeof e=="string"&&(e==="balanced"||e==="interactive"||e==="playback"),MM=(e,t,n,s,i,r,a,o,A)=>class extends e{constructor(u={}){if(A===null)throw new Error("Missing the native AudioContext constructor.");let c;try{c=new A(u)}catch(p){throw p.code===12&&p.message==="sampleRate is not in range"?n():p}if(c===null)throw s();if(!VM(u.latencyHint))throw new TypeError(`The provided value '${u.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(u.sampleRate!==void 0&&c.sampleRate!==u.sampleRate)throw n();super(c,2);const{latencyHint:h}=u,{sampleRate:q}=c;if(this._baseLatency=typeof c.baseLatency=="number"?c.baseLatency:h==="balanced"?512/q:h==="interactive"||h===void 0?256/q:h==="playback"?1024/q:Math.max(2,Math.min(128,Math.round(h*q/128)))*128/q,this._nativeAudioContext=c,A.name==="webkitAudioContext"?(this._nativeGainNode=c.createGain(),this._nativeOscillatorNode=c.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(c.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,c.state==="running"){this._state="suspended";const p=()=>{this._state==="suspended"&&(this._state=null),c.removeEventListener("statechange",p)};c.addEventListener("statechange",p)}}get baseLatency(){return this._baseLatency}get state(){return this._state!==null?this._state:this._nativeAudioContext.state}close(){return this.state==="closed"?this._nativeAudioContext.close().then(()=>{throw t()}):(this._state==="suspended"&&(this._state=null),this._nativeAudioContext.close().then(()=>{this._nativeGainNode!==null&&this._nativeOscillatorNode!==null&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),Jd(this)}))}createMediaElementSource(u){return new i(this,{mediaElement:u})}createMediaStreamDestination(){return new r(this)}createMediaStreamSource(u){return new a(this,{mediaStream:u})}createMediaStreamTrackSource(u){return new o(this,{mediaStreamTrack:u})}resume(){return this._state==="suspended"?new Promise((u,c)=>{const h=()=>{this._nativeAudioContext.removeEventListener("statechange",h),this._nativeAudioContext.state==="running"?u():this.resume().then(u,c)};this._nativeAudioContext.addEventListener("statechange",h)}):this._nativeAudioContext.resume().catch(u=>{throw u===void 0||u.code===15?t():u})}suspend(){return this._nativeAudioContext.suspend().catch(u=>{throw u===void 0?t():u})}},OM=(e,t,n,s,i,r,a,o)=>class extends e{constructor(l,u){const c=r(l),h=a(c),q=i(c,u,h),p=h?t(o):null;super(l,!1,q,p),this._isNodeOfNativeOfflineAudioContext=h,this._nativeAudioDestinationNode=q}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(l){if(this._isNodeOfNativeOfflineAudioContext)throw s();if(l>this._nativeAudioDestinationNode.maxChannelCount)throw n();this._nativeAudioDestinationNode.channelCount=l}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(l){if(this._isNodeOfNativeOfflineAudioContext)throw s();this._nativeAudioDestinationNode.channelCountMode=l}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}},yM=e=>{const t=new WeakMap,n=async(s,i)=>{const r=i.destination;return t.set(i,r),await e(s,i,r),r};return{render(s,i){const r=t.get(i);return r!==void 0?Promise.resolve(r):n(s,i)}}},WM=(e,t,n,s,i,r,a,o)=>(A,l)=>{const u=l.listener,c=()=>{const M=new Float32Array(1),P=t(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),O=a(l);let E=!1,V=[0,0,-1,0,1,0],C=[0,0,0];const B=()=>{if(E)return;E=!0;const rt=s(l,256,9,0);rt.onaudioprocess=({inputBuffer:tt})=>{const z=[r(tt,M,0),r(tt,M,1),r(tt,M,2),r(tt,M,3),r(tt,M,4),r(tt,M,5)];z.some((at,St)=>at!==V[St])&&(u.setOrientation(...z),V=z);const dt=[r(tt,M,6),r(tt,M,7),r(tt,M,8)];dt.some((at,St)=>at!==C[St])&&(u.setPosition(...dt),C=dt)},P.connect(rt)},v=rt=>tt=>{tt!==V[rt]&&(V[rt]=tt,u.setOrientation(...V))},J=rt=>tt=>{tt!==C[rt]&&(C[rt]=tt,u.setPosition(...C))},K=(rt,tt,z)=>{const dt=n(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:tt});dt.connect(P,0,rt),dt.start(),Object.defineProperty(dt.offset,"defaultValue",{get(){return tt}});const at=e({context:A},O,dt.offset,tn,An);return o(at,"value",St=>()=>St.call(at),St=>gt=>{try{St.call(at,gt)}catch(kt){if(kt.code!==9)throw kt}B(),O&&z(gt)}),at.cancelAndHoldAtTime=(St=>O?()=>{throw i()}:(...gt)=>{const kt=St.apply(at,gt);return B(),kt})(at.cancelAndHoldAtTime),at.cancelScheduledValues=(St=>O?()=>{throw i()}:(...gt)=>{const kt=St.apply(at,gt);return B(),kt})(at.cancelScheduledValues),at.exponentialRampToValueAtTime=(St=>O?()=>{throw i()}:(...gt)=>{const kt=St.apply(at,gt);return B(),kt})(at.exponentialRampToValueAtTime),at.linearRampToValueAtTime=(St=>O?()=>{throw i()}:(...gt)=>{const kt=St.apply(at,gt);return B(),kt})(at.linearRampToValueAtTime),at.setTargetAtTime=(St=>O?()=>{throw i()}:(...gt)=>{const kt=St.apply(at,gt);return B(),kt})(at.setTargetAtTime),at.setValueAtTime=(St=>O?()=>{throw i()}:(...gt)=>{const kt=St.apply(at,gt);return B(),kt})(at.setValueAtTime),at.setValueCurveAtTime=(St=>O?()=>{throw i()}:(...gt)=>{const kt=St.apply(at,gt);return B(),kt})(at.setValueCurveAtTime),at};return{forwardX:K(0,0,v(0)),forwardY:K(1,0,v(1)),forwardZ:K(2,-1,v(2)),positionX:K(6,0,J(0)),positionY:K(7,0,J(1)),positionZ:K(8,0,J(2)),upX:K(3,0,v(3)),upY:K(4,1,v(4)),upZ:K(5,0,v(5))}},{forwardX:h,forwardY:q,forwardZ:p,positionX:g,positionY:d,positionZ:D,upX:f,upY:y,upZ:N}=u.forwardX===void 0?c():u;return{get forwardX(){return h},get forwardY(){return q},get forwardZ(){return p},get positionX(){return g},get positionY(){return d},get positionZ(){return D},get upX(){return f},get upY(){return y},get upZ(){return N}}},bo=e=>"context"in e,Ca=e=>bo(e[0]),ki=(e,t,n,s)=>{for(const i of e)if(n(i)){if(s)return!1;throw Error("The set contains at least one similar element.")}return e.add(t),!0},qh=(e,t,[n,s],i)=>{ki(e,[t,n,s],r=>r[0]===t&&r[1]===n,i)},hh=(e,[t,n,s],i)=>{const r=e.get(t);r===void 0?e.set(t,new Set([[n,s]])):ki(r,[n,s],a=>a[0]===n,i)},Dr=e=>"inputs"in e,Uo=(e,t,n,s)=>{if(Dr(t)){const i=t.inputs[s];return e.connect(i,n,0),[i,n,0]}return e.connect(t,n,s),[t,n,s]},Ld=(e,t,n)=>{for(const s of e)if(s[0]===t&&s[1]===n)return e.delete(s),s;return null},EM=(e,t,n)=>SA(e,s=>s[0]===t&&s[1]===n),zd=(e,t)=>{if(!Pa(e).delete(t))throw new Error("Missing the expected event listener.")},jd=(e,t,n)=>{const s=Qn(e,t),i=SA(s,r=>r[0]===n);return s.size===0&&e.delete(t),i},Qo=(e,t,n,s)=>{Dr(t)?e.disconnect(t.inputs[s],n,0):e.disconnect(t,n,s)},De=e=>Qn(Au,e),ta=e=>Qn(cu,e),Ni=e=>el.has(e),po=e=>!ar.has(e),ph=(e,t)=>new Promise(n=>{if(t!==null)n(!0);else{const s=e.createScriptProcessor(256,1,1),i=e.createGain(),r=e.createBuffer(1,2,44100),a=r.getChannelData(0);a[0]=1,a[1]=1;const o=e.createBufferSource();o.buffer=r,o.loop=!0,o.connect(s).connect(e.destination),o.connect(i),o.disconnect(i),s.onaudioprocess=A=>{const l=A.inputBuffer.getChannelData(0);Array.prototype.some.call(l,u=>u===1)?n(!0):n(!1),o.stop(),s.onaudioprocess=null,o.disconnect(s),s.disconnect(e.destination)},o.start()}}),oc=(e,t)=>{const n=new Map;for(const s of e)for(const i of s){const r=n.get(i);n.set(i,r===void 0?1:r+1)}n.forEach((s,i)=>t(i,s))},vo=e=>"context"in e,PM=e=>{const t=new Map;e.connect=(n=>(s,i=0,r=0)=>{const a=vo(s)?n(s,i,r):n(s,i),o=t.get(s);return o===void 0?t.set(s,[{input:r,output:i}]):o.every(A=>A.input!==r||A.output!==i)&&o.push({input:r,output:i}),a})(e.connect.bind(e)),e.disconnect=(n=>(s,i,r)=>{if(n.apply(e),s===void 0)t.clear();else if(typeof s=="number")for(const[a,o]of t){const A=o.filter(l=>l.output!==s);A.length===0?t.delete(a):t.set(a,A)}else if(t.has(s))if(i===void 0)t.delete(s);else{const a=t.get(s);if(a!==void 0){const o=a.filter(A=>A.output!==i&&(A.input!==r||r===void 0));o.length===0?t.delete(s):t.set(s,o)}}for(const[a,o]of t)o.forEach(A=>{vo(a)?e.connect(a,A.output,A.input):e.connect(a,A.output)})})(e.disconnect)},IM=(e,t,n,s)=>{const{activeInputs:i,passiveInputs:r}=Sa(t),{outputs:a}=nn(e),o=Pa(e),A=l=>{const u=De(e),c=ta(t);if(l){const h=jd(r,e,n);qh(i,e,h,!1),!s&&!Ni(e)&&u.connect(c,n)}else{const h=EM(i,e,n);hh(r,h,!1),!s&&!Ni(e)&&u.disconnect(c,n)}};return ki(a,[t,n],l=>l[0]===t&&l[1]===n,!0)?(o.add(A),os(e)?qh(i,e,[n,A],!0):hh(r,[e,n,A],!0),!0):!1},SM=(e,t,n,s)=>{const{activeInputs:i,passiveInputs:r}=nn(t),a=Ld(i[s],e,n);return a===null?[Fd(r,e,n,s)[2],!1]:[a[2],!0]},CM=(e,t,n)=>{const{activeInputs:s,passiveInputs:i}=Sa(t),r=Ld(s,e,n);return r===null?[jd(i,e,n)[1],!1]:[r[2],!0]},uu=(e,t,n,s,i)=>{const[r,a]=SM(e,n,s,i);if(r!==null&&(zd(e,r),a&&!t&&!Ni(e)&&Qo(De(e),De(n),s,i)),os(n)){const{activeInputs:o}=nn(n);il(n,o)}},qu=(e,t,n,s)=>{const[i,r]=CM(e,n,s);i!==null&&(zd(e,i),r&&!t&&!Ni(e)&&De(e).disconnect(ta(n),s))},wM=(e,t)=>{const n=nn(e),s=[];for(const i of n.outputs)Ca(i)?uu(e,t,...i):qu(e,t,...i),s.push(i[0]);return n.outputs.clear(),s},BM=(e,t,n)=>{const s=nn(e),i=[];for(const r of s.outputs)r[1]===n&&(Ca(r)?uu(e,t,...r):qu(e,t,...r),i.push(r[0]),s.outputs.delete(r));return i},kM=(e,t,n,s,i)=>{const r=nn(e);return Array.from(r.outputs).filter(a=>a[0]===n&&(s===void 0||a[1]===s)&&(i===void 0||a[2]===i)).map(a=>(Ca(a)?uu(e,t,...a):qu(e,t,...a),r.outputs.delete(a),a[0]))},TM=(e,t,n,s,i,r,a,o,A,l,u,c,h,q,p,g)=>class extends l{constructor(D,f,y,N){super(y),this._context=D,this._nativeAudioNode=y;const M=u(D);c(M)&&n(ph,()=>ph(M,g))!==!0&&PM(y),Au.set(this,y),_d.set(this,new Set),D.state!=="closed"&&f&&or(this),e(this,N,y)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(D){this._nativeAudioNode.channelCount=D}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(D){this._nativeAudioNode.channelCountMode=D}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(D){this._nativeAudioNode.channelInterpretation=D}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(D,f=0,y=0){if(f<0||f>=this._nativeAudioNode.numberOfOutputs)throw i();const N=u(this._context),M=p(N);if(h(D)||q(D))throw r();if(bo(D)){const E=De(D);try{const C=Uo(this._nativeAudioNode,E,f,y),B=po(this);(M||B)&&this._nativeAudioNode.disconnect(...C),this.context.state!=="closed"&&!B&&po(D)&&or(D)}catch(C){throw C.code===12?r():C}if(t(this,D,f,y,M)){const C=A([this],D);oc(C,s(M))}return D}const P=ta(D);if(P.name==="playbackRate"&&P.maxValue===1024)throw a();try{this._nativeAudioNode.connect(P,f),(M||po(this))&&this._nativeAudioNode.disconnect(P,f)}catch(E){throw E.code===12?r():E}if(IM(this,D,f,M)){const E=A([this],D);oc(E,s(M))}}disconnect(D,f,y){let N;const M=u(this._context),P=p(M);if(D===void 0)N=wM(this,P);else if(typeof D=="number"){if(D<0||D>=this.numberOfOutputs)throw i();N=BM(this,P,D)}else{if(f!==void 0&&(f<0||f>=this.numberOfOutputs)||bo(D)&&y!==void 0&&(y<0||y>=D.numberOfInputs))throw i();if(N=kM(this,P,D,f,y),N.length===0)throw r()}for(const O of N){const E=A([this],O);oc(E,o)}}},bM=(e,t,n,s,i,r,a,o,A,l,u,c,h)=>(q,p,g,d=null,D=null)=>{const f=new Z1(g.defaultValue),y=p?s(f):null,N={get defaultValue(){return g.defaultValue},get maxValue(){return d===null?g.maxValue:d},get minValue(){return D===null?g.minValue:D},get value(){return g.value},set value(M){g.value=M,N.setValueAtTime(M,q.context.currentTime)},cancelAndHoldAtTime(M){if(typeof g.cancelAndHoldAtTime=="function")y===null&&f.flush(q.context.currentTime),f.add(i(M)),g.cancelAndHoldAtTime(M);else{const P=Array.from(f).pop();y===null&&f.flush(q.context.currentTime),f.add(i(M));const O=Array.from(f).pop();g.cancelScheduledValues(M),P!==O&&O!==void 0&&(O.type==="exponentialRampToValue"?g.exponentialRampToValueAtTime(O.value,O.endTime):O.type==="linearRampToValue"?g.linearRampToValueAtTime(O.value,O.endTime):O.type==="setValue"?g.setValueAtTime(O.value,O.startTime):O.type==="setValueCurve"&&g.setValueCurveAtTime(O.values,O.startTime,O.duration))}return N},cancelScheduledValues(M){return y===null&&f.flush(q.context.currentTime),f.add(r(M)),g.cancelScheduledValues(M),N},exponentialRampToValueAtTime(M,P){if(M===0)throw new RangeError;if(!Number.isFinite(P)||P<0)throw new RangeError;return y===null&&f.flush(q.context.currentTime),f.add(a(M,P)),g.exponentialRampToValueAtTime(M,P),N},linearRampToValueAtTime(M,P){return y===null&&f.flush(q.context.currentTime),f.add(o(M,P)),g.linearRampToValueAtTime(M,P),N},setTargetAtTime(M,P,O){return y===null&&f.flush(q.context.currentTime),f.add(A(M,P,O)),g.setTargetAtTime(M,P,O),N},setValueAtTime(M,P){return y===null&&f.flush(q.context.currentTime),f.add(l(M,P)),g.setValueAtTime(M,P),N},setValueCurveAtTime(M,P,O){const E=M instanceof Float32Array?M:new Float32Array(M);if(c!==null&&c.name==="webkitAudioContext"){const V=P+O,C=q.context.sampleRate,B=Math.ceil(P*C),v=Math.floor(V*C),J=v-B,K=new Float32Array(J);for(let tt=0;tt<J;tt+=1){const z=(E.length-1)/O*((B+tt)/C-P),dt=Math.floor(z),at=Math.ceil(z);K[tt]=dt===at?E[dt]:(1-(z-dt))*E[dt]+(1-(at-z))*E[at]}y===null&&f.flush(q.context.currentTime),f.add(u(K,P,O)),g.setValueCurveAtTime(K,P,O);const rt=v/C;rt<V&&h(N,K[K.length-1],rt),h(N,E[E.length-1],V)}else y===null&&f.flush(q.context.currentTime),f.add(u(E,P,O)),g.setValueCurveAtTime(E,P,O);return N}};return n.set(N,g),t.set(N,q),e(N,y),N},UM=e=>({replay(t){for(const n of e)if(n.type==="exponentialRampToValue"){const{endTime:s,value:i}=n;t.exponentialRampToValueAtTime(i,s)}else if(n.type==="linearRampToValue"){const{endTime:s,value:i}=n;t.linearRampToValueAtTime(i,s)}else if(n.type==="setTarget"){const{startTime:s,target:i,timeConstant:r}=n;t.setTargetAtTime(i,s,r)}else if(n.type==="setValue"){const{startTime:s,value:i}=n;t.setValueAtTime(i,s)}else if(n.type==="setValueCurve"){const{duration:s,startTime:i,values:r}=n;t.setValueCurveAtTime(r,i,s)}else throw new Error("Can't apply an unknown automation.")}});class Hd{constructor(t){this._map=new Map(t)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(t,n=null){return this._map.forEach((s,i)=>t.call(n,s,i,this))}get(t){return this._map.get(t)}has(t){return this._map.has(t)}keys(){return this._map.keys()}values(){return this._map.values()}}const QM={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}},vM=(e,t,n,s,i,r,a,o,A,l,u,c,h,q)=>class extends t{constructor(g,d,D){var f;const y=o(g),N=A(y),M=u(nt(nt({},QM),D));h(M);const P=nl.get(y),O=P==null?void 0:P.get(d),E=N||y.state!=="closed"?y:(f=a(y))!==null&&f!==void 0?f:y,V=i(E,N?null:g.baseLatency,l,d,O,M),C=N?s(d,M,O):null;super(g,!0,V,C);const B=[];V.parameters.forEach((J,K)=>{const rt=n(this,N,J);B.push([K,rt])}),this._nativeAudioWorkletNode=V,this._onprocessorerror=null,this._parameters=new Hd(B),N&&e(y,this);const{activeInputs:v}=r(this);c(V,v)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(g){const d=typeof g=="function"?q(this,g):null;this._nativeAudioWorkletNode.onprocessorerror=d;const D=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=D!==null&&D===d?g:D}get parameters(){return this._parameters===null?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}};function Ro(e,t,n,s,i){if(typeof e.copyFromChannel=="function")t[n].byteLength===0&&(t[n]=new Float32Array(128)),e.copyFromChannel(t[n],s,i);else{const r=e.getChannelData(s);if(t[n].byteLength===0)t[n]=r.slice(i,i+128);else{const a=new Float32Array(r.buffer,i*Float32Array.BYTES_PER_ELEMENT,128);t[n].set(a)}}}const Xd=(e,t,n,s,i)=>{typeof e.copyToChannel=="function"?t[n].byteLength!==0&&e.copyToChannel(t[n],s,i):t[n].byteLength!==0&&e.getChannelData(s).set(t[n],i)},Yo=(e,t)=>{const n=[];for(let s=0;s<e;s+=1){const i=[],r=typeof t=="number"?t:t[s];for(let a=0;a<r;a+=1)i.push(new Float32Array(128));n.push(i)}return n},RM=(e,t)=>{const n=Qn(sl,e),s=De(t);return Qn(n,s)},YM=async(e,t,n,s,i,r,a)=>{const o=t===null?Math.ceil(e.context.length/128)*128:t.length,A=s.channelCount*s.numberOfInputs,l=i.reduce((d,D)=>d+D,0),u=l===0?null:n.createBuffer(l,o,n.sampleRate);if(r===void 0)throw new Error("Missing the processor constructor.");const c=nn(e),h=await RM(n,e),q=Yo(s.numberOfInputs,s.channelCount),p=Yo(s.numberOfOutputs,i),g=Array.from(e.parameters.keys()).reduce((d,D)=>wt(nt({},d),{[D]:new Float32Array(128)}),{});for(let d=0;d<o;d+=128){if(s.numberOfInputs>0&&t!==null)for(let D=0;D<s.numberOfInputs;D+=1)for(let f=0;f<s.channelCount;f+=1)Ro(t,q[D],f,f,d);r.parameterDescriptors!==void 0&&t!==null&&r.parameterDescriptors.forEach(({name:D},f)=>{Ro(t,g,D,A+f,d)});for(let D=0;D<s.numberOfInputs;D+=1)for(let f=0;f<i[D];f+=1)p[D][f].byteLength===0&&(p[D][f]=new Float32Array(128));try{const D=q.map((y,N)=>c.activeInputs[N].size===0?[]:y),f=a(d/n.sampleRate,n.sampleRate,()=>h.process(D,p,g));if(u!==null)for(let y=0,N=0;y<s.numberOfOutputs;y+=1){for(let M=0;M<i[y];M+=1)Xd(u,p[y],M,N+M,d);N+=i[y]}if(!f)break}catch(D){e.dispatchEvent(new ErrorEvent("processorerror",{colno:D.colno,filename:D.filename,lineno:D.lineno,message:D.message}));break}}return u},GM=(e,t,n,s,i,r,a,o,A,l,u,c,h,q,p,g)=>(d,D,f)=>{const y=new WeakMap;let N=null;const M=async(P,O)=>{let E=u(P),V=null;const C=je(E,O),B=Array.isArray(D.outputChannelCount)?D.outputChannelCount:Array.from(D.outputChannelCount);if(c===null){const v=B.reduce((tt,z)=>tt+z,0),J=i(O,{channelCount:Math.max(1,v),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,v)}),K=[];for(let tt=0;tt<P.numberOfOutputs;tt+=1)K.push(s(O,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:B[tt]}));const rt=a(O,{channelCount:D.channelCount,channelCountMode:D.channelCountMode,channelInterpretation:D.channelInterpretation,gain:1});rt.connect=t.bind(null,K),rt.disconnect=A.bind(null,K),V=[J,K,rt]}else C||(E=new c(O,d));if(y.set(O,V===null?E:V[2]),V!==null){if(N===null){if(f===void 0)throw new Error("Missing the processor constructor.");if(h===null)throw new Error("Missing the native OfflineAudioContext constructor.");const z=P.channelCount*P.numberOfInputs,dt=f.parameterDescriptors===void 0?0:f.parameterDescriptors.length,at=z+dt;N=YM(P,at===0?null:await(async()=>{const gt=new h(at,Math.ceil(P.context.length/128)*128,O.sampleRate),kt=[],Gt=[];for(let ft=0;ft<D.numberOfInputs;ft+=1)kt.push(a(gt,{channelCount:D.channelCount,channelCountMode:D.channelCountMode,channelInterpretation:D.channelInterpretation,gain:1})),Gt.push(i(gt,{channelCount:D.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:D.channelCount}));const ce=await Promise.all(Array.from(P.parameters.values()).map(async ft=>{const Dt=r(gt,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:ft.value});return await q(gt,ft,Dt.offset),Dt})),Tt=s(gt,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,z+dt)});for(let ft=0;ft<D.numberOfInputs;ft+=1){kt[ft].connect(Gt[ft]);for(let Dt=0;Dt<D.channelCount;Dt+=1)Gt[ft].connect(Tt,Dt,ft*D.channelCount+Dt)}for(const[ft,Dt]of ce.entries())Dt.connect(Tt,0,z+ft),Dt.start(0);return Tt.connect(gt.destination),await Promise.all(kt.map(ft=>p(P,gt,ft))),g(gt)})(),O,D,B,f,l)}const v=await N,J=n(O,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[K,rt,tt]=V;v!==null&&(J.buffer=v,J.start(0)),J.connect(K);for(let z=0,dt=0;z<P.numberOfOutputs;z+=1){const at=rt[z];for(let St=0;St<B[z];St+=1)K.connect(at,dt+St,St);dt+=B[z]}return tt}if(C)for(const[v,J]of P.parameters.entries())await e(O,J,E.parameters.get(v));else for(const[v,J]of P.parameters.entries())await q(O,J,E.parameters.get(v));return await p(P,O,E),E};return{render(P,O){o(O,P);const E=y.get(O);return E!==void 0?Promise.resolve(E):M(P,O)}}},_M=(e,t,n,s,i,r,a,o,A,l,u,c,h,q,p,g,d,D,f,y)=>class extends p{constructor(M,P){super(M,P),this._nativeContext=M,this._audioWorklet=e===void 0?void 0:{addModule:(O,E)=>e(this,O,E)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new t(this)}createBiquadFilter(){return new i(this)}createBuffer(M,P,O){return new n({length:P,numberOfChannels:M,sampleRate:O})}createBufferSource(){return new s(this)}createChannelMerger(M=6){return new r(this,{numberOfInputs:M})}createChannelSplitter(M=6){return new a(this,{numberOfOutputs:M})}createConstantSource(){return new o(this)}createConvolver(){return new A(this)}createDelay(M=1){return new u(this,{maxDelayTime:M})}createDynamicsCompressor(){return new c(this)}createGain(){return new h(this)}createIIRFilter(M,P){return new q(this,{feedback:P,feedforward:M})}createOscillator(){return new g(this)}createPanner(){return new d(this)}createPeriodicWave(M,P,O={disableNormalization:!1}){return new D(this,wt(nt({},O),{imag:P,real:M}))}createStereoPanner(){return new f(this)}createWaveShaper(){return new y(this)}decodeAudioData(M,P,O){return l(this._nativeContext,M).then(E=>(typeof P=="function"&&P(E),E),E=>{throw typeof O=="function"&&O(E),E})}},xM={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},FM=(e,t,n,s,i,r,a,o)=>class extends e{constructor(l,u){const c=r(l),h=nt(nt({},xM),u),q=i(c,h),p=a(c),g=p?n():null;super(l,!1,q,g),this._Q=t(this,p,q.Q,tn,An),this._detune=t(this,p,q.detune,1200*Math.log2(tn),-1200*Math.log2(tn)),this._frequency=t(this,p,q.frequency,l.sampleRate/2,0),this._gain=t(this,p,q.gain,40*Math.log10(tn),An),this._nativeBiquadFilterNode=q,o(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(l){this._nativeBiquadFilterNode.type=l}getFrequencyResponse(l,u,c){try{this._nativeBiquadFilterNode.getFrequencyResponse(l,u,c)}catch(h){throw h.code===11?s():h}if(l.length!==u.length||u.length!==c.length)throw s()}},ZM=(e,t,n,s,i)=>()=>{const r=new WeakMap,a=async(o,A)=>{let l=n(o);const u=je(l,A);if(!u){const c={Q:l.Q.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,detune:l.detune.value,frequency:l.frequency.value,gain:l.gain.value,type:l.type};l=t(A,c)}return r.set(A,l),u?(await e(A,o.Q,l.Q),await e(A,o.detune,l.detune),await e(A,o.frequency,l.frequency),await e(A,o.gain,l.gain)):(await s(A,o.Q,l.Q),await s(A,o.detune,l.detune),await s(A,o.frequency,l.frequency),await s(A,o.gain,l.gain)),await i(o,A,l),l};return{render(o,A){const l=r.get(A);return l!==void 0?Promise.resolve(l):a(o,A)}}},KM=(e,t)=>(n,s)=>{const i=t.get(n);if(i!==void 0)return i;const r=e.get(n);if(r!==void 0)return r;try{const a=s();return a instanceof Promise?(e.set(n,a),a.catch(()=>!1).then(o=>(e.delete(n),t.set(n,o),o))):(t.set(n,a),a)}catch{return t.set(n,!1),!1}},JM={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},LM=(e,t,n,s,i)=>class extends e{constructor(a,o){const A=s(a),l=nt(nt({},JM),o),u=n(A,l),c=i(A)?t():null;super(a,!1,u,c)}},zM=(e,t,n)=>()=>{const s=new WeakMap,i=async(r,a)=>{let o=t(r);if(!je(o,a)){const l={channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,numberOfInputs:o.numberOfInputs};o=e(a,l)}return s.set(a,o),await n(r,a,o),o};return{render(r,a){const o=s.get(a);return o!==void 0?Promise.resolve(o):i(r,a)}}},jM={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},HM=(e,t,n,s,i,r)=>class extends e{constructor(o,A){const l=s(o),u=r(nt(nt({},jM),A)),c=n(l,u),h=i(l)?t():null;super(o,!1,c,h)}},XM=(e,t,n)=>()=>{const s=new WeakMap,i=async(r,a)=>{let o=t(r);if(!je(o,a)){const l={channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,numberOfOutputs:o.numberOfOutputs};o=e(a,l)}return s.set(a,o),await n(r,a,o),o};return{render(r,a){const o=s.get(a);return o!==void 0?Promise.resolve(o):i(r,a)}}},$M=e=>(t,n,s)=>e(n,t,s),tO=e=>(t,n,s=0,i=0)=>{const r=t[s];if(r===void 0)throw e();return vo(n)?r.connect(n,0,i):r.connect(n,0)},eO=e=>(t,n)=>{const s=e(t,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),i=t.createBuffer(1,2,44100);return s.buffer=i,s.loop=!0,s.connect(n),s.start(),()=>{s.stop(),s.disconnect(n)}},nO={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},sO=(e,t,n,s,i,r,a)=>class extends e{constructor(A,l){const u=i(A),c=nt(nt({},nO),l),h=s(u,c),q=r(u),p=q?n():null;super(A,!1,h,p),this._constantSourceNodeRenderer=p,this._nativeConstantSourceNode=h,this._offset=t(this,q,h.offset,tn,An),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(A){const l=typeof A=="function"?a(this,A):null;this._nativeConstantSourceNode.onended=l;const u=this._nativeConstantSourceNode.onended;this._onended=u!==null&&u===l?A:u}start(A=0){if(this._nativeConstantSourceNode.start(A),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.start=A),this.context.state!=="closed"){or(this);const l=()=>{this._nativeConstantSourceNode.removeEventListener("ended",l),os(this)&&Ia(this)};this._nativeConstantSourceNode.addEventListener("ended",l)}}stop(A=0){this._nativeConstantSourceNode.stop(A),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.stop=A)}},iO=(e,t,n,s,i)=>()=>{const r=new WeakMap;let a=null,o=null;const A=async(l,u)=>{let c=n(l);const h=je(c,u);if(!h){const q={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,offset:c.offset.value};c=t(u,q),a!==null&&c.start(a),o!==null&&c.stop(o)}return r.set(u,c),h?await e(u,l.offset,c.offset):await s(u,l.offset,c.offset),await i(l,u,c),c};return{set start(l){a=l},set stop(l){o=l},render(l,u){const c=r.get(u);return c!==void 0?Promise.resolve(c):A(l,u)}}},rO=e=>t=>(e[0]=t,e[0]),aO={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},oO=(e,t,n,s,i,r)=>class extends e{constructor(o,A){const l=s(o),u=nt(nt({},aO),A),c=n(l,u),q=i(l)?t():null;super(o,!1,c,q),this._isBufferNullified=!1,this._nativeConvolverNode=c,u.buffer!==null&&r(this,u.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(o){if(this._nativeConvolverNode.buffer=o,o===null&&this._nativeConvolverNode.buffer!==null){const A=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=A.createBuffer(1,1,A.sampleRate),this._isBufferNullified=!0,r(this,0)}else this._isBufferNullified=!1,r(this,this._nativeConvolverNode.buffer===null?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(o){this._nativeConvolverNode.normalize=o}},AO=(e,t,n)=>()=>{const s=new WeakMap,i=async(r,a)=>{let o=t(r);if(!je(o,a)){const l={buffer:o.buffer,channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,disableNormalization:!o.normalize};o=e(a,l)}return s.set(a,o),Dr(o)?await n(r,a,o.inputs[0]):await n(r,a,o),o};return{render(r,a){const o=s.get(a);return o!==void 0?Promise.resolve(o):i(r,a)}}},cO=(e,t)=>(n,s,i)=>{if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new t(n,s,i)}catch(r){throw r.name==="SyntaxError"?e():r}},lO=()=>new DOMException("","DataCloneError"),dh=e=>{const{port1:t,port2:n}=new MessageChannel;return new Promise(s=>{const i=()=>{n.onmessage=null,t.close(),n.close(),s()};n.onmessage=()=>i();try{t.postMessage(e,[e])}finally{i()}})},uO=(e,t,n,s,i,r,a,o,A,l,u)=>(c,h)=>{const q=a(c)?c:r(c);if(i.has(h)){const p=n();return Promise.reject(p)}try{i.add(h)}catch{}return t(A,()=>A(q))?q.decodeAudioData(h).then(p=>(dh(h).catch(()=>{}),t(o,()=>o(p))||u(p),e.add(p),p)):new Promise((p,g)=>{const d=async()=>{try{await dh(h)}catch{}},D=f=>{g(f),d()};try{q.decodeAudioData(h,f=>{typeof f.copyFromChannel!="function"&&(l(f),lu(f)),e.add(f),d().then(()=>p(f))},f=>{D(f===null?s():f)})}catch(f){D(f)}})},qO=(e,t,n,s,i,r,a,o)=>(A,l)=>{const u=t.get(A);if(u===void 0)throw new Error("Missing the expected cycle count.");const c=r(A.context),h=o(c);if(u===l){if(t.delete(A),!h&&a(A)){const q=s(A),{outputs:p}=n(A);for(const g of p)if(Ca(g)){const d=s(g[0]);e(q,d,g[1],g[2])}else{const d=i(g[0]);q.connect(d,g[1])}}}else t.set(A,u-l)},hO={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},pO=(e,t,n,s,i,r,a)=>class extends e{constructor(A,l){const u=i(A),c=nt(nt({},hO),l),h=s(u,c),q=r(u),p=q?n(c.maxDelayTime):null;super(A,!1,h,p),this._delayTime=t(this,q,h.delayTime),a(this,c.maxDelayTime)}get delayTime(){return this._delayTime}},dO=(e,t,n,s,i)=>r=>{const a=new WeakMap,o=async(A,l)=>{let u=n(A);const c=je(u,l);if(!c){const h={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,delayTime:u.delayTime.value,maxDelayTime:r};u=t(l,h)}return a.set(l,u),c?await e(l,A.delayTime,u.delayTime):await s(l,A.delayTime,u.delayTime),await i(A,l,u),u};return{render(A,l){const u=a.get(l);return u!==void 0?Promise.resolve(u):o(A,l)}}},DO=e=>(t,n,s,i)=>e(t[i],r=>r[0]===n&&r[1]===s),gO=e=>(t,n)=>{e(t).delete(n)},fO=e=>"delayTime"in e,mO=(e,t,n)=>function s(i,r){const a=bo(r)?r:n(e,r);if(fO(a))return[];if(i[0]===a)return[i];if(i.includes(a))return[];const{outputs:o}=t(a);return Array.from(o).map(A=>s([...i,a],A[0])).reduce((A,l)=>A.concat(l),[])},to=(e,t,n)=>{const s=t[n];if(s===void 0)throw e();return s},NO=e=>(t,n=void 0,s=void 0,i=0)=>n===void 0?t.forEach(r=>r.disconnect()):typeof n=="number"?to(e,t,n).disconnect():vo(n)?s===void 0?t.forEach(r=>r.disconnect(n)):i===void 0?to(e,t,s).disconnect(n,0):to(e,t,s).disconnect(n,0,i):s===void 0?t.forEach(r=>r.disconnect(n)):to(e,t,s).disconnect(n,0),VO={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},MO=(e,t,n,s,i,r,a,o)=>class extends e{constructor(l,u){const c=r(l),h=nt(nt({},VO),u),q=s(c,h),p=a(c),g=p?n():null;super(l,!1,q,g),this._attack=t(this,p,q.attack),this._knee=t(this,p,q.knee),this._nativeDynamicsCompressorNode=q,this._ratio=t(this,p,q.ratio),this._release=t(this,p,q.release),this._threshold=t(this,p,q.threshold),o(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(l){const u=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=l,l>2)throw this._nativeDynamicsCompressorNode.channelCount=u,i()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(l){const u=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=l,l==="max")throw this._nativeDynamicsCompressorNode.channelCountMode=u,i()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return typeof this._nativeDynamicsCompressorNode.reduction.value=="number"?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}},OO=(e,t,n,s,i)=>()=>{const r=new WeakMap,a=async(o,A)=>{let l=n(o);const u=je(l,A);if(!u){const c={attack:l.attack.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,knee:l.knee.value,ratio:l.ratio.value,release:l.release.value,threshold:l.threshold.value};l=t(A,c)}return r.set(A,l),u?(await e(A,o.attack,l.attack),await e(A,o.knee,l.knee),await e(A,o.ratio,l.ratio),await e(A,o.release,l.release),await e(A,o.threshold,l.threshold)):(await s(A,o.attack,l.attack),await s(A,o.knee,l.knee),await s(A,o.ratio,l.ratio),await s(A,o.release,l.release),await s(A,o.threshold,l.threshold)),await i(o,A,l),l};return{render(o,A){const l=r.get(A);return l!==void 0?Promise.resolve(l):a(o,A)}}},yO=()=>new DOMException("","EncodingError"),WO=e=>t=>new Promise((n,s)=>{if(e===null){s(new SyntaxError);return}const i=e.document.head;if(i===null)s(new SyntaxError);else{const r=e.document.createElement("script"),a=new Blob([t],{type:"application/javascript"}),o=URL.createObjectURL(a),A=e.onerror,l=()=>{e.onerror=A,URL.revokeObjectURL(o)};e.onerror=(u,c,h,q,p)=>{if(c===o||c===e.location.href&&h===1&&q===1)return l(),s(p),!1;if(A!==null)return A(u,c,h,q,p)},r.onerror=()=>{l(),s(new SyntaxError)},r.onload=()=>{l(),n()},r.src=o,r.type="module",i.appendChild(r)}}),EO=e=>class{constructor(n){this._nativeEventTarget=n,this._listeners=new WeakMap}addEventListener(n,s,i){if(s!==null){let r=this._listeners.get(s);r===void 0&&(r=e(this,s),typeof s=="function"&&this._listeners.set(s,r)),this._nativeEventTarget.addEventListener(n,r,i)}}dispatchEvent(n){return this._nativeEventTarget.dispatchEvent(n)}removeEventListener(n,s,i){const r=s===null?void 0:this._listeners.get(s);this._nativeEventTarget.removeEventListener(n,r===void 0?null:r,i)}},PO=e=>(t,n,s)=>{Object.defineProperties(e,{currentFrame:{configurable:!0,get(){return Math.round(t*n)}},currentTime:{configurable:!0,get(){return t}}});try{return s()}finally{e!==null&&(delete e.currentFrame,delete e.currentTime)}},IO=e=>async t=>{try{const n=await fetch(t);if(n.ok)return[await n.text(),n.url]}catch{}throw e()},SO={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},CO=(e,t,n,s,i,r)=>class extends e{constructor(o,A){const l=i(o),u=nt(nt({},SO),A),c=s(l,u),h=r(l),q=h?n():null;super(o,!1,c,q),this._gain=t(this,h,c.gain,tn,An)}get gain(){return this._gain}},wO=(e,t,n,s,i)=>()=>{const r=new WeakMap,a=async(o,A)=>{let l=n(o);const u=je(l,A);if(!u){const c={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,gain:l.gain.value};l=t(A,c)}return r.set(A,l),u?await e(A,o.gain,l.gain):await s(A,o.gain,l.gain),await i(o,A,l),l};return{render(o,A){const l=r.get(A);return l!==void 0?Promise.resolve(l):a(o,A)}}},BO=(e,t)=>n=>t(e,n),kO=e=>t=>{const n=e(t);if(n.renderer===null)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return n.renderer},TO=e=>t=>{var n;return(n=e.get(t))!==null&&n!==void 0?n:0},bO=e=>t=>{const n=e(t);if(n.renderer===null)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return n.renderer},UO=e=>t=>e.get(t),Re=()=>new DOMException("","InvalidStateError"),QO=e=>t=>{const n=e.get(t);if(n===void 0)throw Re();return n},vO=(e,t)=>n=>{let s=e.get(n);if(s!==void 0)return s;if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");return s=new t(1,1,44100),e.set(n,s),s},RO=e=>t=>{const n=e.get(t);if(n===void 0)throw new Error("The context has no set of AudioWorkletNodes.");return n},CA=()=>new DOMException("","InvalidAccessError"),YO=e=>{e.getFrequencyResponse=(t=>(n,s,i)=>{if(n.length!==s.length||s.length!==i.length)throw CA();return t.call(e,n,s,i)})(e.getFrequencyResponse)},GO={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},_O=(e,t,n,s,i,r)=>class extends e{constructor(o,A){const l=s(o),u=i(l),c=nt(nt({},GO),A),h=t(l,u?null:o.baseLatency,c),q=u?n(c.feedback,c.feedforward):null;super(o,!1,h,q),YO(h),this._nativeIIRFilterNode=h,r(this,1)}getFrequencyResponse(o,A,l){return this._nativeIIRFilterNode.getFrequencyResponse(o,A,l)}},$d=(e,t,n,s,i,r,a,o,A,l,u)=>{const c=l.length;let h=o;for(let q=0;q<c;q+=1){let p=n[0]*l[q];for(let g=1;g<i;g+=1){const d=h-g&A-1;p+=n[g]*r[d],p-=e[g]*a[d]}for(let g=i;g<s;g+=1)p+=n[g]*r[h-g&A-1];for(let g=i;g<t;g+=1)p-=e[g]*a[h-g&A-1];r[h]=l[q],a[h]=p,h=h+1&A-1,u[q]=p}return h},xO=(e,t,n,s)=>{const i=n instanceof Float64Array?n:new Float64Array(n),r=s instanceof Float64Array?s:new Float64Array(s),a=i.length,o=r.length,A=Math.min(a,o);if(i[0]!==1){for(let p=0;p<a;p+=1)r[p]/=i[0];for(let p=1;p<o;p+=1)i[p]/=i[0]}const l=32,u=new Float32Array(l),c=new Float32Array(l),h=t.createBuffer(e.numberOfChannels,e.length,e.sampleRate),q=e.numberOfChannels;for(let p=0;p<q;p+=1){const g=e.getChannelData(p),d=h.getChannelData(p);u.fill(0),c.fill(0),$d(i,a,r,o,A,u,c,0,l,g,d)}return h},FO=(e,t,n,s,i)=>(r,a)=>{const o=new WeakMap;let A=null;const l=async(u,c)=>{let h=null,q=t(u);const p=je(q,c);if(c.createIIRFilter===void 0?h=e(c,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):p||(q=c.createIIRFilter(a,r)),o.set(c,h===null?q:h),h!==null){if(A===null){if(n===null)throw new Error("Missing the native OfflineAudioContext constructor.");const d=new n(u.context.destination.channelCount,u.context.length,c.sampleRate);A=(async()=>{await s(u,d,d.destination);const D=await i(d);return xO(D,c,r,a)})()}const g=await A;return h.buffer=g,h.start(0),h}return await s(u,c,q),q};return{render(u,c){const h=o.get(c);return h!==void 0?Promise.resolve(h):l(u,c)}}},ZO=(e,t,n,s,i,r)=>a=>(o,A)=>{const l=e.get(o);if(l===void 0){if(!a&&r(o)){const u=s(o),{outputs:c}=n(o);for(const h of c)if(Ca(h)){const q=s(h[0]);t(u,q,h[1],h[2])}else{const q=i(h[0]);u.disconnect(q,h[1])}}e.set(o,A)}else e.set(o,l+A)},KO=(e,t)=>n=>{const s=e.get(n);return t(s)||t(n)},JO=(e,t)=>n=>e.has(n)||t(n),LO=(e,t)=>n=>e.has(n)||t(n),zO=(e,t)=>n=>{const s=e.get(n);return t(s)||t(n)},jO=e=>t=>e!==null&&t instanceof e,HO=e=>t=>e!==null&&typeof e.AudioNode=="function"&&t instanceof e.AudioNode,XO=e=>t=>e!==null&&typeof e.AudioParam=="function"&&t instanceof e.AudioParam,$O=(e,t)=>n=>e(n)||t(n),ty=e=>t=>e!==null&&t instanceof e,ey=e=>e!==null&&e.isSecureContext,ny=(e,t,n,s)=>class extends e{constructor(r,a){const o=n(r),A=t(o,a);if(s(o))throw TypeError();super(r,!0,A,null),this._nativeMediaElementAudioSourceNode=A}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}},sy={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},iy=(e,t,n,s)=>class extends e{constructor(r,a){const o=n(r);if(s(o))throw new TypeError;const A=nt(nt({},sy),a),l=t(o,A);super(r,!1,l,null),this._nativeMediaStreamAudioDestinationNode=l}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}},ry=(e,t,n,s)=>class extends e{constructor(r,a){const o=n(r),A=t(o,a);if(s(o))throw new TypeError;super(r,!0,A,null),this._nativeMediaStreamAudioSourceNode=A}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}},ay=(e,t,n)=>class extends e{constructor(i,r){const a=n(i),o=t(a,r);super(i,!0,o,null)}},oy=(e,t,n,s,i,r)=>class extends n{constructor(o,A){super(o),this._nativeContext=o,IA.set(this,o),s(o)&&i.set(o,new Set),this._destination=new e(this,A),this._listener=t(this,o),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(o){const A=typeof o=="function"?r(this,o):null;this._nativeContext.onstatechange=A;const l=this._nativeContext.onstatechange;this._onstatechange=l!==null&&l===A?o:l}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}},ea=e=>{const t=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const n=e.decodeAudioData(t.buffer,()=>{});return n===void 0?!1:(n.catch(()=>{}),!0)}catch{}return!1},Ay=(e,t)=>(n,s,i)=>{const r=new Set;return n.connect=(a=>(o,A=0,l=0)=>{const u=r.size===0;if(t(o))return a.call(n,o,A,l),e(r,[o,A,l],c=>c[0]===o&&c[1]===A&&c[2]===l,!0),u&&s(),o;a.call(n,o,A),e(r,[o,A],c=>c[0]===o&&c[1]===A,!0),u&&s()})(n.connect),n.disconnect=(a=>(o,A,l)=>{const u=r.size>0;if(o===void 0)a.apply(n),r.clear();else if(typeof o=="number"){a.call(n,o);for(const h of r)h[1]===o&&r.delete(h)}else{t(o)?a.call(n,o,A,l):a.call(n,o,A);for(const h of r)h[0]===o&&(A===void 0||h[1]===A)&&(l===void 0||h[2]===l)&&r.delete(h)}const c=r.size===0;u&&c&&i()})(n.disconnect),n},ge=(e,t,n)=>{const s=t[n];s!==void 0&&s!==e[n]&&(e[n]=s)},Te=(e,t)=>{ge(e,t,"channelCount"),ge(e,t,"channelCountMode"),ge(e,t,"channelInterpretation")},Dh=e=>typeof e.getFloatTimeDomainData=="function",cy=e=>{e.getFloatTimeDomainData=t=>{const n=new Uint8Array(t.length);e.getByteTimeDomainData(n);const s=Math.max(n.length,e.fftSize);for(let i=0;i<s;i+=1)t[i]=(n[i]-128)*.0078125;return t}},ly=(e,t)=>(n,s)=>{const i=n.createAnalyser();if(Te(i,s),!(s.maxDecibels>s.minDecibels))throw t();return ge(i,s,"fftSize"),ge(i,s,"maxDecibels"),ge(i,s,"minDecibels"),ge(i,s,"smoothingTimeConstant"),e(Dh,()=>Dh(i))||cy(i),i},uy=e=>e===null?null:e.hasOwnProperty("AudioBuffer")?e.AudioBuffer:null,Ve=(e,t,n)=>{const s=t[n];s!==void 0&&s!==e[n].value&&(e[n].value=s)},qy=e=>{e.start=(t=>{let n=!1;return(s=0,i=0,r)=>{if(n)throw Re();t.call(e,s,i,r),n=!0}})(e.start)},hu=e=>{e.start=(t=>(n=0,s=0,i)=>{if(typeof i=="number"&&i<0||s<0||n<0)throw new RangeError("The parameters can't be negative.");t.call(e,n,s,i)})(e.start)},pu=e=>{e.stop=(t=>(n=0)=>{if(n<0)throw new RangeError("The parameter can't be negative.");t.call(e,n)})(e.stop)},hy=(e,t,n,s,i,r,a,o,A,l,u)=>(c,h)=>{const q=c.createBufferSource();return Te(q,h),Ve(q,h,"playbackRate"),ge(q,h,"buffer"),ge(q,h,"loop"),ge(q,h,"loopEnd"),ge(q,h,"loopStart"),t(n,()=>n(c))||qy(q),t(s,()=>s(c))||A(q),t(i,()=>i(c))||l(q,c),t(r,()=>r(c))||hu(q),t(a,()=>a(c))||u(q,c),t(o,()=>o(c))||pu(q),e(c,q),q},py=e=>e===null?null:e.hasOwnProperty("AudioContext")?e.AudioContext:e.hasOwnProperty("webkitAudioContext")?e.webkitAudioContext:null,dy=(e,t)=>(n,s,i)=>{const r=n.destination;if(r.channelCount!==s)try{r.channelCount=s}catch{}i&&r.channelCountMode!=="explicit"&&(r.channelCountMode="explicit"),r.maxChannelCount===0&&Object.defineProperty(r,"maxChannelCount",{value:s});const a=e(n,{channelCount:s,channelCountMode:r.channelCountMode,channelInterpretation:r.channelInterpretation,gain:1});return t(a,"channelCount",o=>()=>o.call(a),o=>A=>{o.call(a,A);try{r.channelCount=A}catch(l){if(A>r.maxChannelCount)throw l}}),t(a,"channelCountMode",o=>()=>o.call(a),o=>A=>{o.call(a,A),r.channelCountMode=A}),t(a,"channelInterpretation",o=>()=>o.call(a),o=>A=>{o.call(a,A),r.channelInterpretation=A}),Object.defineProperty(a,"maxChannelCount",{get:()=>r.maxChannelCount}),a.connect(r),a},Dy=e=>e===null?null:e.hasOwnProperty("AudioWorkletNode")?e.AudioWorkletNode:null,gy=e=>{const{port1:t}=new MessageChannel;try{t.postMessage(e)}finally{t.close()}},fy=(e,t,n,s,i)=>(r,a,o,A,l,u)=>{if(o!==null)try{const c=new o(r,A,u),h=new Map;let q=null;if(Object.defineProperties(c,{channelCount:{get:()=>u.channelCount,set:()=>{throw e()}},channelCountMode:{get:()=>"explicit",set:()=>{throw e()}},onprocessorerror:{get:()=>q,set:p=>{typeof q=="function"&&c.removeEventListener("processorerror",q),q=typeof p=="function"?p:null,typeof q=="function"&&c.addEventListener("processorerror",q)}}}),c.addEventListener=(p=>(...g)=>{if(g[0]==="processorerror"){const d=typeof g[1]=="function"?g[1]:typeof g[1]=="object"&&g[1]!==null&&typeof g[1].handleEvent=="function"?g[1].handleEvent:null;if(d!==null){const D=h.get(g[1]);D!==void 0?g[1]=D:(g[1]=f=>{f.type==="error"?(Object.defineProperties(f,{type:{value:"processorerror"}}),d(f)):d(new ErrorEvent(g[0],nt({},f)))},h.set(d,g[1]))}}return p.call(c,"error",g[1],g[2]),p.call(c,...g)})(c.addEventListener),c.removeEventListener=(p=>(...g)=>{if(g[0]==="processorerror"){const d=h.get(g[1]);d!==void 0&&(h.delete(g[1]),g[1]=d)}return p.call(c,"error",g[1],g[2]),p.call(c,g[0],g[1],g[2])})(c.removeEventListener),u.numberOfOutputs!==0){const p=n(r,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return c.connect(p).connect(r.destination),i(c,()=>p.disconnect(),()=>p.connect(r.destination))}return c}catch(c){throw c.code===11?s():c}if(l===void 0)throw s();return gy(u),t(r,a,l,u)},tD=(e,t)=>e===null?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(e*t))))),my=e=>new Promise((t,n)=>{const{port1:s,port2:i}=new MessageChannel;s.onmessage=({data:r})=>{s.close(),i.close(),t(r)},s.onmessageerror=({data:r})=>{s.close(),i.close(),n(r)},i.postMessage(e)}),Ny=async(e,t)=>{const n=await my(t);return new e(n)},Vy=(e,t,n,s)=>{let i=sl.get(e);i===void 0&&(i=new WeakMap,sl.set(e,i));const r=Ny(n,s);return i.set(t,r),r},My=(e,t,n,s,i,r,a,o,A,l,u,c,h)=>(q,p,g,d)=>{if(d.numberOfInputs===0&&d.numberOfOutputs===0)throw A();const D=Array.isArray(d.outputChannelCount)?d.outputChannelCount:Array.from(d.outputChannelCount);if(D.some(R=>R<1))throw A();if(D.length!==d.numberOfOutputs)throw t();if(d.channelCountMode!=="explicit")throw A();const f=d.channelCount*d.numberOfInputs,y=D.reduce((R,Z)=>R+Z,0),N=g.parameterDescriptors===void 0?0:g.parameterDescriptors.length;if(f+N>6||y>6)throw A();const M=new MessageChannel,P=[],O=[];for(let R=0;R<d.numberOfInputs;R+=1)P.push(a(q,{channelCount:d.channelCount,channelCountMode:d.channelCountMode,channelInterpretation:d.channelInterpretation,gain:1})),O.push(i(q,{channelCount:d.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:d.channelCount}));const E=[];if(g.parameterDescriptors!==void 0)for(const{defaultValue:R,maxValue:Z,minValue:L,name:X}of g.parameterDescriptors){const et=r(q,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:d.parameterData[X]!==void 0?d.parameterData[X]:R===void 0?0:R});Object.defineProperties(et.offset,{defaultValue:{get:()=>R===void 0?0:R},maxValue:{get:()=>Z===void 0?tn:Z},minValue:{get:()=>L===void 0?An:L}}),E.push(et)}const V=s(q,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,f+N)}),C=tD(p,q.sampleRate),B=o(q,C,f+N,Math.max(1,y)),v=i(q,{channelCount:Math.max(1,y),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,y)}),J=[];for(let R=0;R<d.numberOfOutputs;R+=1)J.push(s(q,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:D[R]}));for(let R=0;R<d.numberOfInputs;R+=1){P[R].connect(O[R]);for(let Z=0;Z<d.channelCount;Z+=1)O[R].connect(V,Z,R*d.channelCount+Z)}const K=new Hd(g.parameterDescriptors===void 0?[]:g.parameterDescriptors.map(({name:R},Z)=>{const L=E[Z];return L.connect(V,0,f+Z),L.start(0),[R,L.offset]}));V.connect(B);let rt=d.channelInterpretation,tt=null;const z=d.numberOfOutputs===0?[B]:J,dt={get bufferSize(){return C},get channelCount(){return d.channelCount},set channelCount(R){throw n()},get channelCountMode(){return d.channelCountMode},set channelCountMode(R){throw n()},get channelInterpretation(){return rt},set channelInterpretation(R){for(const Z of P)Z.channelInterpretation=R;rt=R},get context(){return B.context},get inputs(){return P},get numberOfInputs(){return d.numberOfInputs},get numberOfOutputs(){return d.numberOfOutputs},get onprocessorerror(){return tt},set onprocessorerror(R){typeof tt=="function"&&dt.removeEventListener("processorerror",tt),tt=typeof R=="function"?R:null,typeof tt=="function"&&dt.addEventListener("processorerror",tt)},get parameters(){return K},get port(){return M.port2},addEventListener(...R){return B.addEventListener(R[0],R[1],R[2])},connect:e.bind(null,z),disconnect:l.bind(null,z),dispatchEvent(...R){return B.dispatchEvent(R[0])},removeEventListener(...R){return B.removeEventListener(R[0],R[1],R[2])}},at=new Map;M.port1.addEventListener=(R=>(...Z)=>{if(Z[0]==="message"){const L=typeof Z[1]=="function"?Z[1]:typeof Z[1]=="object"&&Z[1]!==null&&typeof Z[1].handleEvent=="function"?Z[1].handleEvent:null;if(L!==null){const X=at.get(Z[1]);X!==void 0?Z[1]=X:(Z[1]=et=>{u(q.currentTime,q.sampleRate,()=>L(et))},at.set(L,Z[1]))}}return R.call(M.port1,Z[0],Z[1],Z[2])})(M.port1.addEventListener),M.port1.removeEventListener=(R=>(...Z)=>{if(Z[0]==="message"){const L=at.get(Z[1]);L!==void 0&&(at.delete(Z[1]),Z[1]=L)}return R.call(M.port1,Z[0],Z[1],Z[2])})(M.port1.removeEventListener);let St=null;Object.defineProperty(M.port1,"onmessage",{get:()=>St,set:R=>{typeof St=="function"&&M.port1.removeEventListener("message",St),St=typeof R=="function"?R:null,typeof St=="function"&&(M.port1.addEventListener("message",St),M.port1.start())}}),g.prototype.port=M.port1;let gt=null;Vy(q,dt,g,d).then(R=>gt=R);const Gt=Yo(d.numberOfInputs,d.channelCount),ce=Yo(d.numberOfOutputs,D),Tt=g.parameterDescriptors===void 0?[]:g.parameterDescriptors.reduce((R,{name:Z})=>wt(nt({},R),{[Z]:new Float32Array(128)}),{});let ft=!0;const Dt=()=>{d.numberOfOutputs>0&&B.disconnect(v);for(let R=0,Z=0;R<d.numberOfOutputs;R+=1){const L=J[R];for(let X=0;X<D[R];X+=1)v.disconnect(L,Z+X,X);Z+=D[R]}},ie=new Map;B.onaudioprocess=({inputBuffer:R,outputBuffer:Z})=>{if(gt!==null){const L=c(dt);for(let X=0;X<C;X+=128){for(let et=0;et<d.numberOfInputs;et+=1)for(let $=0;$<d.channelCount;$+=1)Ro(R,Gt[et],$,$,X);g.parameterDescriptors!==void 0&&g.parameterDescriptors.forEach(({name:et},$)=>{Ro(R,Tt,et,f+$,X)});for(let et=0;et<d.numberOfInputs;et+=1)for(let $=0;$<D[et];$+=1)ce[et][$].byteLength===0&&(ce[et][$]=new Float32Array(128));try{const et=Gt.map((ot,st)=>{if(L[st].size>0)return ie.set(st,C/128),ot;const mt=ie.get(st);return mt===void 0?[]:(ot.every(Wt=>Wt.every(j=>j===0))&&(mt===1?ie.delete(st):ie.set(st,mt-1)),ot)});ft=u(q.currentTime+X/q.sampleRate,q.sampleRate,()=>gt.process(et,ce,Tt));for(let ot=0,st=0;ot<d.numberOfOutputs;ot+=1){for(let Mt=0;Mt<D[ot];Mt+=1)Xd(Z,ce[ot],Mt,st+Mt,X);st+=D[ot]}}catch(et){ft=!1,dt.dispatchEvent(new ErrorEvent("processorerror",{colno:et.colno,filename:et.filename,lineno:et.lineno,message:et.message}))}if(!ft){for(let et=0;et<d.numberOfInputs;et+=1){P[et].disconnect(O[et]);for(let $=0;$<d.channelCount;$+=1)O[X].disconnect(V,$,et*d.channelCount+$)}if(g.parameterDescriptors!==void 0){const et=g.parameterDescriptors.length;for(let $=0;$<et;$+=1){const ot=E[$];ot.disconnect(V,0,f+$),ot.stop()}}V.disconnect(B),B.onaudioprocess=null,Oe?Dt():be();break}}}};let Oe=!1;const Nt=a(q,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),Ie=()=>B.connect(Nt).connect(q.destination),be=()=>{B.disconnect(Nt),Nt.disconnect()},b=()=>{if(ft){be(),d.numberOfOutputs>0&&B.connect(v);for(let R=0,Z=0;R<d.numberOfOutputs;R+=1){const L=J[R];for(let X=0;X<D[R];X+=1)v.connect(L,Z+X,X);Z+=D[R]}}Oe=!0},Y=()=>{ft&&(Ie(),Dt()),Oe=!1};return Ie(),h(dt,b,Y)},eD=(e,t)=>{const n=e.createBiquadFilter();return Te(n,t),Ve(n,t,"Q"),Ve(n,t,"detune"),Ve(n,t,"frequency"),Ve(n,t,"gain"),ge(n,t,"type"),n},Oy=(e,t)=>(n,s)=>{const i=n.createChannelMerger(s.numberOfInputs);return e!==null&&e.name==="webkitAudioContext"&&t(n,i),Te(i,s),i},yy=e=>{const t=e.numberOfOutputs;Object.defineProperty(e,"channelCount",{get:()=>t,set:n=>{if(n!==t)throw Re()}}),Object.defineProperty(e,"channelCountMode",{get:()=>"explicit",set:n=>{if(n!=="explicit")throw Re()}}),Object.defineProperty(e,"channelInterpretation",{get:()=>"discrete",set:n=>{if(n!=="discrete")throw Re()}})},wa=(e,t)=>{const n=e.createChannelSplitter(t.numberOfOutputs);return Te(n,t),yy(n),n},Wy=(e,t,n,s,i)=>(r,a)=>{if(r.createConstantSource===void 0)return n(r,a);const o=r.createConstantSource();return Te(o,a),Ve(o,a,"offset"),t(s,()=>s(r))||hu(o),t(i,()=>i(r))||pu(o),e(r,o),o},gr=(e,t)=>(e.connect=t.connect.bind(t),e.disconnect=t.disconnect.bind(t),e),Ey=(e,t,n,s)=>(i,o)=>{var A=o,{offset:r}=A,a=Wr(A,["offset"]);const l=i.createBuffer(1,2,44100),u=t(i,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),c=n(i,wt(nt({},a),{gain:r})),h=l.getChannelData(0);h[0]=1,h[1]=1,u.buffer=l,u.loop=!0;const q={get bufferSize(){},get channelCount(){return c.channelCount},set channelCount(d){c.channelCount=d},get channelCountMode(){return c.channelCountMode},set channelCountMode(d){c.channelCountMode=d},get channelInterpretation(){return c.channelInterpretation},set channelInterpretation(d){c.channelInterpretation=d},get context(){return c.context},get inputs(){return[]},get numberOfInputs(){return u.numberOfInputs},get numberOfOutputs(){return c.numberOfOutputs},get offset(){return c.gain},get onended(){return u.onended},set onended(d){u.onended=d},addEventListener(...d){return u.addEventListener(d[0],d[1],d[2])},dispatchEvent(...d){return u.dispatchEvent(d[0])},removeEventListener(...d){return u.removeEventListener(d[0],d[1],d[2])},start(d=0){u.start.call(u,d)},stop(d=0){u.stop.call(u,d)}},p=()=>u.connect(c),g=()=>u.disconnect(c);return e(i,u),s(gr(q,c),p,g)},Py=(e,t)=>(n,s)=>{const i=n.createConvolver();if(Te(i,s),s.disableNormalization===i.normalize&&(i.normalize=!s.disableNormalization),ge(i,s,"buffer"),s.channelCount>2||(t(i,"channelCount",r=>()=>r.call(i),r=>a=>{if(a>2)throw e();return r.call(i,a)}),s.channelCountMode==="max"))throw e();return t(i,"channelCountMode",r=>()=>r.call(i),r=>a=>{if(a==="max")throw e();return r.call(i,a)}),i},nD=(e,t)=>{const n=e.createDelay(t.maxDelayTime);return Te(n,t),Ve(n,t,"delayTime"),n},Iy=e=>(t,n)=>{const s=t.createDynamicsCompressor();if(Te(s,n),n.channelCount>2||n.channelCountMode==="max")throw e();return Ve(s,n,"attack"),Ve(s,n,"knee"),Ve(s,n,"ratio"),Ve(s,n,"release"),Ve(s,n,"threshold"),s},un=(e,t)=>{const n=e.createGain();return Te(n,t),Ve(n,t,"gain"),n},Sy=e=>(t,n,s)=>{if(t.createIIRFilter===void 0)return e(t,n,s);const i=t.createIIRFilter(s.feedforward,s.feedback);return Te(i,s),i};function Cy(e,t){const n=t[0]*t[0]+t[1]*t[1];return[(e[0]*t[0]+e[1]*t[1])/n,(e[1]*t[0]-e[0]*t[1])/n]}function wy(e,t){return[e[0]*t[0]-e[1]*t[1],e[0]*t[1]+e[1]*t[0]]}function gh(e,t){let n=[0,0];for(let s=e.length-1;s>=0;s-=1)n=wy(n,t),n[0]+=e[s];return n}const By=(e,t,n,s)=>(i,r,{channelCount:a,channelCountMode:o,channelInterpretation:A,feedback:l,feedforward:u})=>{const c=tD(r,i.sampleRate),h=l instanceof Float64Array?l:new Float64Array(l),q=u instanceof Float64Array?u:new Float64Array(u),p=h.length,g=q.length,d=Math.min(p,g);if(p===0||p>20)throw s();if(h[0]===0)throw t();if(g===0||g>20)throw s();if(q[0]===0)throw t();if(h[0]!==1){for(let E=0;E<g;E+=1)q[E]/=h[0];for(let E=1;E<p;E+=1)h[E]/=h[0]}const D=n(i,c,a,a);D.channelCount=a,D.channelCountMode=o,D.channelInterpretation=A;const f=32,y=[],N=[],M=[];for(let E=0;E<a;E+=1){y.push(0);const V=new Float32Array(f),C=new Float32Array(f);V.fill(0),C.fill(0),N.push(V),M.push(C)}D.onaudioprocess=E=>{const V=E.inputBuffer,C=E.outputBuffer,B=V.numberOfChannels;for(let v=0;v<B;v+=1){const J=V.getChannelData(v),K=C.getChannelData(v);y[v]=$d(h,p,q,g,d,N[v],M[v],y[v],f,J,K)}};const P=i.sampleRate/2;return gr({get bufferSize(){return c},get channelCount(){return D.channelCount},set channelCount(E){D.channelCount=E},get channelCountMode(){return D.channelCountMode},set channelCountMode(E){D.channelCountMode=E},get channelInterpretation(){return D.channelInterpretation},set channelInterpretation(E){D.channelInterpretation=E},get context(){return D.context},get inputs(){return[D]},get numberOfInputs(){return D.numberOfInputs},get numberOfOutputs(){return D.numberOfOutputs},addEventListener(...E){return D.addEventListener(E[0],E[1],E[2])},dispatchEvent(...E){return D.dispatchEvent(E[0])},getFrequencyResponse(E,V,C){if(E.length!==V.length||V.length!==C.length)throw e();const B=E.length;for(let v=0;v<B;v+=1){const J=-Math.PI*(E[v]/P),K=[Math.cos(J),Math.sin(J)],rt=gh(q,K),tt=gh(h,K),z=Cy(rt,tt);V[v]=Math.sqrt(z[0]*z[0]+z[1]*z[1]),C[v]=Math.atan2(z[1],z[0])}},removeEventListener(...E){return D.removeEventListener(E[0],E[1],E[2])}},D)},ky=(e,t)=>e.createMediaElementSource(t.mediaElement),Ty=(e,t)=>{const n=e.createMediaStreamDestination();return Te(n,t),n.numberOfOutputs===1&&Object.defineProperty(n,"numberOfOutputs",{get:()=>0}),n},by=(e,{mediaStream:t})=>{const n=t.getAudioTracks();n.sort((r,a)=>r.id<a.id?-1:r.id>a.id?1:0);const s=n.slice(0,1),i=e.createMediaStreamSource(new MediaStream(s));return Object.defineProperty(i,"mediaStream",{value:t}),i},Uy=(e,t)=>(n,{mediaStreamTrack:s})=>{if(typeof n.createMediaStreamTrackSource=="function")return n.createMediaStreamTrackSource(s);const i=new MediaStream([s]),r=n.createMediaStreamSource(i);if(s.kind!=="audio")throw e();if(t(n))throw new TypeError;return r},Qy=e=>e===null?null:e.hasOwnProperty("OfflineAudioContext")?e.OfflineAudioContext:e.hasOwnProperty("webkitOfflineAudioContext")?e.webkitOfflineAudioContext:null,vy=(e,t,n,s,i,r)=>(a,o)=>{const A=a.createOscillator();return Te(A,o),Ve(A,o,"detune"),Ve(A,o,"frequency"),o.periodicWave!==void 0?A.setPeriodicWave(o.periodicWave):ge(A,o,"type"),t(n,()=>n(a))||hu(A),t(s,()=>s(a))||r(A,a),t(i,()=>i(a))||pu(A),e(a,A),A},Ry=e=>(t,n)=>{const s=t.createPanner();return s.orientationX===void 0?e(t,n):(Te(s,n),Ve(s,n,"orientationX"),Ve(s,n,"orientationY"),Ve(s,n,"orientationZ"),Ve(s,n,"positionX"),Ve(s,n,"positionY"),Ve(s,n,"positionZ"),ge(s,n,"coneInnerAngle"),ge(s,n,"coneOuterAngle"),ge(s,n,"coneOuterGain"),ge(s,n,"distanceModel"),ge(s,n,"maxDistance"),ge(s,n,"panningModel"),ge(s,n,"refDistance"),ge(s,n,"rolloffFactor"),s)},Yy=(e,t,n,s,i,r,a,o,A,l)=>(u,C)=>{var B=C,{coneInnerAngle:c,coneOuterAngle:h,coneOuterGain:q,distanceModel:p,maxDistance:g,orientationX:d,orientationY:D,orientationZ:f,panningModel:y,positionX:N,positionY:M,positionZ:P,refDistance:O,rolloffFactor:E}=B,V=Wr(B,["coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","orientationX","orientationY","orientationZ","panningModel","positionX","positionY","positionZ","refDistance","rolloffFactor"]);const v=u.createPanner();if(V.channelCount>2||V.channelCountMode==="max")throw a();Te(v,V);const J={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},K=n(u,wt(nt({},J),{channelInterpretation:"speakers",numberOfInputs:6})),rt=s(u,wt(nt({},V),{gain:1})),tt=s(u,wt(nt({},J),{gain:1})),z=s(u,wt(nt({},J),{gain:0})),dt=s(u,wt(nt({},J),{gain:0})),at=s(u,wt(nt({},J),{gain:0})),St=s(u,wt(nt({},J),{gain:0})),gt=s(u,wt(nt({},J),{gain:0})),kt=i(u,256,6,1),Gt=r(u,wt(nt({},J),{curve:new Float32Array([1,1]),oversample:"none"}));let ce=[d,D,f],Tt=[N,M,P];const ft=new Float32Array(1);kt.onaudioprocess=({inputBuffer:Nt})=>{const Ie=[A(Nt,ft,0),A(Nt,ft,1),A(Nt,ft,2)];Ie.some((b,Y)=>b!==ce[Y])&&(v.setOrientation(...Ie),ce=Ie);const be=[A(Nt,ft,3),A(Nt,ft,4),A(Nt,ft,5)];be.some((b,Y)=>b!==Tt[Y])&&(v.setPosition(...be),Tt=be)},Object.defineProperty(z.gain,"defaultValue",{get:()=>0}),Object.defineProperty(dt.gain,"defaultValue",{get:()=>0}),Object.defineProperty(at.gain,"defaultValue",{get:()=>0}),Object.defineProperty(St.gain,"defaultValue",{get:()=>0}),Object.defineProperty(gt.gain,"defaultValue",{get:()=>0});const Dt={get bufferSize(){},get channelCount(){return v.channelCount},set channelCount(Nt){if(Nt>2)throw a();rt.channelCount=Nt,v.channelCount=Nt},get channelCountMode(){return v.channelCountMode},set channelCountMode(Nt){if(Nt==="max")throw a();rt.channelCountMode=Nt,v.channelCountMode=Nt},get channelInterpretation(){return v.channelInterpretation},set channelInterpretation(Nt){rt.channelInterpretation=Nt,v.channelInterpretation=Nt},get coneInnerAngle(){return v.coneInnerAngle},set coneInnerAngle(Nt){v.coneInnerAngle=Nt},get coneOuterAngle(){return v.coneOuterAngle},set coneOuterAngle(Nt){v.coneOuterAngle=Nt},get coneOuterGain(){return v.coneOuterGain},set coneOuterGain(Nt){if(Nt<0||Nt>1)throw t();v.coneOuterGain=Nt},get context(){return v.context},get distanceModel(){return v.distanceModel},set distanceModel(Nt){v.distanceModel=Nt},get inputs(){return[rt]},get maxDistance(){return v.maxDistance},set maxDistance(Nt){if(Nt<0)throw new RangeError;v.maxDistance=Nt},get numberOfInputs(){return v.numberOfInputs},get numberOfOutputs(){return v.numberOfOutputs},get orientationX(){return tt.gain},get orientationY(){return z.gain},get orientationZ(){return dt.gain},get panningModel(){return v.panningModel},set panningModel(Nt){v.panningModel=Nt},get positionX(){return at.gain},get positionY(){return St.gain},get positionZ(){return gt.gain},get refDistance(){return v.refDistance},set refDistance(Nt){if(Nt<0)throw new RangeError;v.refDistance=Nt},get rolloffFactor(){return v.rolloffFactor},set rolloffFactor(Nt){if(Nt<0)throw new RangeError;v.rolloffFactor=Nt},addEventListener(...Nt){return rt.addEventListener(Nt[0],Nt[1],Nt[2])},dispatchEvent(...Nt){return rt.dispatchEvent(Nt[0])},removeEventListener(...Nt){return rt.removeEventListener(Nt[0],Nt[1],Nt[2])}};c!==Dt.coneInnerAngle&&(Dt.coneInnerAngle=c),h!==Dt.coneOuterAngle&&(Dt.coneOuterAngle=h),q!==Dt.coneOuterGain&&(Dt.coneOuterGain=q),p!==Dt.distanceModel&&(Dt.distanceModel=p),g!==Dt.maxDistance&&(Dt.maxDistance=g),d!==Dt.orientationX.value&&(Dt.orientationX.value=d),D!==Dt.orientationY.value&&(Dt.orientationY.value=D),f!==Dt.orientationZ.value&&(Dt.orientationZ.value=f),y!==Dt.panningModel&&(Dt.panningModel=y),N!==Dt.positionX.value&&(Dt.positionX.value=N),M!==Dt.positionY.value&&(Dt.positionY.value=M),P!==Dt.positionZ.value&&(Dt.positionZ.value=P),O!==Dt.refDistance&&(Dt.refDistance=O),E!==Dt.rolloffFactor&&(Dt.rolloffFactor=E),(ce[0]!==1||ce[1]!==0||ce[2]!==0)&&v.setOrientation(...ce),(Tt[0]!==0||Tt[1]!==0||Tt[2]!==0)&&v.setPosition(...Tt);const ie=()=>{rt.connect(v),e(rt,Gt,0,0),Gt.connect(tt).connect(K,0,0),Gt.connect(z).connect(K,0,1),Gt.connect(dt).connect(K,0,2),Gt.connect(at).connect(K,0,3),Gt.connect(St).connect(K,0,4),Gt.connect(gt).connect(K,0,5),K.connect(kt).connect(u.destination)},Oe=()=>{rt.disconnect(v),o(rt,Gt,0,0),Gt.disconnect(tt),tt.disconnect(K),Gt.disconnect(z),z.disconnect(K),Gt.disconnect(dt),dt.disconnect(K),Gt.disconnect(at),at.disconnect(K),Gt.disconnect(St),St.disconnect(K),Gt.disconnect(gt),gt.disconnect(K),K.disconnect(kt),kt.disconnect(u.destination)};return l(gr(Dt,v),ie,Oe)},Gy=e=>(t,{disableNormalization:n,imag:s,real:i})=>{const r=s instanceof Float32Array?s:new Float32Array(s),a=i instanceof Float32Array?i:new Float32Array(i),o=t.createPeriodicWave(a,r,{disableNormalization:n});if(Array.from(s).length<2)throw e();return o},Ba=(e,t,n,s)=>e.createScriptProcessor(t,n,s),_y=(e,t)=>(n,s)=>{const i=s.channelCountMode;if(i==="clamped-max")throw t();if(n.createStereoPanner===void 0)return e(n,s);const r=n.createStereoPanner();return Te(r,s),Ve(r,s,"pan"),Object.defineProperty(r,"channelCountMode",{get:()=>i,set:a=>{if(a!==i)throw t()}}),r},xy=(e,t,n,s,i,r)=>{const o=new Float32Array([1,1]),A=Math.PI/2,l={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},u=wt(nt({},l),{oversample:"none"}),c=(p,g,d,D)=>{const f=new Float32Array(16385),y=new Float32Array(16385);for(let V=0;V<16385;V+=1){const C=V/16384*A;f[V]=Math.cos(C),y[V]=Math.sin(C)}const N=n(p,wt(nt({},l),{gain:0})),M=s(p,wt(nt({},u),{curve:f})),P=s(p,wt(nt({},u),{curve:o})),O=n(p,wt(nt({},l),{gain:0})),E=s(p,wt(nt({},u),{curve:y}));return{connectGraph(){g.connect(N),g.connect(P.inputs===void 0?P:P.inputs[0]),g.connect(O),P.connect(d),d.connect(M.inputs===void 0?M:M.inputs[0]),d.connect(E.inputs===void 0?E:E.inputs[0]),M.connect(N.gain),E.connect(O.gain),N.connect(D,0,0),O.connect(D,0,1)},disconnectGraph(){g.disconnect(N),g.disconnect(P.inputs===void 0?P:P.inputs[0]),g.disconnect(O),P.disconnect(d),d.disconnect(M.inputs===void 0?M:M.inputs[0]),d.disconnect(E.inputs===void 0?E:E.inputs[0]),M.disconnect(N.gain),E.disconnect(O.gain),N.disconnect(D,0,0),O.disconnect(D,0,1)}}},h=(p,g,d,D)=>{const f=new Float32Array(16385),y=new Float32Array(16385),N=new Float32Array(16385),M=new Float32Array(16385),P=Math.floor(16385/2);for(let z=0;z<16385;z+=1)if(z>P){const dt=(z-P)/(16384-P)*A;f[z]=Math.cos(dt),y[z]=Math.sin(dt),N[z]=0,M[z]=1}else{const dt=z/(16384-P)*A;f[z]=1,y[z]=0,N[z]=Math.cos(dt),M[z]=Math.sin(dt)}const O=t(p,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),E=n(p,wt(nt({},l),{gain:0})),V=s(p,wt(nt({},u),{curve:f})),C=n(p,wt(nt({},l),{gain:0})),B=s(p,wt(nt({},u),{curve:y})),v=s(p,wt(nt({},u),{curve:o})),J=n(p,wt(nt({},l),{gain:0})),K=s(p,wt(nt({},u),{curve:N})),rt=n(p,wt(nt({},l),{gain:0})),tt=s(p,wt(nt({},u),{curve:M}));return{connectGraph(){g.connect(O),g.connect(v.inputs===void 0?v:v.inputs[0]),O.connect(E,0),O.connect(C,0),O.connect(J,1),O.connect(rt,1),v.connect(d),d.connect(V.inputs===void 0?V:V.inputs[0]),d.connect(B.inputs===void 0?B:B.inputs[0]),d.connect(K.inputs===void 0?K:K.inputs[0]),d.connect(tt.inputs===void 0?tt:tt.inputs[0]),V.connect(E.gain),B.connect(C.gain),K.connect(J.gain),tt.connect(rt.gain),E.connect(D,0,0),J.connect(D,0,0),C.connect(D,0,1),rt.connect(D,0,1)},disconnectGraph(){g.disconnect(O),g.disconnect(v.inputs===void 0?v:v.inputs[0]),O.disconnect(E,0),O.disconnect(C,0),O.disconnect(J,1),O.disconnect(rt,1),v.disconnect(d),d.disconnect(V.inputs===void 0?V:V.inputs[0]),d.disconnect(B.inputs===void 0?B:B.inputs[0]),d.disconnect(K.inputs===void 0?K:K.inputs[0]),d.disconnect(tt.inputs===void 0?tt:tt.inputs[0]),V.disconnect(E.gain),B.disconnect(C.gain),K.disconnect(J.gain),tt.disconnect(rt.gain),E.disconnect(D,0,0),J.disconnect(D,0,0),C.disconnect(D,0,1),rt.disconnect(D,0,1)}}},q=(p,g,d,D,f)=>{if(g===1)return c(p,d,D,f);if(g===2)return h(p,d,D,f);throw i()};return(p,y)=>{var N=y,{channelCount:g,channelCountMode:d,pan:D}=N,f=Wr(N,["channelCount","channelCountMode","pan"]);if(d==="max")throw i();const M=e(p,wt(nt({},f),{channelCount:1,channelCountMode:d,numberOfInputs:2})),P=n(p,wt(nt({},f),{channelCount:g,channelCountMode:d,gain:1})),O=n(p,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:D});let{connectGraph:E,disconnectGraph:V}=q(p,g,P,O,M);Object.defineProperty(O.gain,"defaultValue",{get:()=>0}),Object.defineProperty(O.gain,"maxValue",{get:()=>1}),Object.defineProperty(O.gain,"minValue",{get:()=>-1});const C={get bufferSize(){},get channelCount(){return P.channelCount},set channelCount(K){P.channelCount!==K&&(B&&V(),{connectGraph:E,disconnectGraph:V}=q(p,K,P,O,M),B&&E()),P.channelCount=K},get channelCountMode(){return P.channelCountMode},set channelCountMode(K){if(K==="clamped-max"||K==="max")throw i();P.channelCountMode=K},get channelInterpretation(){return P.channelInterpretation},set channelInterpretation(K){P.channelInterpretation=K},get context(){return P.context},get inputs(){return[P]},get numberOfInputs(){return P.numberOfInputs},get numberOfOutputs(){return P.numberOfOutputs},get pan(){return O.gain},addEventListener(...K){return P.addEventListener(K[0],K[1],K[2])},dispatchEvent(...K){return P.dispatchEvent(K[0])},removeEventListener(...K){return P.removeEventListener(K[0],K[1],K[2])}};let B=!1;const v=()=>{E(),B=!0},J=()=>{V(),B=!1};return r(gr(C,M),v,J)}},Fy=(e,t,n,s,i,r,a)=>(o,A)=>{const l=o.createWaveShaper();if(r!==null&&r.name==="webkitAudioContext"&&o.createGain().gain.automationRate===void 0)return n(o,A);Te(l,A);const u=A.curve===null||A.curve instanceof Float32Array?A.curve:new Float32Array(A.curve);if(u!==null&&u.length<2)throw t();ge(l,{curve:u},"curve"),ge(l,A,"oversample");let c=null,h=!1;return a(l,"curve",g=>()=>g.call(l),g=>d=>(g.call(l,d),h&&(s(d)&&c===null?c=e(o,l):!s(d)&&c!==null&&(c(),c=null)),d)),i(l,()=>{h=!0,s(l.curve)&&(c=e(o,l))},()=>{h=!1,c!==null&&(c(),c=null)})},Zy=(e,t,n,s,i)=>(r,l)=>{var u=l,{curve:a,oversample:o}=u,A=Wr(u,["curve","oversample"]);const c=r.createWaveShaper(),h=r.createWaveShaper();Te(c,A),Te(h,A);const q=n(r,wt(nt({},A),{gain:1})),p=n(r,wt(nt({},A),{gain:-1})),g=n(r,wt(nt({},A),{gain:1})),d=n(r,wt(nt({},A),{gain:-1}));let D=null,f=!1,y=null;const N={get bufferSize(){},get channelCount(){return c.channelCount},set channelCount(O){q.channelCount=O,p.channelCount=O,c.channelCount=O,g.channelCount=O,h.channelCount=O,d.channelCount=O},get channelCountMode(){return c.channelCountMode},set channelCountMode(O){q.channelCountMode=O,p.channelCountMode=O,c.channelCountMode=O,g.channelCountMode=O,h.channelCountMode=O,d.channelCountMode=O},get channelInterpretation(){return c.channelInterpretation},set channelInterpretation(O){q.channelInterpretation=O,p.channelInterpretation=O,c.channelInterpretation=O,g.channelInterpretation=O,h.channelInterpretation=O,d.channelInterpretation=O},get context(){return c.context},get curve(){return y},set curve(O){if(O!==null&&O.length<2)throw t();if(O===null)c.curve=O,h.curve=O;else{const E=O.length,V=new Float32Array(E+2-E%2),C=new Float32Array(E+2-E%2);V[0]=O[0],C[0]=-O[E-1];const B=Math.ceil((E+1)/2),v=(E+1)/2-1;for(let J=1;J<B;J+=1){const K=J/B*v,rt=Math.floor(K),tt=Math.ceil(K);V[J]=rt===tt?O[rt]:(1-(K-rt))*O[rt]+(1-(tt-K))*O[tt],C[J]=rt===tt?-O[E-1-rt]:-((1-(K-rt))*O[E-1-rt])-(1-(tt-K))*O[E-1-tt]}V[B]=E%2===1?O[B-1]:(O[B-2]+O[B-1])/2,c.curve=V,h.curve=C}y=O,f&&(s(y)&&D===null?D=e(r,q):D!==null&&(D(),D=null))},get inputs(){return[q]},get numberOfInputs(){return c.numberOfInputs},get numberOfOutputs(){return c.numberOfOutputs},get oversample(){return c.oversample},set oversample(O){c.oversample=O,h.oversample=O},addEventListener(...O){return q.addEventListener(O[0],O[1],O[2])},dispatchEvent(...O){return q.dispatchEvent(O[0])},removeEventListener(...O){return q.removeEventListener(O[0],O[1],O[2])}};a!==null&&(N.curve=a instanceof Float32Array?a:new Float32Array(a)),o!==N.oversample&&(N.oversample=o);const M=()=>{q.connect(c).connect(g),q.connect(p).connect(h).connect(d).connect(g),f=!0,s(y)&&(D=e(r,q))},P=()=>{q.disconnect(c),c.disconnect(g),q.disconnect(p),p.disconnect(h),h.disconnect(d),d.disconnect(g),f=!1,D!==null&&(D(),D=null)};return i(gr(N,g),M,P)},rn=()=>new DOMException("","NotSupportedError"),Ky={numberOfChannels:1},Jy=(e,t,n,s,i)=>class extends e{constructor(a,o,A){let l;if(typeof a=="number"&&o!==void 0&&A!==void 0)l={length:o,numberOfChannels:a,sampleRate:A};else if(typeof a=="object")l=a;else throw new Error("The given parameters are not valid.");const{length:u,numberOfChannels:c,sampleRate:h}=nt(nt({},Ky),l),q=s(c,u,h);t(ea,()=>ea(q))||q.addEventListener("statechange",(()=>{let p=0;const g=d=>{this._state==="running"&&(p>0?(q.removeEventListener("statechange",g),d.stopImmediatePropagation(),this._waitForThePromiseToSettle(d)):p+=1)};return g})()),super(q,c),this._length=u,this._nativeOfflineAudioContext=q,this._state=null}get length(){return this._nativeOfflineAudioContext.length===void 0?this._length:this._nativeOfflineAudioContext.length}get state(){return this._state===null?this._nativeOfflineAudioContext.state:this._state}startRendering(){return this._state==="running"?Promise.reject(n()):(this._state="running",i(this.destination,this._nativeOfflineAudioContext).finally(()=>{this._state=null,Jd(this)}))}_waitForThePromiseToSettle(a){this._state===null?this._nativeOfflineAudioContext.dispatchEvent(a):setTimeout(()=>this._waitForThePromiseToSettle(a))}},Ly={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},zy=(e,t,n,s,i,r,a)=>class extends e{constructor(A,l){const u=i(A),c=nt(nt({},Ly),l),h=n(u,c),q=r(u),p=q?s():null,g=A.sampleRate/2;super(A,!1,h,p),this._detune=t(this,q,h.detune,153600,-153600),this._frequency=t(this,q,h.frequency,g,-g),this._nativeOscillatorNode=h,this._onended=null,this._oscillatorNodeRenderer=p,this._oscillatorNodeRenderer!==null&&c.periodicWave!==void 0&&(this._oscillatorNodeRenderer.periodicWave=c.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(A){const l=typeof A=="function"?a(this,A):null;this._nativeOscillatorNode.onended=l;const u=this._nativeOscillatorNode.onended;this._onended=u!==null&&u===l?A:u}get type(){return this._nativeOscillatorNode.type}set type(A){this._nativeOscillatorNode.type=A,this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(A){this._nativeOscillatorNode.setPeriodicWave(A),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=A)}start(A=0){if(this._nativeOscillatorNode.start(A),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.start=A),this.context.state!=="closed"){or(this);const l=()=>{this._nativeOscillatorNode.removeEventListener("ended",l),os(this)&&Ia(this)};this._nativeOscillatorNode.addEventListener("ended",l)}}stop(A=0){this._nativeOscillatorNode.stop(A),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.stop=A)}},jy=(e,t,n,s,i)=>()=>{const r=new WeakMap;let a=null,o=null,A=null;const l=async(u,c)=>{let h=n(u);const q=je(h,c);if(!q){const p={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,detune:h.detune.value,frequency:h.frequency.value,periodicWave:a===null?void 0:a,type:h.type};h=t(c,p),o!==null&&h.start(o),A!==null&&h.stop(A)}return r.set(c,h),q?(await e(c,u.detune,h.detune),await e(c,u.frequency,h.frequency)):(await s(c,u.detune,h.detune),await s(c,u.frequency,h.frequency)),await i(u,c,h),h};return{set periodicWave(u){a=u},set start(u){o=u},set stop(u){A=u},render(u,c){const h=r.get(c);return h!==void 0?Promise.resolve(h):l(u,c)}}},Hy={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},Xy=(e,t,n,s,i,r,a)=>class extends e{constructor(A,l){const u=i(A),c=nt(nt({},Hy),l),h=n(u,c),q=r(u),p=q?s():null;super(A,!1,h,p),this._nativePannerNode=h,this._orientationX=t(this,q,h.orientationX,tn,An),this._orientationY=t(this,q,h.orientationY,tn,An),this._orientationZ=t(this,q,h.orientationZ,tn,An),this._positionX=t(this,q,h.positionX,tn,An),this._positionY=t(this,q,h.positionY,tn,An),this._positionZ=t(this,q,h.positionZ,tn,An),a(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(A){this._nativePannerNode.coneInnerAngle=A}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(A){this._nativePannerNode.coneOuterAngle=A}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(A){this._nativePannerNode.coneOuterGain=A}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(A){this._nativePannerNode.distanceModel=A}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(A){this._nativePannerNode.maxDistance=A}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(A){this._nativePannerNode.panningModel=A}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(A){this._nativePannerNode.refDistance=A}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(A){this._nativePannerNode.rolloffFactor=A}},$y=(e,t,n,s,i,r,a,o,A,l)=>()=>{const u=new WeakMap;let c=null;const h=async(q,p)=>{let g=null,d=r(q);const D={channelCount:d.channelCount,channelCountMode:d.channelCountMode,channelInterpretation:d.channelInterpretation},f=wt(nt({},D),{coneInnerAngle:d.coneInnerAngle,coneOuterAngle:d.coneOuterAngle,coneOuterGain:d.coneOuterGain,distanceModel:d.distanceModel,maxDistance:d.maxDistance,panningModel:d.panningModel,refDistance:d.refDistance,rolloffFactor:d.rolloffFactor}),y=je(d,p);if("bufferSize"in d)g=s(p,wt(nt({},D),{gain:1}));else if(!y){const N=wt(nt({},f),{orientationX:d.orientationX.value,orientationY:d.orientationY.value,orientationZ:d.orientationZ.value,positionX:d.positionX.value,positionY:d.positionY.value,positionZ:d.positionZ.value});d=i(p,N)}if(u.set(p,g===null?d:g),g!==null){if(c===null){if(a===null)throw new Error("Missing the native OfflineAudioContext constructor.");const B=new a(6,q.context.length,p.sampleRate),v=t(B,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});v.connect(B.destination),c=(async()=>{const J=await Promise.all([q.orientationX,q.orientationY,q.orientationZ,q.positionX,q.positionY,q.positionZ].map(async(K,rt)=>{const tt=n(B,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:rt===0?1:0});return await o(B,K,tt.offset),tt}));for(let K=0;K<6;K+=1)J[K].connect(v,0,K),J[K].start(0);return l(B)})()}const N=await c,M=s(p,wt(nt({},D),{gain:1}));await A(q,p,M);const P=[];for(let B=0;B<N.numberOfChannels;B+=1)P.push(N.getChannelData(B));let O=[P[0][0],P[1][0],P[2][0]],E=[P[3][0],P[4][0],P[5][0]],V=s(p,wt(nt({},D),{gain:1})),C=i(p,wt(nt({},f),{orientationX:O[0],orientationY:O[1],orientationZ:O[2],positionX:E[0],positionY:E[1],positionZ:E[2]}));M.connect(V).connect(C.inputs[0]),C.connect(g);for(let B=128;B<N.length;B+=128){const v=[P[0][B],P[1][B],P[2][B]],J=[P[3][B],P[4][B],P[5][B]];if(v.some((K,rt)=>K!==O[rt])||J.some((K,rt)=>K!==E[rt])){O=v,E=J;const K=B/p.sampleRate;V.gain.setValueAtTime(0,K),V=s(p,wt(nt({},D),{gain:0})),C=i(p,wt(nt({},f),{orientationX:O[0],orientationY:O[1],orientationZ:O[2],positionX:E[0],positionY:E[1],positionZ:E[2]})),V.gain.setValueAtTime(1,K),M.connect(V).connect(C.inputs[0]),C.connect(g)}}return g}return y?(await e(p,q.orientationX,d.orientationX),await e(p,q.orientationY,d.orientationY),await e(p,q.orientationZ,d.orientationZ),await e(p,q.positionX,d.positionX),await e(p,q.positionY,d.positionY),await e(p,q.positionZ,d.positionZ)):(await o(p,q.orientationX,d.orientationX),await o(p,q.orientationY,d.orientationY),await o(p,q.orientationZ,d.orientationZ),await o(p,q.positionX,d.positionX),await o(p,q.positionY,d.positionY),await o(p,q.positionZ,d.positionZ)),Dr(d)?await A(q,p,d.inputs[0]):await A(q,p,d),d};return{render(q,p){const g=u.get(p);return g!==void 0?Promise.resolve(g):h(q,p)}}},tW={disableNormalization:!1},eW=(e,t,n,s)=>class sD{constructor(r,a){const o=t(r),A=s(nt(nt({},tW),a)),l=e(o,A);return n.add(l),l}static[Symbol.hasInstance](r){return r!==null&&typeof r=="object"&&Object.getPrototypeOf(r)===sD.prototype||n.has(r)}},nW=(e,t)=>(n,s,i)=>(e(s).replay(i),t(s,n,i)),sW=(e,t,n)=>async(s,i,r)=>{const a=e(s);await Promise.all(a.activeInputs.map((o,A)=>Array.from(o).map(async([l,u])=>{const h=await t(l).render(l,i),q=s.context.destination;!n(l)&&(s!==q||!n(s))&&h.connect(r,u,A)})).reduce((o,A)=>[...o,...A],[]))},iW=(e,t,n)=>async(s,i,r)=>{const a=t(s);await Promise.all(Array.from(a.activeInputs).map(async([o,A])=>{const u=await e(o).render(o,i);n(o)||u.connect(r,A)}))},rW=(e,t,n,s)=>i=>e(ea,()=>ea(i))?Promise.resolve(e(s,s)).then(r=>{if(!r){const a=n(i,512,0,1);i.oncomplete=()=>{a.onaudioprocess=null,a.disconnect()},a.onaudioprocess=()=>i.currentTime,a.connect(i.destination)}return i.startRendering()}):new Promise(r=>{const a=t(i,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});i.oncomplete=o=>{a.disconnect(),r(o.renderedBuffer)},a.connect(i.destination),i.startRendering()}),aW=e=>(t,n)=>{e.set(t,n)},oW=e=>(t,n)=>e.set(t,n),AW=(e,t,n,s,i,r,a,o)=>(A,l)=>n(A).render(A,l).then(()=>Promise.all(Array.from(s(l)).map(u=>n(u).render(u,l)))).then(()=>i(l)).then(u=>(typeof u.copyFromChannel!="function"?(a(u),lu(u)):t(r,()=>r(u))||o(u),e.add(u),u)),cW={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},lW=(e,t,n,s,i,r)=>class extends e{constructor(o,A){const l=i(o),u=nt(nt({},cW),A),c=n(l,u),h=r(l),q=h?s():null;super(o,!1,c,q),this._pan=t(this,h,c.pan)}get pan(){return this._pan}},uW=(e,t,n,s,i)=>()=>{const r=new WeakMap,a=async(o,A)=>{let l=n(o);const u=je(l,A);if(!u){const c={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,pan:l.pan.value};l=t(A,c)}return r.set(A,l),u?await e(A,o.pan,l.pan):await s(A,o.pan,l.pan),Dr(l)?await i(o,A,l.inputs[0]):await i(o,A,l),l};return{render(o,A){const l=r.get(A);return l!==void 0?Promise.resolve(l):a(o,A)}}},qW=e=>()=>{if(e===null)return!1;try{new e({length:1,sampleRate:44100})}catch{return!1}return!0},hW=(e,t)=>async()=>{if(e===null)return!0;if(t===null)return!1;const n=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),s=new t(1,128,44100),i=URL.createObjectURL(n);let r=!1,a=!1;try{await s.audioWorklet.addModule(i);const o=new e(s,"a",{numberOfOutputs:0}),A=s.createOscillator();o.port.onmessage=()=>r=!0,o.onprocessorerror=()=>a=!0,A.connect(o),A.start(0),await s.startRendering()}catch{}finally{URL.revokeObjectURL(i)}return r&&!a},pW=(e,t)=>()=>{if(t===null)return Promise.resolve(!1);const n=new t(1,1,44100),s=e(n,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise(i=>{n.oncomplete=()=>{s.disconnect(),i(n.currentTime!==0)},n.startRendering()})},dW=()=>new DOMException("","UnknownError"),DW={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},gW=(e,t,n,s,i,r,a)=>class extends e{constructor(A,l){const u=i(A),c=nt(nt({},DW),l),h=n(u,c),p=r(u)?s():null;super(A,!0,h,p),this._isCurveNullified=!1,this._nativeWaveShaperNode=h,a(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(A){if(A===null)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(A.length<2)throw t();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=A}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(A){this._nativeWaveShaperNode.oversample=A}},fW=(e,t,n)=>()=>{const s=new WeakMap,i=async(r,a)=>{let o=t(r);if(!je(o,a)){const l={channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,curve:o.curve,oversample:o.oversample};o=e(a,l)}return s.set(a,o),Dr(o)?await n(r,a,o.inputs[0]):await n(r,a,o),o};return{render(r,a){const o=s.get(a);return o!==void 0?Promise.resolve(o):i(r,a)}}},mW=()=>typeof window=="undefined"?null:window,NW=(e,t)=>n=>{n.copyFromChannel=(s,i,r=0)=>{const a=e(r),o=e(i);if(o>=n.numberOfChannels)throw t();const A=n.length,l=n.getChannelData(o),u=s.length;for(let c=a<0?-a:0;c+a<A&&c<u;c+=1)s[c]=l[c+a]},n.copyToChannel=(s,i,r=0)=>{const a=e(r),o=e(i);if(o>=n.numberOfChannels)throw t();const A=n.length,l=n.getChannelData(o),u=s.length;for(let c=a<0?-a:0;c+a<A&&c<u;c+=1)l[c+a]=s[c]}},VW=e=>t=>{t.copyFromChannel=(n=>(s,i,r=0)=>{const a=e(r),o=e(i);if(a<t.length)return n.call(t,s,o,a)})(t.copyFromChannel),t.copyToChannel=(n=>(s,i,r=0)=>{const a=e(r),o=e(i);if(a<t.length)return n.call(t,s,o,a)})(t.copyToChannel)},MW=e=>(t,n)=>{const s=n.createBuffer(1,1,44100);t.buffer===null&&(t.buffer=s),e(t,"buffer",i=>()=>{const r=i.call(t);return r===s?null:r},i=>r=>i.call(t,r===null?s:r))},OW=(e,t)=>(n,s)=>{s.channelCount=1,s.channelCountMode="explicit",Object.defineProperty(s,"channelCount",{get:()=>1,set:()=>{throw e()}}),Object.defineProperty(s,"channelCountMode",{get:()=>"explicit",set:()=>{throw e()}});const i=n.createBufferSource();t(s,()=>{const o=s.numberOfInputs;for(let A=0;A<o;A+=1)i.connect(s,0,A)},()=>i.disconnect(s))},iD=(e,t,n)=>e.copyFromChannel===void 0?e.getChannelData(n)[0]:(e.copyFromChannel(t,n),t[0]),rD=e=>{if(e===null)return!1;const t=e.length;return t%2!==0?e[Math.floor(t/2)]!==0:e[t/2-1]+e[t/2]!==0},ka=(e,t,n,s)=>{let i=e;for(;!i.hasOwnProperty(t);)i=Object.getPrototypeOf(i);const{get:r,set:a}=Object.getOwnPropertyDescriptor(i,t);Object.defineProperty(e,t,{get:n(r),set:s(a)})},yW=e=>wt(nt({},e),{outputChannelCount:e.outputChannelCount!==void 0?e.outputChannelCount:e.numberOfInputs===1&&e.numberOfOutputs===1?[e.channelCount]:Array.from({length:e.numberOfOutputs},()=>1)}),WW=e=>wt(nt({},e),{channelCount:e.numberOfOutputs}),EW=e=>{const{imag:t,real:n}=e;return t===void 0?n===void 0?wt(nt({},e),{imag:[0,0],real:[0,0]}):wt(nt({},e),{imag:Array.from(n,()=>0),real:n}):n===void 0?wt(nt({},e),{imag:t,real:Array.from(t,()=>0)}):wt(nt({},e),{imag:t,real:n})},aD=(e,t,n)=>{try{e.setValueAtTime(t,n)}catch(s){if(s.code!==9)throw s;aD(e,t,n+1e-7)}},PW=e=>{const t=e.createBufferSource();t.start();try{t.start()}catch{return!0}return!1},IW=e=>{const t=e.createBufferSource(),n=e.createBuffer(1,1,44100);t.buffer=n;try{t.start(0,1)}catch{return!1}return!0},SW=e=>{const t=e.createBufferSource();t.start();try{t.stop()}catch{return!1}return!0},du=e=>{const t=e.createOscillator();try{t.start(-1)}catch(n){return n instanceof RangeError}return!1},oD=e=>{const t=e.createBuffer(1,1,44100),n=e.createBufferSource();n.buffer=t,n.start(),n.stop();try{return n.stop(),!0}catch{return!1}},Du=e=>{const t=e.createOscillator();try{t.stop(-1)}catch(n){return n instanceof RangeError}return!1},CW=e=>{const{port1:t,port2:n}=new MessageChannel;try{t.postMessage(e)}finally{t.close(),n.close()}},wW=e=>{e.start=(t=>(n=0,s=0,i)=>{const r=e.buffer,a=r===null?s:Math.min(r.duration,s);r!==null&&a>r.duration-.5/e.context.sampleRate?t.call(e,n,0,0):t.call(e,n,a,i)})(e.start)},AD=(e,t)=>{const n=t.createGain();e.connect(n);const s=(i=>()=>{i.call(e,n),e.removeEventListener("ended",s)})(e.disconnect);e.addEventListener("ended",s),gr(e,n),e.stop=(i=>{let r=!1;return(a=0)=>{if(r)try{i.call(e,a)}catch{n.gain.setValueAtTime(0,a)}else i.call(e,a),r=!0}})(e.stop)},fr=(e,t)=>n=>{const s={value:e};return Object.defineProperties(n,{currentTarget:s,target:s}),typeof t=="function"?t.call(e,n):t.handleEvent.call(e,n)},BW=X1(ki),kW=iM(ki),TW=DO(SA),cD=new WeakMap,bW=TO(cD),Yn=KM(new Map,new WeakMap),jn=mW(),lD=ly(Yn,Xn),gu=kO(nn),Ze=sW(nn,gu,Ni),UW=cM(lD,De,Ze),ue=QO(IA),gs=Qy(jn),ae=ty(gs),uD=new WeakMap,qD=EO(fr),Ta=py(jn),fu=jO(Ta),mu=HO(jn),hD=XO(jn),na=Dy(jn),Pe=TM($1(Yd),sM(BW,kW,Uo,TW,Qo,nn,bW,Pa,De,ki,os,Ni,po),Yn,ZO(el,Qo,nn,De,ta,os),Xn,CA,rn,qO(Uo,el,nn,De,ta,ue,os,ae),mO(uD,nn,Qn),qD,ue,fu,mu,hD,ae,na),QW=AM(Pe,UW,Xn,lD,ue,ae),Nu=new WeakSet,fh=uy(jn),pD=rO(new Uint32Array(1)),Vu=NW(pD,Xn),Mu=VW(pD),vW=uM(Nu,Yn,rn,fh,gs,qW(fh),Vu,Mu),wA=rM(un),dD=iW(gu,Sa,Ni),$n=$M(dD),mr=hy(wA,Yn,PW,IW,SW,du,oD,Du,wW,MW(ka),AD),ts=nW(bO(Sa),dD),RW=pM($n,mr,De,ts,Ze),Gn=bM(tM(Gd),uD,cu,UM,K1,J1,L1,z1,j1,Xc,vd,Ta,aD),YW=hM(Pe,RW,Gn,Re,mr,ue,ae,fr),GW=OM(Pe,yM,Xn,Re,dy(un,ka),ue,ae,Ze),_W=ZM($n,eD,De,ts,Ze),Ti=oW(cD),xW=FM(Pe,Gn,_W,CA,eD,ue,ae,Ti),$s=Ay(ki,mu),FW=OW(Re,$s),ti=Oy(Ta,FW),ZW=zM(ti,De,Ze),KW=LM(Pe,ZW,ti,ue,ae),JW=XM(wa,De,Ze),LW=HM(Pe,JW,wa,ue,ae,WW),zW=Ey(wA,mr,un,$s),Nr=Wy(wA,Yn,zW,du,Du),jW=iO($n,Nr,De,ts,Ze),HW=sO(Pe,Gn,jW,Nr,ue,ae,fr),DD=Py(rn,ka),XW=AO(DD,De,Ze),$W=oO(Pe,XW,DD,ue,ae,Ti),tE=dO($n,nD,De,ts,Ze),eE=pO(Pe,Gn,tE,nD,ue,ae,Ti),gD=Iy(rn),nE=OO($n,gD,De,ts,Ze),sE=MO(Pe,Gn,nE,gD,rn,ue,ae,Ti),iE=wO($n,un,De,ts,Ze),rE=CO(Pe,Gn,iE,un,ue,ae),aE=By(CA,Re,Ba,rn),BA=rW(Yn,un,Ba,pW(un,gs)),oE=FO(mr,De,gs,Ze,BA),AE=Sy(aE),cE=_O(Pe,AE,oE,ue,ae,Ti),lE=WM(Gn,ti,Nr,Ba,rn,iD,ae,ka),fD=new WeakMap,uE=oy(GW,lE,qD,ae,fD,fr),mD=vy(wA,Yn,du,oD,Du,AD),qE=jy($n,mD,De,ts,Ze),hE=zy(Pe,Gn,mD,qE,ue,ae,fr),ND=eO(mr),pE=Zy(ND,Re,un,rD,$s),kA=Fy(ND,Re,pE,rD,$s,Ta,ka),dE=Yy(Uo,Re,ti,un,Ba,kA,rn,Qo,iD,$s),VD=Ry(dE),DE=$y($n,ti,Nr,un,VD,De,gs,ts,Ze,BA),gE=Xy(Pe,Gn,VD,DE,ue,ae,Ti),fE=Gy(Xn),mE=eW(fE,ue,new WeakSet,EW),NE=xy(ti,wa,un,kA,rn,$s),MD=_y(NE,rn),VE=uW($n,MD,De,ts,Ze),ME=lW(Pe,Gn,MD,VE,ue,ae),OE=fW(kA,De,Ze),yE=gW(Pe,Re,kA,OE,ue,ae,Ti),OD=ey(jn),Ou=PO(jn),yD=new WeakMap,WE=vO(yD,gs),EE=OD?nM(Yn,rn,WO(jn),Ou,IO(H1),ue,WE,ae,na,new WeakMap,new WeakMap,hW(na,gs),jn):void 0,PE=$O(fu,ae),IE=uO(Nu,Yn,lO,yO,new WeakSet,ue,PE,To,ea,Vu,Mu),WD=_M(EE,QW,vW,YW,xW,KW,LW,HW,$W,IE,eE,sE,rE,cE,uE,hE,gE,mE,ME,yE),SE=ny(Pe,ky,ue,ae),CE=iy(Pe,Ty,ue,ae),wE=ry(Pe,by,ue,ae),BE=Uy(Re,ae),kE=ay(Pe,BE,ue),TE=MM(WD,Re,rn,dW,SE,CE,wE,kE,Ta),yu=RO(fD),bE=aM(yu),ED=tO(Xn),UE=gO(yu),PD=NO(Xn),ID=new WeakMap,QE=BO(ID,Qn),vE=My(ED,Xn,Re,ti,wa,Nr,un,Ba,rn,PD,Ou,QE,$s),RE=fy(Re,vE,un,rn,$s),YE=GM($n,ED,mr,ti,wa,Nr,un,UE,PD,Ou,De,na,gs,ts,Ze,BA),GE=UO(yD),_E=aW(ID),mh=OD?vM(bE,Pe,Gn,YE,RE,nn,GE,ue,ae,na,yW,_E,CW,fr):void 0,xE=cO(rn,gs),FE=AW(Nu,Yn,gu,yu,BA,To,Vu,Mu),ZE=Jy(WD,Yn,Re,xE,FE),KE=KO(IA,fu),JE=JO(Au,mu),LE=LO(cu,hD),zE=zO(IA,ae);function Ut(e,t){if(!e)throw new Error(t)}function Ks(e,t,n=1/0){if(!(t<=e&&e<=n))throw new RangeError(`Value must be within [${t}, ${n}], got: ${e}`)}function SD(e){!e.isOffline&&e.state!=="running"&&wD('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let CD=console;function jE(...e){CD.log(...e)}function wD(...e){CD.warn(...e)}function Mn(e){return typeof e=="undefined"}function _t(e){return!Mn(e)}function HE(e){return typeof e=="function"}function vn(e){return typeof e=="number"}function di(e){return Object.prototype.toString.call(e)==="[object Object]"&&e.constructor===Object}function BD(e){return typeof e=="boolean"}function Un(e){return Array.isArray(e)}function Hn(e){return typeof e=="string"}function eo(e){return Hn(e)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(e)}function XE(e){return new TE(e)}function $E(e,t,n){return new ZE(e,t,n)}const As=typeof self=="object"?self:null,tP=As&&(As.hasOwnProperty("AudioContext")||As.hasOwnProperty("webkitAudioContext"));function eP(e,t,n){return Ut(_t(mh),"This node only works in a secure context (https or localhost)"),new mh(e,t,n)}function _n(e,t,n,s){var i=arguments.length,r=i<3?t:s===null?s=Object.getOwnPropertyDescriptor(t,n):s,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(e,t,n,s);else for(var o=e.length-1;o>=0;o--)(a=e[o])&&(r=(i<3?a(r):i>3?a(t,n,r):a(t,n))||r);return i>3&&r&&Object.defineProperty(t,n,r),r}function fe(e,t,n,s){function i(r){return r instanceof n?r:new n(function(a){a(r)})}return new(n||(n=Promise))(function(r,a){function o(u){try{l(s.next(u))}catch(c){a(c)}}function A(u){try{l(s.throw(u))}catch(c){a(c)}}function l(u){u.done?r(u.value):i(u.value).then(o,A)}l((s=s.apply(e,t||[])).next())})}class nP{constructor(t,n,s){this._callback=t,this._type=n,this._updateInterval=s,this._createClock()}_createWorker(){const t=new Blob([`
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval*1e3).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`],{type:"text/javascript"}),n=URL.createObjectURL(t),s=new Worker(n);s.onmessage=this._callback.bind(this),this._worker=s}_createTimeout(){this._timeout=setTimeout(()=>{this._createTimeout(),this._callback()},this._updateInterval*1e3)}_createClock(){if(this._type==="worker")try{this._createWorker()}catch{this._type="timeout",this._createClock()}else this._type==="timeout"&&this._createTimeout()}_disposeClock(){this._timeout&&(clearTimeout(this._timeout),this._timeout=0),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(t){this._updateInterval=Math.max(t,128/44100),this._type==="worker"&&this._worker.postMessage(Math.max(t*1e3,1))}get type(){return this._type}set type(t){this._disposeClock(),this._type=t,this._createClock()}dispose(){this._disposeClock()}}function Vi(e){return LE(e)}function bs(e){return JE(e)}function Do(e){return zE(e)}function Yi(e){return KE(e)}function kD(e){return e instanceof AudioBuffer}function sP(e,t){return e==="value"||Vi(t)||bs(t)||kD(t)}function $i(e,...t){if(!t.length)return e;const n=t.shift();if(di(e)&&di(n))for(const s in n)sP(s,n[s])?e[s]=n[s]:di(n[s])?(e[s]||Object.assign(e,{[s]:{}}),$i(e[s],n[s])):Object.assign(e,{[s]:n[s]});return $i(e,...t)}function iP(e,t){return e.length===t.length&&e.every((n,s)=>t[s]===n)}function it(e,t,n=[],s){const i={},r=Array.from(t);if(di(r[0])&&s&&!Reflect.has(r[0],s)&&(Object.keys(r[0]).some(o=>Reflect.has(e,o))||($i(i,{[s]:r[0]}),n.splice(n.indexOf(s),1),r.shift())),r.length===1&&di(r[0]))$i(i,r[0]);else for(let a=0;a<n.length;a++)_t(r[a])&&(i[n[a]]=r[a]);return $i(e,i)}function rP(e){return e.constructor.getDefaults()}function Di(e,t){return Mn(e)?t:e}function Nh(e,t){return t.forEach(n=>{Reflect.has(e,n)&&delete e[n]}),e}/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2019 Yotam Mann
 */class fs{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...t){(this.debug||As&&this.toString()===As.TONE_DEBUG_CLASS)&&jE(this,...t)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}}fs.version=Qd;const Wu=1e-6;function Go(e,t){return e>t+Wu}function al(e,t){return Go(e,t)||In(e,t)}function TD(e,t){return e+Wu<t}function In(e,t){return Math.abs(e-t)<Wu}function aP(e,t,n){return Math.max(Math.min(e,n),t)}class es extends fs{constructor(){super(),this.name="Timeline",this._timeline=[];const t=it(es.getDefaults(),arguments,["memory"]);this.memory=t.memory,this.increasing=t.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(t){if(Ut(Reflect.has(t,"time"),"Timeline: events must have a time attribute"),t.time=t.time.valueOf(),this.increasing&&this.length){const n=this._timeline[this.length-1];Ut(al(t.time,n.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(t)}else{const n=this._search(t.time);this._timeline.splice(n+1,0,t)}if(this.length>this.memory){const n=this.length-this.memory;this._timeline.splice(0,n)}return this}remove(t){const n=this._timeline.indexOf(t);return n!==-1&&this._timeline.splice(n,1),this}get(t,n="time"){const s=this._search(t,n);return s!==-1?this._timeline[s]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(t,n="time"){const s=this._search(t,n);return s+1<this._timeline.length?this._timeline[s+1]:null}getBefore(t){const n=this._timeline.length;if(n>0&&this._timeline[n-1].time<t)return this._timeline[n-1];const s=this._search(t);return s-1>=0?this._timeline[s-1]:null}cancel(t){if(this._timeline.length>1){let n=this._search(t);if(n>=0)if(In(this._timeline[n].time,t)){for(let s=n;s>=0&&In(this._timeline[s].time,t);s--)n=s;this._timeline=this._timeline.slice(0,n)}else this._timeline=this._timeline.slice(0,n+1);else this._timeline=[]}else this._timeline.length===1&&al(this._timeline[0].time,t)&&(this._timeline=[]);return this}cancelBefore(t){const n=this._search(t);return n>=0&&(this._timeline=this._timeline.slice(n+1)),this}previousEvent(t){const n=this._timeline.indexOf(t);return n>0?this._timeline[n-1]:null}_search(t,n="time"){if(this._timeline.length===0)return-1;let s=0;const i=this._timeline.length;let r=i;if(i>0&&this._timeline[i-1][n]<=t)return i-1;for(;s<r;){let a=Math.floor(s+(r-s)/2);const o=this._timeline[a],A=this._timeline[a+1];if(In(o[n],t)){for(let l=a;l<this._timeline.length;l++){const u=this._timeline[l];if(In(u[n],t))a=l;else break}return a}else{if(TD(o[n],t)&&Go(A[n],t))return a;Go(o[n],t)?r=a:s=a+1}}return-1}_iterate(t,n=0,s=this._timeline.length-1){this._timeline.slice(n,s+1).forEach(t)}forEach(t){return this._iterate(t),this}forEachBefore(t,n){const s=this._search(t);return s!==-1&&this._iterate(n,0,s),this}forEachAfter(t,n){const s=this._search(t);return this._iterate(n,s+1),this}forEachBetween(t,n,s){let i=this._search(t),r=this._search(n);return i!==-1&&r!==-1?(this._timeline[i].time!==t&&(i+=1),this._timeline[r].time===n&&(r-=1),this._iterate(s,i,r)):i===-1&&this._iterate(s,0,r),this}forEachFrom(t,n){let s=this._search(t);for(;s>=0&&this._timeline[s].time>=t;)s--;return this._iterate(n,s+1),this}forEachAtTime(t,n){const s=this._search(t);if(s!==-1&&In(this._timeline[s].time,t)){let i=s;for(let r=s;r>=0&&In(this._timeline[r].time,t);r--)i=r;this._iterate(r=>{n(r)},i,s)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const bD=[];function TA(e){bD.push(e)}function oP(e){bD.forEach(t=>t(e))}const UD=[];function bA(e){UD.push(e)}function AP(e){UD.forEach(t=>t(e))}class ba extends fs{constructor(){super(...arguments),this.name="Emitter"}on(t,n){return t.split(/\W+/).forEach(i=>{Mn(this._events)&&(this._events={}),this._events.hasOwnProperty(i)||(this._events[i]=[]),this._events[i].push(n)}),this}once(t,n){const s=(...i)=>{n(...i),this.off(t,s)};return this.on(t,s),this}off(t,n){return t.split(/\W+/).forEach(i=>{if(Mn(this._events)&&(this._events={}),this._events.hasOwnProperty(t))if(Mn(n))this._events[t]=[];else{const r=this._events[t];for(let a=r.length-1;a>=0;a--)r[a]===n&&r.splice(a,1)}}),this}emit(t,...n){if(this._events&&this._events.hasOwnProperty(t)){const s=this._events[t].slice(0);for(let i=0,r=s.length;i<r;i++)s[i].apply(this,n)}return this}static mixin(t){["on","once","off","emit"].forEach(n=>{const s=Object.getOwnPropertyDescriptor(ba.prototype,n);Object.defineProperty(t.prototype,n,s)})}dispose(){return super.dispose(),this._events=void 0,this}}class QD extends ba{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class Ua extends QD{constructor(){super(),this.name="Context",this._constants=new Map,this._timeouts=new es,this._timeoutIds=0,this._initialized=!1,this.isOffline=!1,this._workletModules=new Map;const t=it(Ua.getDefaults(),arguments,["context"]);t.context?this._context=t.context:this._context=XE({latencyHint:t.latencyHint}),this._ticker=new nP(this.emit.bind(this,"tick"),t.clockSource,t.updateInterval),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this._setLatencyHint(t.latencyHint),this.lookAhead=t.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){return this._initialized||(oP(this),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(t,n,s){return this._context.createBuffer(t,n,s)}createChannelMerger(t){return this._context.createChannelMerger(t)}createChannelSplitter(t){return this._context.createChannelSplitter(t)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(t){return this._context.createDelay(t)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(t,n){return this._context.createIIRFilter(t,n)}createPanner(){return this._context.createPanner()}createPeriodicWave(t,n,s){return this._context.createPeriodicWave(t,n,s)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(t){return Ut(Yi(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(t)}createMediaElementSource(t){return Ut(Yi(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(t)}createMediaStreamDestination(){return Ut(Yi(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(t){return this._context.decodeAudioData(t)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(t){Ut(!this._initialized,"The listener cannot be set after initialization."),this._listener=t}get transport(){return this.initialize(),this._transport}set transport(t){Ut(!this._initialized,"The transport cannot be set after initialization."),this._transport=t}get draw(){return this.initialize(),this._draw}set draw(t){Ut(!this._initialized,"Draw cannot be set after initialization."),this._draw=t}get destination(){return this.initialize(),this._destination}set destination(t){Ut(!this._initialized,"The destination cannot be set after initialization."),this._destination=t}createAudioWorkletNode(t,n){return eP(this.rawContext,t,n)}addAudioWorkletModule(t,n){return fe(this,void 0,void 0,function*(){Ut(_t(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletModules.has(n)||this._workletModules.set(n,this.rawContext.audioWorklet.addModule(t)),yield this._workletModules.get(n)})}workletsAreReady(){return fe(this,void 0,void 0,function*(){const t=[];this._workletModules.forEach(n=>t.push(n)),yield Promise.all(t)})}get updateInterval(){return this._ticker.updateInterval}set updateInterval(t){this._ticker.updateInterval=t}get clockSource(){return this._ticker.type}set clockSource(t){this._ticker.type=t}get latencyHint(){return this._latencyHint}_setLatencyHint(t){let n=0;if(this._latencyHint=t,Hn(t))switch(t){case"interactive":n=.1;break;case"playback":n=.5;break;case"balanced":n=.25;break}this.lookAhead=n,this.updateInterval=n/2}get rawContext(){return this._context}now(){return this._context.currentTime+this.lookAhead}immediate(){return this._context.currentTime}resume(){return Yi(this._context)?this._context.resume():Promise.resolve()}close(){return fe(this,void 0,void 0,function*(){Yi(this._context)&&(yield this._context.close()),this._initialized&&AP(this)})}getConstant(t){if(this._constants.has(t))return this._constants.get(t);{const n=this._context.createBuffer(1,128,this._context.sampleRate),s=n.getChannelData(0);for(let r=0;r<s.length;r++)s[r]=t;const i=this._context.createBufferSource();return i.channelCount=1,i.channelCountMode="explicit",i.buffer=n,i.loop=!0,i.start(0),this._constants.set(t,i),i}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map(t=>this._constants[t].disconnect()),this}_timeoutLoop(){const t=this.now();let n=this._timeouts.peek();for(;this._timeouts.length&&n&&n.time<=t;)n.callback(),this._timeouts.shift(),n=this._timeouts.peek()}setTimeout(t,n){this._timeoutIds++;const s=this.now();return this._timeouts.add({callback:t,id:this._timeoutIds,time:s+n}),this._timeoutIds}clearTimeout(t){return this._timeouts.forEach(n=>{n.id===t&&this._timeouts.remove(n)}),this}clearInterval(t){return this.clearTimeout(t)}setInterval(t,n){const s=++this._timeoutIds,i=()=>{const r=this.now();this._timeouts.add({callback:()=>{t(),i()},id:s,time:r+n})};return i(),s}}class cP extends QD{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(t,n,s){return{}}createChannelMerger(t){return{}}createChannelSplitter(t){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(t){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(t,n){return{}}createPanner(){return{}}createPeriodicWave(t,n,s){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(t){return{}}createMediaElementSource(t){return{}}createMediaStreamDestination(){return{}}decodeAudioData(t){return Promise.resolve({})}createAudioWorkletNode(t,n){return{}}get rawContext(){return{}}addAudioWorkletModule(t,n){return fe(this,void 0,void 0,function*(){return Promise.resolve()})}resume(){return Promise.resolve()}setTimeout(t,n){return 0}clearTimeout(t){return this}setInterval(t,n){return 0}clearInterval(t){return this}getConstant(t){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(t){}get destination(){return{}}set destination(t){}now(){return 0}immediate(){return 0}}function zt(e,t){Un(t)?t.forEach(n=>zt(e,n)):Object.defineProperty(e,t,{enumerable:!0,writable:!1})}function Eu(e,t){Un(t)?t.forEach(n=>Eu(e,n)):Object.defineProperty(e,t,{writable:!0})}const se=()=>{};class le extends fs{constructor(){super(),this.name="ToneAudioBuffer",this.onload=se;const t=it(le.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=t.reverse,this.onload=t.onload,t.url&&kD(t.url)||t.url instanceof le?this.set(t.url):Hn(t.url)&&this.load(t.url).catch(t.onerror)}static getDefaults(){return{onerror:se,onload:se,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:cn().sampleRate}set(t){return t instanceof le?t.loaded?this._buffer=t.get():t.onload=()=>{this.set(t),this.onload(this)}:this._buffer=t,this._reversed&&this._reverse(),this}get(){return this._buffer}load(t){return fe(this,void 0,void 0,function*(){const n=le.load(t).then(s=>{this.set(s),this.onload(this)});le.downloads.push(n);try{yield n}finally{const s=le.downloads.indexOf(n);le.downloads.splice(s,1)}return this})}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(t){const n=Un(t)&&t[0].length>0,s=n?t.length:1,i=n?t[0].length:t.length,r=cn(),a=r.createBuffer(s,i,r.sampleRate),o=!n&&s===1?[t]:t;for(let A=0;A<s;A++)a.copyToChannel(o[A],A);return this._buffer=a,this}toMono(t){if(vn(t))this.fromArray(this.toArray(t));else{let n=new Float32Array(this.length);const s=this.numberOfChannels;for(let i=0;i<s;i++){const r=this.toArray(i);for(let a=0;a<r.length;a++)n[a]+=r[a]}n=n.map(i=>i/s),this.fromArray(n)}return this}toArray(t){if(vn(t))return this.getChannelData(t);if(this.numberOfChannels===1)return this.toArray(0);{const n=[];for(let s=0;s<this.numberOfChannels;s++)n[s]=this.getChannelData(s);return n}}getChannelData(t){return this._buffer?this._buffer.getChannelData(t):new Float32Array(0)}slice(t,n=this.duration){const s=Math.floor(t*this.sampleRate),i=Math.floor(n*this.sampleRate);Ut(s<i,"The start time must be less than the end time");const r=i-s,a=cn().createBuffer(this.numberOfChannels,r,this.sampleRate);for(let o=0;o<this.numberOfChannels;o++)a.copyToChannel(this.getChannelData(o).subarray(s,i),o);return new le(a)}_reverse(){if(this.loaded)for(let t=0;t<this.numberOfChannels;t++)this.getChannelData(t).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(t){this._reversed!==t&&(this._reversed=t,this._reverse())}static fromArray(t){return new le().fromArray(t)}static fromUrl(t){return fe(this,void 0,void 0,function*(){return yield new le().load(t)})}static load(t){return fe(this,void 0,void 0,function*(){const n=t.match(/\[([^\]\[]+\|.+)\]$/);if(n){const o=n[1].split("|");let A=o[0];for(const l of o)if(le.supportsType(l)){A=l;break}t=t.replace(n[0],A)}const s=le.baseUrl===""||le.baseUrl.endsWith("/")?le.baseUrl:le.baseUrl+"/",i=yield fetch(s+t);if(!i.ok)throw new Error(`could not load url: ${t}`);const r=yield i.arrayBuffer();return yield cn().decodeAudioData(r)})}static supportsType(t){const n=t.split("."),s=n[n.length-1];return document.createElement("audio").canPlayType("audio/"+s)!==""}static loaded(){return fe(this,void 0,void 0,function*(){for(yield Promise.resolve();le.downloads.length;)yield le.downloads[0]})}}le.baseUrl="";le.downloads=[];class Pu extends Ua{constructor(){super({clockSource:"offline",context:Do(arguments[0])?arguments[0]:$E(arguments[0],arguments[1]*arguments[2],arguments[2]),lookAhead:0,updateInterval:Do(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=Do(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(t){return fe(this,void 0,void 0,function*(){let n=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,n++;const s=Math.floor(this.sampleRate/128);t&&n%s===0&&(yield new Promise(i=>setTimeout(i,1)))}})}render(t=!0){return fe(this,void 0,void 0,function*(){yield this.workletsAreReady(),yield this._renderClock(t);const n=yield this._context.startRendering();return new le(n)})}close(){return Promise.resolve()}}const vD=new cP;let tr=vD;function cn(){return tr===vD&&tP&&lP(new Ua),tr}function lP(e){Yi(e)?tr=new Ua(e):Do(e)?tr=new Pu(e):tr=e}function uP(){return tr.resume()}if(As&&!As.TONE_SILENCE_LOGGING){const t=` * Tone.js v${Qd} * `;console.log(`%c${t}`,"background: #000; color: #fff")}function qP(e){return Math.pow(10,e/20)}function hP(e){return 20*(Math.log(e)/Math.LN10)}function RD(e){return Math.pow(2,e/12)}let UA=440;function pP(){return UA}function dP(e){UA=e}function ol(e){return Math.round(YD(e))}function YD(e){return 69+12*Math.log2(e/UA)}function DP(e){return UA*Math.pow(2,(e-69)/12)}class Iu extends fs{constructor(t,n,s){super(),this.defaultUnits="s",this._val=n,this._units=s,this.context=t,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:t=>this._frequencyToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:t=>this._ticksToUnits(parseInt(t,10)),regexp:/^(\d+)i$/i},m:{method:t=>this._beatsToUnits(parseInt(t,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(t,n)=>{const s=parseInt(t,10),i=n==="."?1.5:1;return s===1?this._beatsToUnits(this._getTimeSignature())*i:this._beatsToUnits(4/s)*i},regexp:/^(\d+)n(\.?)$/i},number:{method:t=>this._expressions[this.defaultUnits].method.call(this,t),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:t=>this._secondsToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:t=>parseInt(t,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:t=>{const n=parseInt(t,10);return this._beatsToUnits(8/(Math.floor(n)*3))},regexp:/^(\d+)t$/i},tr:{method:(t,n,s)=>{let i=0;return t&&t!=="0"&&(i+=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),n&&n!=="0"&&(i+=this._beatsToUnits(parseFloat(n))),s&&s!=="0"&&(i+=this._beatsToUnits(parseFloat(s)/4)),i},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof Iu&&this.fromType(this._val),Mn(this._val))return this._noArg();if(Hn(this._val)&&Mn(this._units)){for(const t in this._expressions)if(this._expressions[t].regexp.test(this._val.trim())){this._units=t;break}}else if(di(this._val)){let t=0;for(const n in this._val)if(_t(this._val[n])){const s=this._val[n];t+=new this.constructor(this.context,n).valueOf()*s}return t}if(_t(this._units)){const t=this._expressions[this._units],n=this._val.toString().trim().match(t.regexp);return n?t.method.apply(this,n.slice(1)):t.method.call(this,this._val)}else return Hn(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(t){return 1/t}_beatsToUnits(t){return 60/this._getBpm()*t}_secondsToUnits(t){return t}_ticksToUnits(t){return t*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(t){switch(this._units=void 0,this.defaultUnits){case"s":this._val=t.toSeconds();break;case"i":this._val=t.toTicks();break;case"hz":this._val=t.toFrequency();break;case"midi":this._val=t.toMidi();break}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return this.toSeconds()*1e3}}class Bn extends Iu{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:t=>this._now()+new this.constructor(this.context,t).valueOf(),regexp:/^\+(.+)/},quantize:{method:t=>{const n=new Bn(this.context,t).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(n))},regexp:/^@(.+)/}})}quantize(t,n=1){const s=new this.constructor(this.context,t).valueOf(),i=this.valueOf(),o=Math.round(i/s)*s-i;return i+o*n}toNotation(){const t=this.toSeconds(),n=["1m"];for(let r=1;r<9;r++){const a=Math.pow(2,r);n.push(a+"n."),n.push(a+"n"),n.push(a+"t")}n.push("0");let s=n[0],i=new Bn(this.context,n[0]).toSeconds();return n.forEach(r=>{const a=new Bn(this.context,r).toSeconds();Math.abs(a-t)<Math.abs(i-t)&&(s=r,i=a)}),s}toBarsBeatsSixteenths(){const t=this._beatsToUnits(1);let n=this.valueOf()/t;n=parseFloat(n.toFixed(4));const s=Math.floor(n/this._getTimeSignature());let i=n%1*4;n=Math.floor(n)%this._getTimeSignature();const r=i.toString();return r.length>3&&(i=parseFloat(parseFloat(r).toFixed(3))),[s,n,i].join(":")}toTicks(){const t=this._beatsToUnits(1),n=this.valueOf()/t;return Math.round(n*this._getPPQ())}toSeconds(){return this.valueOf()}toMidi(){return ol(this.toFrequency())}_now(){return this.context.now()}}class Vn extends Bn{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return pP()}static set A4(t){dP(t)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(t){return this.defaultUnits==="midi"?t:Vn.mtof(t)}},note:{regexp:/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,method(t,n){const i=gP[t.toLowerCase()]+(parseInt(n,10)+1)*12;return this.defaultUnits==="midi"?i:Vn.mtof(i)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(t,n,s){let i=1;return t&&t!=="0"&&(i*=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),n&&n!=="0"&&(i*=this._beatsToUnits(parseFloat(n))),s&&s!=="0"&&(i*=this._beatsToUnits(parseFloat(s)/4)),i}}})}transpose(t){return new Vn(this.context,this.valueOf()*RD(t))}harmonize(t){return t.map(n=>this.transpose(n))}toMidi(){return ol(this.valueOf())}toNote(){const t=this.toFrequency(),n=Math.log2(t/Vn.A4);let s=Math.round(12*n)+57;const i=Math.floor(s/12);return i<0&&(s+=-12*i),fP[s%12]+i.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const t=this._beatsToUnits(1),n=this.valueOf()/t;return Math.floor(n*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(t){return t}_ticksToUnits(t){return 1/(t*60/(this._getBpm()*this._getPPQ()))}_beatsToUnits(t){return 1/super._beatsToUnits(t)}_secondsToUnits(t){return 1/t}static mtof(t){return DP(t)}static ftom(t){return ol(t)}}const gP={cbb:-2,cb:-1,c:0,"c#":1,cx:2,dbb:0,db:1,d:2,"d#":3,dx:4,ebb:2,eb:3,e:4,"e#":5,ex:6,fbb:3,fb:4,f:5,"f#":6,fx:7,gbb:5,gb:6,g:7,"g#":8,gx:9,abb:7,ab:8,a:9,"a#":10,ax:11,bbb:9,bb:10,b:11,"b#":12,bx:13},fP=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];class er extends Bn{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}function mP(e,t){return new er(cn(),e,t)}class Ye extends fs{constructor(){super();const t=it(Ye.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=t.context}static getDefaults(){return{context:cn()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(t){return new Bn(this.context,t).toSeconds()}toFrequency(t){return new Vn(this.context,t).toFrequency()}toTicks(t){return new er(this.context,t).toTicks()}_getPartialProperties(t){const n=this.get();return Object.keys(n).forEach(s=>{Mn(t[s])&&delete n[s]}),n}get(){const t=rP(this);return Object.keys(t).forEach(n=>{if(Reflect.has(this,n)){const s=this[n];_t(s)&&_t(s.value)&&_t(s.setValueAtTime)?t[n]=s.value:s instanceof Ye?t[n]=s._getPartialProperties(t[n]):Un(s)||vn(s)||Hn(s)||BD(s)?t[n]=s:delete t[n]}}),t}set(t){return Object.keys(t).forEach(n=>{Reflect.has(this,n)&&_t(this[n])&&(this[n]&&_t(this[n].value)&&_t(this[n].setValueAtTime)?this[n].value!==t[n]&&(this[n].value=t[n]):this[n]instanceof Ye?this[n].set(t[n]):this[n]=t[n])}),this}}class QA extends es{constructor(t="stopped"){super(),this.name="StateTimeline",this._initial=t,this.setStateAtTime(this._initial,0)}getValueAtTime(t){const n=this.get(t);return n!==null?n.state:this._initial}setStateAtTime(t,n,s){return Ks(n,0),this.add(Object.assign({},s,{state:t,time:n})),this}getLastState(t,n){const s=this._search(n);for(let i=s;i>=0;i--){const r=this._timeline[i];if(r.state===t)return r}}getNextState(t,n){const s=this._search(n);if(s!==-1)for(let i=s;i<this._timeline.length;i++){const r=this._timeline[i];if(r.state===t)return r}}}class Jt extends Ye{constructor(){super(it(Jt.getDefaults(),arguments,["param","units","convert"])),this.name="Param",this.overridden=!1,this._minOutput=1e-7;const t=it(Jt.getDefaults(),arguments,["param","units","convert"]);for(Ut(_t(t.param)&&(Vi(t.param)||t.param instanceof Jt),"param must be an AudioParam");!Vi(t.param);)t.param=t.param._param;this._swappable=_t(t.swappable)?t.swappable:!1,this._swappable?(this.input=this.context.createGain(),this._param=t.param,this.input.connect(this._param)):this._param=this.input=t.param,this._events=new es(1e3),this._initialValue=this._param.defaultValue,this.units=t.units,this.convert=t.convert,this._minValue=t.minValue,this._maxValue=t.maxValue,_t(t.value)&&t.value!==this._toType(this._initialValue)&&this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(Ye.getDefaults(),{convert:!0,units:"number"})}get value(){const t=this.now();return this.getValueAtTime(t)}set value(t){this.cancelScheduledValues(this.now()),this.setValueAtTime(t,this.now())}get minValue(){return _t(this._minValue)?this._minValue:this.units==="time"||this.units==="frequency"||this.units==="normalRange"||this.units==="positive"||this.units==="transportTime"||this.units==="ticks"||this.units==="bpm"||this.units==="hertz"||this.units==="samples"?0:this.units==="audioRange"?-1:this.units==="decibels"?-1/0:this._param.minValue}get maxValue(){return _t(this._maxValue)?this._maxValue:this.units==="normalRange"||this.units==="audioRange"?1:this._param.maxValue}_is(t,n){return this.units===n}_assertRange(t){return _t(this.maxValue)&&_t(this.minValue)&&Ks(t,this._fromType(this.minValue),this._fromType(this.maxValue)),t}_fromType(t){return this.convert&&!this.overridden?this._is(t,"time")?this.toSeconds(t):this._is(t,"decibels")?qP(t):this._is(t,"frequency")?this.toFrequency(t):t:this.overridden?0:t}_toType(t){return this.convert&&this.units==="decibels"?hP(t):t}setValueAtTime(t,n){const s=this.toSeconds(n),i=this._fromType(t);return Ut(isFinite(i)&&isFinite(s),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(n)}`),this._assertRange(i),this.log(this.units,"setValueAtTime",t,s),this._events.add({time:s,type:"setValueAtTime",value:i}),this._param.setValueAtTime(i,s),this}getValueAtTime(t){const n=Math.max(this.toSeconds(t),0),s=this._events.getAfter(n),i=this._events.get(n);let r=this._initialValue;if(i===null)r=this._initialValue;else if(i.type==="setTargetAtTime"&&(s===null||s.type==="setValueAtTime")){const a=this._events.getBefore(i.time);let o;a===null?o=this._initialValue:o=a.value,i.type==="setTargetAtTime"&&(r=this._exponentialApproach(i.time,o,i.value,i.constant,n))}else if(s===null)r=i.value;else if(s.type==="linearRampToValueAtTime"||s.type==="exponentialRampToValueAtTime"){let a=i.value;if(i.type==="setTargetAtTime"){const o=this._events.getBefore(i.time);o===null?a=this._initialValue:a=o.value}s.type==="linearRampToValueAtTime"?r=this._linearInterpolate(i.time,a,s.time,s.value,n):r=this._exponentialInterpolate(i.time,a,s.time,s.value,n)}else r=i.value;return this._toType(r)}setRampPoint(t){t=this.toSeconds(t);let n=this.getValueAtTime(t);return this.cancelAndHoldAtTime(t),this._fromType(n)===0&&(n=this._toType(this._minOutput)),this.setValueAtTime(n,t),this}linearRampToValueAtTime(t,n){const s=this._fromType(t),i=this.toSeconds(n);return Ut(isFinite(s)&&isFinite(i),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(n)}`),this._assertRange(s),this._events.add({time:i,type:"linearRampToValueAtTime",value:s}),this.log(this.units,"linearRampToValueAtTime",t,i),this._param.linearRampToValueAtTime(s,i),this}exponentialRampToValueAtTime(t,n){let s=this._fromType(t);s=In(s,0)?this._minOutput:s,this._assertRange(s);const i=this.toSeconds(n);return Ut(isFinite(s)&&isFinite(i),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(n)}`),this._events.add({time:i,type:"exponentialRampToValueAtTime",value:s}),this.log(this.units,"exponentialRampToValueAtTime",t,i),this._param.exponentialRampToValueAtTime(s,i),this}exponentialRampTo(t,n,s){return s=this.toSeconds(s),this.setRampPoint(s),this.exponentialRampToValueAtTime(t,s+this.toSeconds(n)),this}linearRampTo(t,n,s){return s=this.toSeconds(s),this.setRampPoint(s),this.linearRampToValueAtTime(t,s+this.toSeconds(n)),this}targetRampTo(t,n,s){return s=this.toSeconds(s),this.setRampPoint(s),this.exponentialApproachValueAtTime(t,s,n),this}exponentialApproachValueAtTime(t,n,s){n=this.toSeconds(n),s=this.toSeconds(s);const i=Math.log(s+1)/Math.log(200);return this.setTargetAtTime(t,n,i),this.cancelAndHoldAtTime(n+s*.9),this.linearRampToValueAtTime(t,n+s),this}setTargetAtTime(t,n,s){const i=this._fromType(t);Ut(isFinite(s)&&s>0,"timeConstant must be a number greater than 0");const r=this.toSeconds(n);return this._assertRange(i),Ut(isFinite(i)&&isFinite(r),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(t)}, ${JSON.stringify(n)}`),this._events.add({constant:s,time:r,type:"setTargetAtTime",value:i}),this.log(this.units,"setTargetAtTime",t,r,s),this._param.setTargetAtTime(i,r,s),this}setValueCurveAtTime(t,n,s,i=1){s=this.toSeconds(s),n=this.toSeconds(n);const r=this._fromType(t[0])*i;this.setValueAtTime(this._toType(r),n);const a=s/(t.length-1);for(let o=1;o<t.length;o++){const A=this._fromType(t[o])*i;this.linearRampToValueAtTime(this._toType(A),n+o*a)}return this}cancelScheduledValues(t){const n=this.toSeconds(t);return Ut(isFinite(n),`Invalid argument to cancelScheduledValues: ${JSON.stringify(t)}`),this._events.cancel(n),this._param.cancelScheduledValues(n),this.log(this.units,"cancelScheduledValues",n),this}cancelAndHoldAtTime(t){const n=this.toSeconds(t),s=this._fromType(this.getValueAtTime(n));Ut(isFinite(n),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(t)}`),this.log(this.units,"cancelAndHoldAtTime",n,"value="+s);const i=this._events.get(n),r=this._events.getAfter(n);return i&&In(i.time,n)?r?(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time)):(this._param.cancelAndHoldAtTime(n),this._events.cancel(n+this.sampleTime)):r&&(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time),r.type==="linearRampToValueAtTime"?this.linearRampToValueAtTime(this._toType(s),n):r.type==="exponentialRampToValueAtTime"&&this.exponentialRampToValueAtTime(this._toType(s),n)),this._events.add({time:n,type:"setValueAtTime",value:s}),this._param.setValueAtTime(s,n),this}rampTo(t,n=.1,s){return this.units==="frequency"||this.units==="bpm"||this.units==="decibels"?this.exponentialRampTo(t,n,s):this.linearRampTo(t,n,s),this}apply(t){const n=this.context.currentTime;t.setValueAtTime(this.getValueAtTime(n),n);const s=this._events.get(n);if(s&&s.type==="setTargetAtTime"){const i=this._events.getAfter(s.time),r=i?i.time:n+2,a=(r-n)/10;for(let o=n;o<r;o+=a)t.linearRampToValueAtTime(this.getValueAtTime(o),o)}return this._events.forEachAfter(this.context.currentTime,i=>{i.type==="cancelScheduledValues"?t.cancelScheduledValues(i.time):i.type==="setTargetAtTime"?t.setTargetAtTime(i.value,i.time,i.constant):t[i.type](i.value,i.time)}),this}setParam(t){Ut(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const n=this.input;return n.disconnect(this._param),this.apply(t),this._param=t,n.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(t,n,s,i,r){return s+(n-s)*Math.exp(-(r-t)/i)}_linearInterpolate(t,n,s,i,r){return n+(i-n)*((r-t)/(s-t))}_exponentialInterpolate(t,n,s,i,r){return n*Math.pow(i/n,(r-t)/(s-t))}}class Ct extends Ye{constructor(){super(...arguments),this.name="ToneAudioNode",this._internalChannels=[]}get numberOfInputs(){return _t(this.input)?Vi(this.input)||this.input instanceof Jt?1:this.input.numberOfInputs:0}get numberOfOutputs(){return _t(this.output)?this.output.numberOfOutputs:0}_isAudioNode(t){return _t(t)&&(t instanceof Ct||bs(t))}_getInternalNodes(){const t=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&t.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&t.push(this.output),t}_setChannelProperties(t){this._getInternalNodes().forEach(s=>{s.channelCount=t.channelCount,s.channelCountMode=t.channelCountMode,s.channelInterpretation=t.channelInterpretation})}_getChannelProperties(){const t=this._getInternalNodes();Ut(t.length>0,"ToneAudioNode does not have any internal nodes");const n=t[0];return{channelCount:n.channelCount,channelCountMode:n.channelCountMode,channelInterpretation:n.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(t){const n=this._getChannelProperties();this._setChannelProperties(Object.assign(n,{channelCount:t}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(t){const n=this._getChannelProperties();this._setChannelProperties(Object.assign(n,{channelCountMode:t}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(t){const n=this._getChannelProperties();this._setChannelProperties(Object.assign(n,{channelInterpretation:t}))}connect(t,n=0,s=0){return yn(this,t,n,s),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return wD("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(t,n=0,s=0){return GD(this,t,n,s),this}chain(...t){return Mi(this,...t),this}fan(...t){return t.forEach(n=>this.connect(n)),this}dispose(){return super.dispose(),_t(this.input)&&(this.input instanceof Ct?this.input.dispose():bs(this.input)&&this.input.disconnect()),_t(this.output)&&(this.output instanceof Ct?this.output.dispose():bs(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function Mi(...e){const t=e.shift();e.reduce((n,s)=>(n instanceof Ct?n.connect(s):bs(n)&&yn(n,s),s),t)}function yn(e,t,n=0,s=0){for(Ut(_t(e),"Cannot connect from undefined node"),Ut(_t(t),"Cannot connect to undefined node"),(t instanceof Ct||bs(t))&&Ut(t.numberOfInputs>0,"Cannot connect to node with no inputs"),Ut(e.numberOfOutputs>0,"Cannot connect from node with no outputs");t instanceof Ct||t instanceof Jt;)_t(t.input)&&(t=t.input);for(;e instanceof Ct;)_t(e.output)&&(e=e.output);Vi(t)?e.connect(t,n):e.connect(t,n,s)}function GD(e,t,n=0,s=0){if(_t(t))for(;t instanceof Ct;)t=t.input;for(;!bs(e);)_t(e.output)&&(e=e.output);Vi(t)?e.disconnect(t,n):bs(t)?e.disconnect(t,n,s):e.disconnect()}class jt extends Ct{constructor(){super(it(jt.getDefaults(),arguments,["gain","units"])),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode;const t=it(jt.getDefaults(),arguments,["gain","units"]);this.gain=new Jt({context:this.context,convert:t.convert,param:this._gainNode.gain,units:t.units,value:t.gain,minValue:t.minValue,maxValue:t.maxValue}),zt(this,"gain")}static getDefaults(){return Object.assign(Ct.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class Ar extends Ct{constructor(t){super(t),this.onended=se,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new jt({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(n){const s=this.toSeconds(n);return this._startTime!==-1&&s>=this._startTime&&(this._stopTime===-1||s<=this._stopTime)?"started":"stopped"},this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut,this._curve=t.curve,this.onended=t.onended}static getDefaults(){return Object.assign(Ct.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:se})}_startGain(t,n=1){Ut(this._startTime===-1,"Source cannot be started more than once");const s=this.toSeconds(this._fadeIn);return this._startTime=t+s,this._startTime=Math.max(this._startTime,this.context.currentTime),s>0?(this._gainNode.gain.setValueAtTime(0,t),this._curve==="linear"?this._gainNode.gain.linearRampToValueAtTime(n,t+s):this._gainNode.gain.exponentialApproachValueAtTime(n,t,s)):this._gainNode.gain.setValueAtTime(n,t),this}stop(t){return this.log("stop",t),this._stopGain(this.toSeconds(t)),this}_stopGain(t){Ut(this._startTime!==-1,"'start' must be called before 'stop'"),this.cancelStop();const n=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(t)+n,this._stopTime=Math.max(this._stopTime,this.context.currentTime),n>0?this._curve==="linear"?this._gainNode.gain.linearRampTo(0,n,t):this._gainNode.gain.targetRampTo(0,n,t):(this._gainNode.gain.cancelAndHoldAtTime(t),this._gainNode.gain.setValueAtTime(0,t)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout(()=>{const s=this._curve==="exponential"?n*2:0;this._stopSource(this.now()+s),this._onended()},this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==se&&(this.onended(this),this.onended=se,!this.context.isOffline)){const t=()=>this.dispose();typeof window.requestIdleCallback!="undefined"?window.requestIdleCallback(t):setTimeout(t,1e3)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),Ut(this._startTime!==-1,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.disconnect(),this}}class _o extends Ar{constructor(){super(it(_o.getDefaults(),arguments,["offset"])),this.name="ToneConstantSource",this._source=this.context.createConstantSource();const t=it(_o.getDefaults(),arguments,["offset"]);yn(this._source,this._gainNode),this.offset=new Jt({context:this.context,convert:t.convert,param:this._source.offset,units:t.units,value:t.offset,minValue:t.minValue,maxValue:t.maxValue})}static getDefaults(){return Object.assign(Ar.getDefaults(),{convert:!0,offset:1,units:"number"})}start(t){const n=this.toSeconds(t);return this.log("start",n),this._startGain(n),this._source.start(n),this}_stopSource(t){this._source.stop(t)}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class Ht extends Ct{constructor(){super(it(Ht.getDefaults(),arguments,["value","units"])),this.name="Signal",this.override=!0;const t=it(Ht.getDefaults(),arguments,["value","units"]);this.output=this._constantSource=new _o({context:this.context,convert:t.convert,offset:t.value,units:t.units,minValue:t.minValue,maxValue:t.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(Ct.getDefaults(),{convert:!0,units:"number",value:0})}connect(t,n=0,s=0){return vA(this,t,n,s),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(t,n){return this._param.setValueAtTime(t,n),this}getValueAtTime(t){return this._param.getValueAtTime(t)}setRampPoint(t){return this._param.setRampPoint(t),this}linearRampToValueAtTime(t,n){return this._param.linearRampToValueAtTime(t,n),this}exponentialRampToValueAtTime(t,n){return this._param.exponentialRampToValueAtTime(t,n),this}exponentialRampTo(t,n,s){return this._param.exponentialRampTo(t,n,s),this}linearRampTo(t,n,s){return this._param.linearRampTo(t,n,s),this}targetRampTo(t,n,s){return this._param.targetRampTo(t,n,s),this}exponentialApproachValueAtTime(t,n,s){return this._param.exponentialApproachValueAtTime(t,n,s),this}setTargetAtTime(t,n,s){return this._param.setTargetAtTime(t,n,s),this}setValueCurveAtTime(t,n,s,i){return this._param.setValueCurveAtTime(t,n,s,i),this}cancelScheduledValues(t){return this._param.cancelScheduledValues(t),this}cancelAndHoldAtTime(t){return this._param.cancelAndHoldAtTime(t),this}rampTo(t,n,s){return this._param.rampTo(t,n,s),this}get value(){return this._param.value}set value(t){this._param.value=t}get convert(){return this._param.convert}set convert(t){this._param.convert=t}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(t){this._param.overridden=t}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(t){return this._param.apply(t),this}}function vA(e,t,n,s){(t instanceof Jt||Vi(t)||t instanceof Ht&&t.override)&&(t.cancelScheduledValues(0),t.setValueAtTime(0,0),t instanceof Ht&&(t.overridden=!0)),yn(e,t,n,s)}class xo extends Jt{constructor(){super(it(xo.getDefaults(),arguments,["value"])),this.name="TickParam",this._events=new es(1/0),this._multiplier=1;const t=it(xo.getDefaults(),arguments,["value"]);this._multiplier=t.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(t.value)}),this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(Jt.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(t,n,s){n=this.toSeconds(n),this.setRampPoint(n);const i=this._fromType(t),r=this._events.get(n),a=Math.round(Math.max(1/s,1));for(let o=0;o<=a;o++){const A=s*o+n,l=this._exponentialApproach(r.time,r.value,i,s,A);this.linearRampToValueAtTime(this._toType(l),A)}return this}setValueAtTime(t,n){const s=this.toSeconds(n);super.setValueAtTime(t,n);const i=this._events.get(s),r=this._events.previousEvent(i),a=this._getTicksUntilEvent(r,s);return i.ticks=Math.max(a,0),this}linearRampToValueAtTime(t,n){const s=this.toSeconds(n);super.linearRampToValueAtTime(t,n);const i=this._events.get(s),r=this._events.previousEvent(i),a=this._getTicksUntilEvent(r,s);return i.ticks=Math.max(a,0),this}exponentialRampToValueAtTime(t,n){n=this.toSeconds(n);const s=this._fromType(t),i=this._events.get(n),r=Math.round(Math.max((n-i.time)*10,1)),a=(n-i.time)/r;for(let o=0;o<=r;o++){const A=a*o+i.time,l=this._exponentialInterpolate(i.time,i.value,n,s,A);this.linearRampToValueAtTime(this._toType(l),A)}return this}_getTicksUntilEvent(t,n){if(t===null)t={ticks:0,time:0,type:"setValueAtTime",value:0};else if(Mn(t.ticks)){const a=this._events.previousEvent(t);t.ticks=this._getTicksUntilEvent(a,t.time)}const s=this._fromType(this.getValueAtTime(t.time));let i=this._fromType(this.getValueAtTime(n));const r=this._events.get(n);return r&&r.time===n&&r.type==="setValueAtTime"&&(i=this._fromType(this.getValueAtTime(n-this.sampleTime))),.5*(n-t.time)*(s+i)+t.ticks}getTicksAtTime(t){const n=this.toSeconds(t),s=this._events.get(n);return Math.max(this._getTicksUntilEvent(s,n),0)}getDurationOfTicks(t,n){const s=this.toSeconds(n),i=this.getTicksAtTime(n);return this.getTimeOfTick(i+t)-s}getTimeOfTick(t){const n=this._events.get(t,"ticks"),s=this._events.getAfter(t,"ticks");if(n&&n.ticks===t)return n.time;if(n&&s&&s.type==="linearRampToValueAtTime"&&n.value!==s.value){const i=this._fromType(this.getValueAtTime(n.time)),a=(this._fromType(this.getValueAtTime(s.time))-i)/(s.time-n.time),o=Math.sqrt(Math.pow(i,2)-2*a*(n.ticks-t)),A=(-i+o)/a,l=(-i-o)/a;return(A>0?A:l)+n.time}else return n?n.value===0?1/0:n.time+(t-n.ticks)/n.value:t/this._initialValue}ticksToTime(t,n){return this.getDurationOfTicks(t,n)}timeToTicks(t,n){const s=this.toSeconds(n),i=this.toSeconds(t),r=this.getTicksAtTime(s);return this.getTicksAtTime(s+i)-r}_fromType(t){return this.units==="bpm"&&this.multiplier?1/(60/t/this.multiplier):super._fromType(t)}_toType(t){return this.units==="bpm"&&this.multiplier?t/this.multiplier*60:super._toType(t)}get multiplier(){return this._multiplier}set multiplier(t){const n=this.value;this._multiplier=t,this.cancelScheduledValues(0),this.setValueAtTime(n,0)}}class Fo extends Ht{constructor(){super(it(Fo.getDefaults(),arguments,["value"])),this.name="TickSignal";const t=it(Fo.getDefaults(),arguments,["value"]);this.input=this._param=new xo({context:this.context,convert:t.convert,multiplier:t.multiplier,param:this._constantSource.offset,units:t.units,value:t.value})}static getDefaults(){return Object.assign(Ht.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(t,n){return this._param.ticksToTime(t,n)}timeToTicks(t,n){return this._param.timeToTicks(t,n)}getTimeOfTick(t){return this._param.getTimeOfTick(t)}getDurationOfTicks(t,n){return this._param.getDurationOfTicks(t,n)}getTicksAtTime(t){return this._param.getTicksAtTime(t)}get multiplier(){return this._param.multiplier}set multiplier(t){this._param.multiplier=t}dispose(){return super.dispose(),this._param.dispose(),this}}class Zo extends Ye{constructor(){super(it(Zo.getDefaults(),arguments,["frequency"])),this.name="TickSource",this._state=new QA,this._tickOffset=new es;const t=it(Zo.getDefaults(),arguments,["frequency"]);this.frequency=new Fo({context:this.context,units:t.units,value:t.frequency}),zt(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},Ye.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(t,n){const s=this.toSeconds(t);return this._state.getValueAtTime(s)!=="started"&&(this._state.setStateAtTime("started",s),_t(n)&&this.setTicksAtTime(n,s)),this}stop(t){const n=this.toSeconds(t);if(this._state.getValueAtTime(n)==="stopped"){const s=this._state.get(n);s&&s.time>0&&(this._tickOffset.cancel(s.time),this._state.cancel(s.time))}return this._state.cancel(n),this._state.setStateAtTime("stopped",n),this.setTicksAtTime(0,n),this}pause(t){const n=this.toSeconds(t);return this._state.getValueAtTime(n)==="started"&&this._state.setStateAtTime("paused",n),this}cancel(t){return t=this.toSeconds(t),this._state.cancel(t),this._tickOffset.cancel(t),this}getTicksAtTime(t){const n=this.toSeconds(t),s=this._state.getLastState("stopped",n),i={state:"paused",time:n};this._state.add(i);let r=s,a=0;return this._state.forEachBetween(s.time,n+this.sampleTime,o=>{let A=r.time;const l=this._tickOffset.get(o.time);l&&l.time>=r.time&&(a=l.ticks,A=l.time),r.state==="started"&&o.state!=="started"&&(a+=this.frequency.getTicksAtTime(o.time)-this.frequency.getTicksAtTime(A)),r=o}),this._state.remove(i),a}get ticks(){return this.getTicksAtTime(this.now())}set ticks(t){this.setTicksAtTime(t,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(t){const n=this.now(),s=this.frequency.timeToTicks(t,n);this.setTicksAtTime(s,n)}getSecondsAtTime(t){t=this.toSeconds(t);const n=this._state.getLastState("stopped",t),s={state:"paused",time:t};this._state.add(s);let i=n,r=0;return this._state.forEachBetween(n.time,t+this.sampleTime,a=>{let o=i.time;const A=this._tickOffset.get(a.time);A&&A.time>=i.time&&(r=A.seconds,o=A.time),i.state==="started"&&a.state!=="started"&&(r+=a.time-o),i=a}),this._state.remove(s),r}setTicksAtTime(t,n){return n=this.toSeconds(n),this._tickOffset.cancel(n),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(t,n),ticks:t,time:n}),this}getStateAtTime(t){return t=this.toSeconds(t),this._state.getValueAtTime(t)}getTimeOfTick(t,n=this.now()){const s=this._tickOffset.get(n),i=this._state.get(n),r=Math.max(s.time,i.time),a=this.frequency.getTicksAtTime(r)+t-s.ticks;return this.frequency.getTimeOfTick(a)}forEachTickBetween(t,n,s){let i=this._state.get(t);this._state.forEachBetween(t,n,a=>{i&&i.state==="started"&&a.state!=="started"&&this.forEachTickBetween(Math.max(i.time,t),a.time-this.sampleTime,s),i=a});let r=null;if(i&&i.state==="started"){const a=Math.max(i.time,t),o=this.frequency.getTicksAtTime(a),A=this.frequency.getTicksAtTime(i.time),l=o-A;let u=Math.ceil(l)-l;u=In(u,1)?0:u;let c=this.frequency.getTimeOfTick(o+u);for(;c<n;){try{s(c,Math.round(this.getTicksAtTime(c)))}catch(h){r=h;break}c+=this.frequency.getDurationOfTicks(1,c)}}if(r)throw r;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this.frequency.dispose(),this}}class sa extends Ye{constructor(){super(it(sa.getDefaults(),arguments,["callback","frequency"])),this.name="Clock",this.callback=se,this._lastUpdate=0,this._state=new QA("stopped"),this._boundLoop=this._loop.bind(this);const t=it(sa.getDefaults(),arguments,["callback","frequency"]);this.callback=t.callback,this._tickSource=new Zo({context:this.context,frequency:t.frequency,units:t.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,zt(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(Ye.getDefaults(),{callback:se,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(t,n){SD(this.context);const s=this.toSeconds(t);return this.log("start",s),this._state.getValueAtTime(s)!=="started"&&(this._state.setStateAtTime("started",s),this._tickSource.start(s,n),s<this._lastUpdate&&this.emit("start",s,n)),this}stop(t){const n=this.toSeconds(t);return this.log("stop",n),this._state.cancel(n),this._state.setStateAtTime("stopped",n),this._tickSource.stop(n),n<this._lastUpdate&&this.emit("stop",n),this}pause(t){const n=this.toSeconds(t);return this._state.getValueAtTime(n)==="started"&&(this._state.setStateAtTime("paused",n),this._tickSource.pause(n),n<this._lastUpdate&&this.emit("pause",n)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(t){this._tickSource.ticks=t}get seconds(){return this._tickSource.seconds}set seconds(t){this._tickSource.seconds=t}getSecondsAtTime(t){return this._tickSource.getSecondsAtTime(t)}setTicksAtTime(t,n){return this._tickSource.setTicksAtTime(t,n),this}getTimeOfTick(t,n=this.now()){return this._tickSource.getTimeOfTick(t,n)}getTicksAtTime(t){return this._tickSource.getTicksAtTime(t)}nextTickTime(t,n){const s=this.toSeconds(n),i=this.getTicksAtTime(s);return this._tickSource.getTimeOfTick(i+t,s)}_loop(){const t=this._lastUpdate,n=this.now();this._lastUpdate=n,this.log("loop",t,n),t!==n&&(this._state.forEachBetween(t,n,s=>{switch(s.state){case"started":const i=this._tickSource.getTicksAtTime(s.time);this.emit("start",s.time,i);break;case"stopped":s.time!==0&&this.emit("stop",s.time);break;case"paused":this.emit("pause",s.time);break}}),this._tickSource.forEachTickBetween(t,n,(s,i)=>{this.callback(s,i)}))}getStateAtTime(t){const n=this.toSeconds(t);return this._state.getValueAtTime(n)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}ba.mixin(sa);class ia extends Ct{constructor(){super(it(ia.getDefaults(),arguments,["delayTime","maxDelay"])),this.name="Delay";const t=it(ia.getDefaults(),arguments,["delayTime","maxDelay"]),n=this.toSeconds(t.maxDelay);this._maxDelay=Math.max(n,this.toSeconds(t.delayTime)),this._delayNode=this.input=this.output=this.context.createDelay(n),this.delayTime=new Jt({context:this.context,param:this._delayNode.delayTime,units:"time",value:t.delayTime,minValue:0,maxValue:this.maxDelay}),zt(this,"delayTime")}static getDefaults(){return Object.assign(Ct.getDefaults(),{delayTime:0,maxDelay:1})}get maxDelay(){return this._maxDelay}dispose(){return super.dispose(),this._delayNode.disconnect(),this.delayTime.dispose(),this}}class Su extends fs{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const t=it(Su.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=t.baseUrl,Object.keys(t.urls).forEach(n=>{this._loadingCount++;const s=t.urls[n];this.add(n,s,this._bufferLoaded.bind(this,t.onload),t.onerror)})}static getDefaults(){return{baseUrl:"",onerror:se,onload:se,urls:{}}}has(t){return this._buffers.has(t.toString())}get(t){return Ut(this.has(t),`ToneAudioBuffers has no buffer named: ${t}`),this._buffers.get(t.toString())}_bufferLoaded(t){this._loadingCount--,this._loadingCount===0&&t&&t()}get loaded(){return Array.from(this._buffers).every(([t,n])=>n.loaded)}add(t,n,s=se,i=se){return Hn(n)?this._buffers.set(t.toString(),new le(this.baseUrl+n,s,i)):this._buffers.set(t.toString(),new le(n,s,i)),this}dispose(){return super.dispose(),this._buffers.forEach(t=>t.dispose()),this._buffers.clear(),this}}class en extends er{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(t){return this._getPPQ()*t}_secondsToUnits(t){return Math.floor(t/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(t){return t}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}class NP extends Ye{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new es,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(t,n){return this._events.add({callback:t,time:this.toSeconds(n)}),this._events.length===1&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(t){return this._events.cancel(this.toSeconds(t)),this}_drawLoop(){const t=this.context.currentTime;for(;this._events.length&&this._events.peek().time-this.anticipation<=t;){const n=this._events.shift();n&&t-n.time<=this.expiration&&n.callback()}this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}}TA(e=>{e.draw=new NP({context:e})});bA(e=>{e.draw.dispose()});class VP extends fs{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(t){Ut(_t(t.time),"Events must have a time property"),Ut(_t(t.duration),"Events must have a duration parameter"),t.time=t.time.valueOf();let n=new MP(t.time,t.time+t.duration,t);for(this._root===null?this._root=n:this._root.insert(n),this._length++;n!==null;)n.updateHeight(),n.updateMax(),this._rebalance(n),n=n.parent;return this}remove(t){if(this._root!==null){const n=[];this._root.search(t.time,n);for(const s of n)if(s.event===t){this._removeNode(s),this._length--;break}}return this}get length(){return this._length}cancel(t){return this.forEachFrom(t,n=>this.remove(n)),this}_setRoot(t){this._root=t,this._root!==null&&(this._root.parent=null)}_replaceNodeInParent(t,n){t.parent!==null?(t.isLeftChild()?t.parent.left=n:t.parent.right=n,this._rebalance(t.parent)):this._setRoot(n)}_removeNode(t){if(t.left===null&&t.right===null)this._replaceNodeInParent(t,null);else if(t.right===null)this._replaceNodeInParent(t,t.left);else if(t.left===null)this._replaceNodeInParent(t,t.right);else{const n=t.getBalance();let s,i=null;if(n>0)if(t.left.right===null)s=t.left,s.right=t.right,i=s;else{for(s=t.left.right;s.right!==null;)s=s.right;s.parent&&(s.parent.right=s.left,i=s.parent,s.left=t.left,s.right=t.right)}else if(t.right.left===null)s=t.right,s.left=t.left,i=s;else{for(s=t.right.left;s.left!==null;)s=s.left;s.parent&&(s.parent.left=s.right,i=s.parent,s.left=t.left,s.right=t.right)}t.parent!==null?t.isLeftChild()?t.parent.left=s:t.parent.right=s:this._setRoot(s),i&&this._rebalance(i)}t.dispose()}_rotateLeft(t){const n=t.parent,s=t.isLeftChild(),i=t.right;i&&(t.right=i.left,i.left=t),n!==null?s?n.left=i:n.right=i:this._setRoot(i)}_rotateRight(t){const n=t.parent,s=t.isLeftChild(),i=t.left;i&&(t.left=i.right,i.right=t),n!==null?s?n.left=i:n.right=i:this._setRoot(i)}_rebalance(t){const n=t.getBalance();n>1&&t.left?t.left.getBalance()<0?this._rotateLeft(t.left):this._rotateRight(t):n<-1&&t.right&&(t.right.getBalance()>0?this._rotateRight(t.right):this._rotateLeft(t))}get(t){if(this._root!==null){const n=[];if(this._root.search(t,n),n.length>0){let s=n[0];for(let i=1;i<n.length;i++)n[i].low>s.low&&(s=n[i]);return s.event}}return null}forEach(t){if(this._root!==null){const n=[];this._root.traverse(s=>n.push(s)),n.forEach(s=>{s.event&&t(s.event)})}return this}forEachAtTime(t,n){if(this._root!==null){const s=[];this._root.search(t,s),s.forEach(i=>{i.event&&n(i.event)})}return this}forEachFrom(t,n){if(this._root!==null){const s=[];this._root.searchAfter(t,s),s.forEach(i=>{i.event&&n(i.event)})}return this}dispose(){return super.dispose(),this._root!==null&&this._root.traverse(t=>t.dispose()),this._root=null,this}}class MP{constructor(t,n,s){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=s,this.low=t,this.high=n,this.max=this.high}insert(t){t.low<=this.low?this.left===null?this.left=t:this.left.insert(t):this.right===null?this.right=t:this.right.insert(t)}search(t,n){t>this.max||(this.left!==null&&this.left.search(t,n),this.low<=t&&this.high>t&&n.push(this),!(this.low>t)&&this.right!==null&&this.right.search(t,n))}searchAfter(t,n){this.low>=t&&(n.push(this),this.left!==null&&this.left.searchAfter(t,n)),this.right!==null&&this.right.searchAfter(t,n)}traverse(t){t(this),this.left!==null&&this.left.traverse(t),this.right!==null&&this.right.traverse(t)}updateHeight(){this.left!==null&&this.right!==null?this.height=Math.max(this.left.height,this.right.height)+1:this.right!==null?this.height=this.right.height+1:this.left!==null?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,this.left!==null&&(this.max=Math.max(this.max,this.left.max)),this.right!==null&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let t=0;return this.left!==null&&this.right!==null?t=this.left.height-this.right.height:this.left!==null?t=this.left.height+1:this.right!==null&&(t=-(this.right.height+1)),t}isLeftChild(){return this.parent!==null&&this.parent.left===this}get left(){return this._left}set left(t){this._left=t,t!==null&&(t.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(t){this._right=t,t!==null&&(t.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}class hs extends Ct{constructor(){super(it(hs.getDefaults(),arguments,["volume"])),this.name="Volume";const t=it(hs.getDefaults(),arguments,["volume"]);this.input=this.output=new jt({context:this.context,gain:t.volume,units:"decibels"}),this.volume=this.output.gain,zt(this,"volume"),this._unmutedVolume=t.volume,this.mute=t.mute}static getDefaults(){return Object.assign(Ct.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(t){!this.mute&&t?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!t&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}class Ko extends Ct{constructor(){super(it(Ko.getDefaults(),arguments)),this.name="Destination",this.input=new hs({context:this.context}),this.output=new jt({context:this.context}),this.volume=this.input.volume;const t=it(Ko.getDefaults(),arguments);Mi(this.input,this.output,this.context.rawContext.destination),this.mute=t.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(Ct.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(t){this.input.mute=t}chain(...t){return this.input.disconnect(),t.unshift(this.input),t.push(this.output),Mi(...t),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}}TA(e=>{e.destination=new Ko({context:e})});bA(e=>{e.destination.dispose()});class OP extends fs{constructor(t){super(),this.name="TimelineValue",this._timeline=new es({memory:10}),this._initialValue=t}set(t,n){return this._timeline.add({value:t,time:n}),this}get(t){const n=this._timeline.get(t);return n?n.value:this._initialValue}}class Js{constructor(t,n){this.id=Js._eventId++;const s=Object.assign(Js.getDefaults(),n);this.transport=t,this.callback=s.callback,this._once=s.once,this.time=s.time}static getDefaults(){return{callback:se,once:!1,time:0}}invoke(t){this.callback&&(this.callback(t),this._once&&this.transport.clear(this.id))}dispose(){return this.callback=void 0,this}}Js._eventId=0;class Cu extends Js{constructor(t,n){super(t,n),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const s=Object.assign(Cu.getDefaults(),n);this.duration=new en(t.context,s.duration).valueOf(),this._interval=new en(t.context,s.interval).valueOf(),this._nextTick=s.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},Js.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(t){this._createEvents(t),super.invoke(t)}_createEvents(t){const n=this.transport.getTicksAtTime(t);n>=this.time&&n>=this._nextTick&&this._nextTick+this._interval<this.time+this.duration&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new en(this.context,this._nextTick).toSeconds()))}_restart(t){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.time;const n=this.transport.getTicksAtTime(t);n>this.time&&(this._nextTick=this.time+Math.ceil((n-this.time)/this._interval)*this._interval),this._currentId=this.transport.scheduleOnce(this.invoke.bind(this),new en(this.context,this._nextTick).toSeconds()),this._nextTick+=this._interval,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new en(this.context,this._nextTick).toSeconds())}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this}}class ra extends Ye{constructor(){super(it(ra.getDefaults(),arguments)),this.name="Transport",this._loop=new OP(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new es,this._repeatedEvents=new VP,this._syncedSignals=[],this._swingAmount=0;const t=it(ra.getDefaults(),arguments);this._ppq=t.ppq,this._clock=new sa({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=t.ppq,this.bpm.setValueAtTime(t.bpm,0),zt(this,"bpm"),this._timeSignature=t.timeSignature,this._swingTicks=t.ppq/2}static getDefaults(){return Object.assign(Ye.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(t,n){if(this._loop.get(t)&&n>=this._loopEnd&&(this.emit("loopEnd",t),this._clock.setTicksAtTime(this._loopStart,t),n=this._loopStart,this.emit("loopStart",t,this._clock.getSecondsAtTime(t)),this.emit("loop",t)),this._swingAmount>0&&n%this._ppq!==0&&n%(this._swingTicks*2)!==0){const s=n%(this._swingTicks*2)/(this._swingTicks*2),i=Math.sin(s*Math.PI)*this._swingAmount;t+=new en(this.context,this._swingTicks*2/3).toSeconds()*i}this._timeline.forEachAtTime(n,s=>s.invoke(t))}schedule(t,n){const s=new Js(this,{callback:t,time:new er(this.context,n).toTicks()});return this._addEvent(s,this._timeline)}scheduleRepeat(t,n,s,i=1/0){const r=new Cu(this,{callback:t,duration:new Bn(this.context,i).toTicks(),interval:new Bn(this.context,n).toTicks(),time:new er(this.context,s).toTicks()});return this._addEvent(r,this._repeatedEvents)}scheduleOnce(t,n){const s=new Js(this,{callback:t,once:!0,time:new er(this.context,n).toTicks()});return this._addEvent(s,this._timeline)}clear(t){if(this._scheduledEvents.hasOwnProperty(t)){const n=this._scheduledEvents[t.toString()];n.timeline.remove(n.event),n.event.dispose(),delete this._scheduledEvents[t.toString()]}return this}_addEvent(t,n){return this._scheduledEvents[t.id.toString()]={event:t,timeline:n},n.add(t),t.id}cancel(t=0){const n=this.toTicks(t);return this._timeline.forEachFrom(n,s=>this.clear(s.id)),this._repeatedEvents.forEachFrom(n,s=>this.clear(s.id)),this}_bindClockEvents(){this._clock.on("start",(t,n)=>{n=new en(this.context,n).toSeconds(),this.emit("start",t,n)}),this._clock.on("stop",t=>{this.emit("stop",t)}),this._clock.on("pause",t=>{this.emit("pause",t)})}get state(){return this._clock.getStateAtTime(this.now())}start(t,n){let s;return _t(n)&&(s=this.toTicks(n)),this._clock.start(t,s),this}stop(t){return this._clock.stop(t),this}pause(t){return this._clock.pause(t),this}toggle(t){return t=this.toSeconds(t),this._clock.getStateAtTime(t)!=="started"?this.start(t):this.stop(t),this}get timeSignature(){return this._timeSignature}set timeSignature(t){Un(t)&&(t=t[0]/t[1]*4),this._timeSignature=t}get loopStart(){return new Bn(this.context,this._loopStart,"i").toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t)}get loopEnd(){return new Bn(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t)}get loop(){return this._loop.get(this.now())}set loop(t){this._loop.set(t,this.now())}setLoopPoints(t,n){return this.loopStart=t,this.loopEnd=n,this}get swing(){return this._swingAmount}set swing(t){this._swingAmount=t}get swingSubdivision(){return new en(this.context,this._swingTicks).toNotation()}set swingSubdivision(t){this._swingTicks=this.toTicks(t)}get position(){const t=this.now(),n=this._clock.getTicksAtTime(t);return new en(this.context,n).toBarsBeatsSixteenths()}set position(t){const n=this.toTicks(t);this.ticks=n}get seconds(){return this._clock.seconds}set seconds(t){const n=this.now(),s=this._clock.frequency.timeToTicks(t,n);this.ticks=s}get progress(){if(this.loop){const t=this.now();return(this._clock.getTicksAtTime(t)-this._loopStart)/(this._loopEnd-this._loopStart)}else return 0}get ticks(){return this._clock.ticks}set ticks(t){if(this._clock.ticks!==t){const n=this.now();if(this.state==="started"){const s=this._clock.getTicksAtTime(n),i=this._clock.frequency.getDurationOfTicks(Math.ceil(s)-s,n),r=n+i;this.emit("stop",r),this._clock.setTicksAtTime(t,r),this.emit("start",r,this._clock.getSecondsAtTime(r))}else this._clock.setTicksAtTime(t,n)}}getTicksAtTime(t){return Math.round(this._clock.getTicksAtTime(t))}getSecondsAtTime(t){return this._clock.getSecondsAtTime(t)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(t){this._clock.frequency.multiplier=t}nextSubdivision(t){if(t=this.toTicks(t),this.state!=="started")return 0;{const n=this.now(),s=this.getTicksAtTime(n),i=t-s%t;return this._clock.nextTickTime(i,n)}}syncSignal(t,n){if(!n){const i=this.now();if(t.getValueAtTime(i)!==0){const r=this.bpm.getValueAtTime(i),a=1/(60/r/this.PPQ);n=t.getValueAtTime(i)/a}else n=0}const s=new jt(n);return this.bpm.connect(s),s.connect(t._param),this._syncedSignals.push({initial:t.value,ratio:s,signal:t}),t.value=0,this}unsyncSignal(t){for(let n=this._syncedSignals.length-1;n>=0;n--){const s=this._syncedSignals[n];s.signal===t&&(s.ratio.dispose(),s.signal.value=s.initial,this._syncedSignals.splice(n,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),Eu(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}}ba.mixin(ra);TA(e=>{e.transport=new ra({context:e})});bA(e=>{e.transport.dispose()});class gn extends Ct{constructor(t){super(t),this.input=void 0,this._state=new QA("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=se,this._syncedStop=se,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new hs({context:this.context,mute:t.mute,volume:t.volume}),this.volume=this._volume.volume,zt(this,"volume"),this.onstop=t.onstop}static getDefaults(){return Object.assign(Ct.getDefaults(),{mute:!1,onstop:se,volume:0})}get state(){return this._synced?this.context.transport.state==="started"?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}_clampToCurrentTime(t){return this._synced?t:Math.max(t,this.context.currentTime)}start(t,n,s){let i=Mn(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(i=this._clampToCurrentTime(i),!this._synced&&this._state.getValueAtTime(i)==="started")Ut(Go(i,this._state.get(i).time),"Start time must be strictly greater than previous start time"),this._state.cancel(i),this._state.setStateAtTime("started",i),this.log("restart",i),this.restart(i,n,s);else if(this.log("start",i),this._state.setStateAtTime("started",i),this._synced){const r=this._state.get(i);r&&(r.offset=this.toSeconds(Di(n,0)),r.duration=s?this.toSeconds(s):void 0);const a=this.context.transport.schedule(o=>{this._start(o,n,s)},i);this._scheduled.push(a),this.context.transport.state==="started"&&this.context.transport.getSecondsAtTime(this.immediate())>i&&this._syncedStart(this.now(),this.context.transport.seconds)}else SD(this.context),this._start(i,n,s);return this}stop(t){let n=Mn(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(n=this._clampToCurrentTime(n),this._state.getValueAtTime(n)==="started"||_t(this._state.getNextState("started",n))){if(this.log("stop",n),!this._synced)this._stop(n);else{const s=this.context.transport.schedule(this._stop.bind(this),n);this._scheduled.push(s)}this._state.cancel(n),this._state.setStateAtTime("stopped",n)}return this}restart(t,n,s){return t=this.toSeconds(t),this._state.getValueAtTime(t)==="started"&&(this._state.cancel(t),this._restart(t,n,s)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(t,n)=>{if(n>0){const s=this._state.get(n);if(s&&s.state==="started"&&s.time!==n){const i=n-this.toSeconds(s.time);let r;s.duration&&(r=this.toSeconds(s.duration)-i),this._start(t,this.toSeconds(s.offset)+i,r)}}},this._syncedStop=t=>{const n=this.context.transport.getSecondsAtTime(Math.max(t-this.sampleTime,0));this._state.getValueAtTime(n)==="started"&&this._stop(t)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach(t=>this.context.transport.clear(t)),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=se,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class aa extends Ar{constructor(){super(it(aa.getDefaults(),arguments,["url","onload"])),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1;const t=it(aa.getDefaults(),arguments,["url","onload"]);yn(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new Jt({context:this.context,param:this._source.playbackRate,units:"positive",value:t.playbackRate}),this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this._buffer=new le(t.url,t.onload,t.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(Ar.getDefaults(),{url:new le,loop:!1,loopEnd:0,loopStart:0,onload:se,onerror:se,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t}get curve(){return this._curve}set curve(t){this._curve=t}start(t,n,s,i=1){Ut(this.buffer.loaded,"buffer is either not set or not loaded");const r=this.toSeconds(t);this._startGain(r,i),this.loop?n=Di(n,this.loopStart):n=Di(n,0);let a=Math.max(this.toSeconds(n),0);if(this.loop){const o=this.toSeconds(this.loopEnd)||this.buffer.duration,A=this.toSeconds(this.loopStart),l=o-A;al(a,o)&&(a=(a-A)%l+A),In(a,this.buffer.duration)&&(a=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,TD(a,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(r,a)),_t(s)){let o=this.toSeconds(s);o=Math.max(o,0),this.stop(r+o)}return this}_stopSource(t){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(t)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(t){this._source.loopStart=this.toSeconds(t)}get loopEnd(){return this._source.loopEnd}set loopEnd(t){this._source.loopEnd=this.toSeconds(t)}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._source.loop}set loop(t){this._source.loop=t,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}class Zi extends Ct{constructor(){super(it(Zi.getDefaults(),arguments,["volume"])),this.name="UserMedia";const t=it(Zi.getDefaults(),arguments,["volume"]);this._volume=this.output=new hs({context:this.context,volume:t.volume}),this.volume=this._volume.volume,zt(this,"volume"),this.mute=t.mute}static getDefaults(){return Object.assign(Ct.getDefaults(),{mute:!1,volume:0})}open(t){return fe(this,void 0,void 0,function*(){Ut(Zi.supported,"UserMedia is not supported"),this.state==="started"&&this.close();const n=yield Zi.enumerateDevices();vn(t)?this._device=n[t]:(this._device=n.find(r=>r.label===t||r.deviceId===t),!this._device&&n.length>0&&(this._device=n[0]),Ut(_t(this._device),`No matching device ${t}`));const s={audio:{echoCancellation:!1,sampleRate:this.context.sampleRate,noiseSuppression:!1,mozNoiseSuppression:!1}};this._device&&(s.audio.deviceId=this._device.deviceId);const i=yield navigator.mediaDevices.getUserMedia(s);if(!this._stream){this._stream=i;const r=this.context.createMediaStreamSource(i);yn(r,this.output),this._mediaStream=r}return this})}close(){return this._stream&&this._mediaStream&&(this._stream.getAudioTracks().forEach(t=>{t.stop()}),this._stream=void 0,this._mediaStream.disconnect(),this._mediaStream=void 0),this._device=void 0,this}static enumerateDevices(){return fe(this,void 0,void 0,function*(){return(yield navigator.mediaDevices.enumerateDevices()).filter(n=>n.kind==="audioinput")})}get state(){return this._stream&&this._stream.active?"started":"stopped"}get deviceId(){if(this._device)return this._device.deviceId}get groupId(){if(this._device)return this._device.groupId}get label(){if(this._device)return this._device.label}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}dispose(){return super.dispose(),this.close(),this._volume.dispose(),this.volume.dispose(),this}static get supported(){return _t(navigator.mediaDevices)&&_t(navigator.mediaDevices.getUserMedia)}}function bi(e,t){return fe(this,void 0,void 0,function*(){const n=t/e.context.sampleRate,s=new Pu(1,n,e.context.sampleRate);return new e.constructor(Object.assign(e.get(),{frequency:2/n,detune:0,context:s})).toDestination().start(0),(yield s.render()).getChannelData(0)})}class Jo extends Ar{constructor(){super(it(Jo.getDefaults(),arguments,["frequency","type"])),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator];const t=it(Jo.getDefaults(),arguments,["frequency","type"]);yn(this._oscillator,this._gainNode),this.type=t.type,this.frequency=new Jt({context:this.context,param:this._oscillator.frequency,units:"frequency",value:t.frequency}),this.detune=new Jt({context:this.context,param:this._oscillator.detune,units:"cents",value:t.detune}),zt(this,["frequency","detune"])}static getDefaults(){return Object.assign(Ar.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(t){const n=this.toSeconds(t);return this.log("start",n),this._startGain(n),this._oscillator.start(n),this}_stopSource(t){this._oscillator.stop(t)}setPeriodicWave(t){return this._oscillator.setPeriodicWave(t),this}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class me extends gn{constructor(){super(it(me.getDefaults(),arguments,["frequency","type"])),this.name="Oscillator",this._oscillator=null;const t=it(me.getDefaults(),arguments,["frequency","type"]);this.frequency=new Ht({context:this.context,units:"frequency",value:t.frequency}),zt(this,"frequency"),this.detune=new Ht({context:this.context,units:"cents",value:t.detune}),zt(this,"detune"),this._partials=t.partials,this._partialCount=t.partialCount,this._type=t.type,t.partialCount&&t.type!=="custom"&&(this._type=this.baseType+t.partialCount.toString()),this.phase=t.phase}static getDefaults(){return Object.assign(gn.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(t){const n=this.toSeconds(t),s=new Jo({context:this.context,onended:()=>this.onstop(this)});this._oscillator=s,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(n)}_stop(t){const n=this.toSeconds(t);this._oscillator&&this._oscillator.stop(n)}_restart(t){const n=this.toSeconds(t);return this.log("restart",n),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(n),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if(this._type==="custom")return me._periodicWaveCache.find(n=>n.phase===this._phase&&iP(n.partials,this._partials));{const t=me._periodicWaveCache.find(n=>n.type===this._type&&n.phase===this._phase);return this._partialCount=t?t.partialCount:this._partialCount,t}}get type(){return this._type}set type(t){this._type=t;const n=["sine","square","sawtooth","triangle"].indexOf(t)!==-1;if(this._phase===0&&n)this._wave=void 0,this._partialCount=0,this._oscillator!==null&&(this._oscillator.type=t);else{const s=this._getCachedPeriodicWave();if(_t(s)){const{partials:i,wave:r}=s;this._wave=r,this._partials=i,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave)}else{const[i,r]=this._getRealImaginary(t,this._phase),a=this.context.createPeriodicWave(i,r);this._wave=a,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave),me._periodicWaveCache.push({imag:r,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:i,type:this._type,wave:this._wave}),me._periodicWaveCache.length>100&&me._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(t){this.partialCount&&this._type!=="custom"&&t!=="custom"?this.type=t+this.partialCount:this.type=t}get partialCount(){return this._partialCount}set partialCount(t){Ks(t,0);let n=this._type;const s=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(s&&(n=s[1]),this._type!=="custom")t===0?this.type=n:this.type=n+t.toString();else{const i=new Float32Array(t);this._partials.forEach((r,a)=>i[a]=r),this._partials=Array.from(i),this.type=this._type}}_getRealImaginary(t,n){let i=2048;const r=new Float32Array(i),a=new Float32Array(i);let o=1;if(t==="custom"){if(o=this._partials.length+1,this._partialCount=this._partials.length,i=o,this._partials.length===0)return[r,a]}else{const A=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(t);A?(o=parseInt(A[2],10)+1,this._partialCount=parseInt(A[2],10),t=A[1],o=Math.max(o,2),i=o):this._partialCount=0,this._partials=[]}for(let A=1;A<i;++A){const l=2/(A*Math.PI);let u;switch(t){case"sine":u=A<=o?1:0,this._partials[A-1]=u;break;case"square":u=A&1?2*l:0,this._partials[A-1]=u;break;case"sawtooth":u=l*(A&1?1:-1),this._partials[A-1]=u;break;case"triangle":A&1?u=2*(l*l)*(A-1>>1&1?-1:1):u=0,this._partials[A-1]=u;break;case"custom":u=this._partials[A-1];break;default:throw new TypeError("Oscillator: invalid type: "+t)}u!==0?(r[A]=-u*Math.sin(n*A),a[A]=u*Math.cos(n*A)):(r[A]=0,a[A]=0)}return[r,a]}_inverseFFT(t,n,s){let i=0;const r=t.length;for(let a=0;a<r;a++)i+=t[a]*Math.cos(a*s)+n[a]*Math.sin(a*s);return i}getInitialValue(){const[t,n]=this._getRealImaginary(this._type,0);let s=0;const i=Math.PI*2,r=32;for(let a=0;a<r;a++)s=Math.max(this._inverseFFT(t,n,a/r*i),s);return aP(-this._inverseFFT(t,n,this._phase)/s,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(t){this._phase=t*Math.PI/180,this.type=this._type}asArray(t=1024){return fe(this,void 0,void 0,function*(){return bi(this,t)})}dispose(){return super.dispose(),this._oscillator!==null&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}me._periodicWaveCache=[];class Ls extends Ct{constructor(){super(Object.assign(it(Ls.getDefaults(),arguments,["context"])))}connect(t,n=0,s=0){return vA(this,t,n,s),this}}class Oi extends Ls{constructor(){super(Object.assign(it(Oi.getDefaults(),arguments,["mapping","length"]))),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper;const t=it(Oi.getDefaults(),arguments,["mapping","length"]);Un(t.mapping)||t.mapping instanceof Float32Array?this.curve=Float32Array.from(t.mapping):HE(t.mapping)&&this.setMap(t.mapping,t.length)}static getDefaults(){return Object.assign(Ht.getDefaults(),{length:1024})}setMap(t,n=1024){const s=new Float32Array(n);for(let i=0,r=n;i<r;i++){const a=i/(r-1)*2-1;s[i]=t(a,i)}return this.curve=s,this}get curve(){return this._shaper.curve}set curve(t){this._shaper.curve=t}get oversample(){return this._shaper.oversample}set oversample(t){const n=["none","2x","4x"].some(s=>s.includes(t));Ut(n,"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class _D extends Ls{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new Oi({context:this.context,mapping:t=>(t+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class zs extends Ht{constructor(){super(Object.assign(it(zs.getDefaults(),arguments,["value"]))),this.name="Multiply",this.override=!1;const t=it(zs.getDefaults(),arguments,["value"]);this._mult=this.input=this.output=new jt({context:this.context,minValue:t.minValue,maxValue:t.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(Ht.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class oa extends gn{constructor(){super(it(oa.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="AMOscillator",this._modulationScale=new _D({context:this.context}),this._modulationNode=new jt({context:this.context});const t=it(oa.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new me({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new me({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new zs({context:this.context,units:"positive",value:t.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),zt(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(me.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){this._modulator.restart(t),this._carrier.restart(t)}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return fe(this,void 0,void 0,function*(){return bi(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class Aa extends gn{constructor(){super(it(Aa.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="FMOscillator",this._modulationNode=new jt({context:this.context,gain:0});const t=it(Aa.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new me({context:this.context,detune:t.detune,frequency:0,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.detune=this._carrier.detune,this.frequency=new Ht({context:this.context,units:"frequency",value:t.frequency}),this._modulator=new me({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new zs({context:this.context,units:"positive",value:t.harmonicity}),this.modulationIndex=new zs({context:this.context,units:"positive",value:t.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),zt(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(me.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){return this._modulator.restart(t),this._carrier.restart(t),this}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return fe(this,void 0,void 0,function*(){return bi(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class cr extends gn{constructor(){super(it(cr.getDefaults(),arguments,["frequency","width"])),this.name="PulseOscillator",this._widthGate=new jt({context:this.context,gain:0}),this._thresh=new Oi({context:this.context,mapping:n=>n<=0?-1:1});const t=it(cr.getDefaults(),arguments,["frequency","width"]);this.width=new Ht({context:this.context,units:"audioRange",value:t.width}),this._triangle=new me({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),zt(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(gn.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(t){t=this.toSeconds(t),this._triangle.start(t),this._widthGate.gain.setValueAtTime(1,t)}_stop(t){t=this.toSeconds(t),this._triangle.stop(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(0,t)}_restart(t){this._triangle.restart(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(1,t)}get phase(){return this._triangle.phase}set phase(t){this._triangle.phase=t}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(t){this._triangle.type=t}asArray(t=1024){return fe(this,void 0,void 0,function*(){return bi(this,t)})}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class ca extends gn{constructor(){super(it(ca.getDefaults(),arguments,["frequency","type","spread"])),this.name="FatOscillator",this._oscillators=[];const t=it(ca.getDefaults(),arguments,["frequency","type","spread"]);this.frequency=new Ht({context:this.context,units:"frequency",value:t.frequency}),this.detune=new Ht({context:this.context,units:"cents",value:t.detune}),this._spread=t.spread,this._type=t.type,this._phase=t.phase,this._partials=t.partials,this._partialCount=t.partialCount,this.count=t.count,zt(this,["frequency","detune"])}static getDefaults(){return Object.assign(me.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(t){t=this.toSeconds(t),this._forEach(n=>n.start(t))}_stop(t){t=this.toSeconds(t),this._forEach(n=>n.stop(t))}_restart(t){this._forEach(n=>n.restart(t))}_forEach(t){for(let n=0;n<this._oscillators.length;n++)t(this._oscillators[n],n)}get type(){return this._type}set type(t){this._type=t,this._forEach(n=>n.type=t)}get spread(){return this._spread}set spread(t){if(this._spread=t,this._oscillators.length>1){const n=-t/2,s=t/(this._oscillators.length-1);this._forEach((i,r)=>i.detune.value=n+s*r)}}get count(){return this._oscillators.length}set count(t){if(Ks(t,1),this._oscillators.length!==t){this._forEach(n=>n.dispose()),this._oscillators=[];for(let n=0;n<t;n++){const s=new me({context:this.context,volume:-6-t*1.1,type:this._type,phase:this._phase+n/t*360,partialCount:this._partialCount,onstop:n===0?()=>this.onstop(this):se});this.type==="custom"&&(s.partials=this._partials),this.frequency.connect(s.frequency),this.detune.connect(s.detune),s.detune.overridden=!1,s.connect(this.output),this._oscillators[n]=s}this.spread=this._spread,this.state==="started"&&this._forEach(n=>n.start())}}get phase(){return this._phase}set phase(t){this._phase=t,this._forEach((n,s)=>n.phase=this._phase+s/this.count*360)}get baseType(){return this._oscillators[0].baseType}set baseType(t){this._forEach(n=>n.baseType=t),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this._type="custom",this._forEach(n=>n.partials=t))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(t){this._partialCount=t,this._forEach(n=>n.partialCount=t),this._type=this._oscillators[0].type}asArray(t=1024){return fe(this,void 0,void 0,function*(){return bi(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach(t=>t.dispose()),this}}class la extends gn{constructor(){super(it(la.getDefaults(),arguments,["frequency","modulationFrequency"])),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new zs({context:this.context,value:2});const t=it(la.getDefaults(),arguments,["frequency","modulationFrequency"]);this._pulse=new cr({context:this.context,frequency:t.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new me({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),zt(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(gn.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(t){t=this.toSeconds(t),this._modulator.start(t),this._pulse.start(t)}_stop(t){t=this.toSeconds(t),this._modulator.stop(t),this._pulse.stop(t)}_restart(t){this._modulator.restart(t),this._pulse.restart(t)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(t){this._modulator.phase=t}asArray(t=1024){return fe(this,void 0,void 0,function*(){return bi(this,t)})}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const Vh={am:oa,fat:ca,fm:Aa,oscillator:me,pulse:cr,pwm:la};class ua extends gn{constructor(){super(it(ua.getDefaults(),arguments,["frequency","type"])),this.name="OmniOscillator";const t=it(ua.getDefaults(),arguments,["frequency","type"]);this.frequency=new Ht({context:this.context,units:"frequency",value:t.frequency}),this.detune=new Ht({context:this.context,units:"cents",value:t.detune}),zt(this,["frequency","detune"]),this.set(t)}static getDefaults(){return Object.assign(me.getDefaults(),Aa.getDefaults(),oa.getDefaults(),ca.getDefaults(),cr.getDefaults(),la.getDefaults())}_start(t){this._oscillator.start(t)}_stop(t){this._oscillator.stop(t)}_restart(t){return this._oscillator.restart(t),this}get type(){let t="";return["am","fm","fat"].some(n=>this._sourceType===n)&&(t=this._sourceType),t+this._oscillator.type}set type(t){t.substr(0,2)==="fm"?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):t.substr(0,2)==="am"?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):t.substr(0,3)==="fat"?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(3)):t==="pwm"?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):t==="pulse"?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=t)}get partials(){return this._oscillator.partials}set partials(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partials=t)}get partialCount(){return this._oscillator.partialCount}set partialCount(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partialCount=t)}set(t){return Reflect.has(t,"type")&&t.type&&(this.type=t.type),super.set(t),this}_createNewOscillator(t){if(t!==this._sourceType){this._sourceType=t;const n=Vh[t],s=this.now();if(this._oscillator){const i=this._oscillator;i.stop(s),this.context.setTimeout(()=>i.dispose(),this.blockTime)}this._oscillator=new n({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),this.state==="started"&&this._oscillator.start(s)}}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t}get sourceType(){return this._sourceType}set sourceType(t){let n="sine";this._oscillator.type!=="pwm"&&this._oscillator.type!=="pulse"&&(n=this._oscillator.type),t==="fm"?this.type="fm"+n:t==="am"?this.type="am"+n:t==="fat"?this.type="fat"+n:t==="oscillator"?this.type=n:t==="pulse"?this.type="pulse":t==="pwm"&&(this.type="pwm")}_getOscType(t,n){return t instanceof Vh[n]}get baseType(){return this._oscillator.baseType}set baseType(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&t!=="pulse"&&t!=="pwm"&&(this._oscillator.baseType=t)}get width(){if(this._getOscType(this._oscillator,"pulse"))return this._oscillator.width}get count(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.count}set count(t){this._getOscType(this._oscillator,"fat")&&vn(t)&&(this._oscillator.count=t)}get spread(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.spread}set spread(t){this._getOscType(this._oscillator,"fat")&&vn(t)&&(this._oscillator.spread=t)}get modulationType(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.modulationType}set modulationType(t){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&Hn(t)&&(this._oscillator.modulationType=t)}get modulationIndex(){if(this._getOscType(this._oscillator,"fm"))return this._oscillator.modulationIndex}get harmonicity(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.harmonicity}get modulationFrequency(){if(this._getOscType(this._oscillator,"pwm"))return this._oscillator.modulationFrequency}asArray(t=1024){return fe(this,void 0,void 0,function*(){return bi(this,t)})}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}class wu extends Ht{constructor(){super(Object.assign(it(wu.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Add",this._sum=new jt({context:this.context}),this.input=this._sum,this.output=this._sum,this.addend=this._param,Mi(this._constantSource,this._sum)}static getDefaults(){return Object.assign(Ht.getDefaults(),{value:0})}dispose(){return super.dispose(),this._sum.dispose(),this}}class Lo extends Ls{constructor(){super(Object.assign(it(Lo.getDefaults(),arguments,["min","max"]))),this.name="Scale";const t=it(Lo.getDefaults(),arguments,["min","max"]);this._mult=this.input=new zs({context:this.context,value:t.max-t.min}),this._add=this.output=new wu({context:this.context,value:t.min}),this._min=t.min,this._max=t.max,this.input.connect(this.output)}static getDefaults(){return Object.assign(Ls.getDefaults(),{max:1,min:0})}get min(){return this._min}set min(t){this._min=t,this._setRange()}get max(){return this._max}set max(t){this._max=t,this._setRange()}_setRange(){this._add.value=this._min,this._mult.value=this._max-this._min}dispose(){return super.dispose(),this._add.dispose(),this._mult.dispose(),this}}class Bu extends Ls{constructor(){super(Object.assign(it(Bu.getDefaults(),arguments))),this.name="Zero",this._gain=new jt({context:this.context}),this.output=this._gain,this.input=void 0,yn(this.context.getConstant(0),this._gain)}dispose(){return super.dispose(),GD(this.context.getConstant(0),this._gain),this}}class js extends Ct{constructor(){super(it(js.getDefaults(),arguments,["frequency","min","max"])),this.name="LFO",this._stoppedValue=0,this._units="number",this.convert=!0,this._fromType=Jt.prototype._fromType,this._toType=Jt.prototype._toType,this._is=Jt.prototype._is,this._clampValue=Jt.prototype._clampValue;const t=it(js.getDefaults(),arguments,["frequency","min","max"]);this._oscillator=new me(t),this.frequency=this._oscillator.frequency,this._amplitudeGain=new jt({context:this.context,gain:t.amplitude,units:"normalRange"}),this.amplitude=this._amplitudeGain.gain,this._stoppedSignal=new Ht({context:this.context,units:"audioRange",value:0}),this._zeros=new Bu({context:this.context}),this._a2g=new _D({context:this.context}),this._scaler=this.output=new Lo({context:this.context,max:t.max,min:t.min}),this.units=t.units,this.min=t.min,this.max=t.max,this._oscillator.chain(this._amplitudeGain,this._a2g,this._scaler),this._zeros.connect(this._a2g),this._stoppedSignal.connect(this._a2g),zt(this,["amplitude","frequency"]),this.phase=t.phase}static getDefaults(){return Object.assign(me.getDefaults(),{amplitude:1,frequency:"4n",max:1,min:0,type:"sine",units:"number"})}start(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(0,t),this._oscillator.start(t),this}stop(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(this._stoppedValue,t),this._oscillator.stop(t),this}sync(){return this._oscillator.sync(),this._oscillator.syncFrequency(),this}unsync(){return this._oscillator.unsync(),this._oscillator.unsyncFrequency(),this}_setStoppedValue(){this._stoppedValue=this._oscillator.getInitialValue(),this._stoppedSignal.value=this._stoppedValue}get min(){return this._toType(this._scaler.min)}set min(t){t=this._fromType(t),this._scaler.min=t}get max(){return this._toType(this._scaler.max)}set max(t){t=this._fromType(t),this._scaler.max=t}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t,this._setStoppedValue()}get partials(){return this._oscillator.partials}set partials(t){this._oscillator.partials=t,this._setStoppedValue()}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t,this._setStoppedValue()}get units(){return this._units}set units(t){const n=this.min,s=this.max;this._units=t,this.min=n,this.max=s}get state(){return this._oscillator.state}connect(t,n,s){return(t instanceof Jt||t instanceof Ht)&&(this.convert=t.convert,this.units=t.units),vA(this,t,n,s),this}dispose(){return super.dispose(),this._oscillator.dispose(),this._stoppedSignal.dispose(),this._zeros.dispose(),this._scaler.dispose(),this._a2g.dispose(),this._amplitudeGain.dispose(),this.amplitude.dispose(),this}}function xD(e,t=1/0){const n=new WeakMap;return function(s,i){Reflect.defineProperty(s,i,{configurable:!0,enumerable:!0,get:function(){return n.get(this)},set:function(r){Ks(r,e,t),n.set(this,r)}})}}function ms(e,t=1/0){const n=new WeakMap;return function(s,i){Reflect.defineProperty(s,i,{configurable:!0,enumerable:!0,get:function(){return n.get(this)},set:function(r){Ks(this.toSeconds(r),e,t),n.set(this,r)}})}}class lr extends gn{constructor(){super(it(lr.getDefaults(),arguments,["url","onload"])),this.name="Player",this._activeSources=new Set;const t=it(lr.getDefaults(),arguments,["url","onload"]);this._buffer=new le({onload:this._onload.bind(this,t.onload),onerror:t.onerror,reverse:t.reverse,url:t.url}),this.autostart=t.autostart,this._loop=t.loop,this._loopStart=t.loopStart,this._loopEnd=t.loopEnd,this._playbackRate=t.playbackRate,this.fadeIn=t.fadeIn,this.fadeOut=t.fadeOut}static getDefaults(){return Object.assign(gn.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:se,onerror:se,playbackRate:1,reverse:!1})}load(t){return fe(this,void 0,void 0,function*(){return yield this._buffer.load(t),this._onload(),this})}_onload(t=se){t(),this.autostart&&this.start()}_onSourceEnd(t){this.onstop(this),this._activeSources.delete(t),this._activeSources.size===0&&!this._synced&&this._state.getValueAtTime(this.now())==="started"&&(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(t,n,s){return super.start(t,n,s),this}_start(t,n,s){this._loop?n=Di(n,this._loopStart):n=Di(n,0);const i=this.toSeconds(n),r=s;s=Di(s,Math.max(this._buffer.duration-i,0));let a=this.toSeconds(s);a=a/this._playbackRate,t=this.toSeconds(t);const o=new aa({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);!this._loop&&!this._synced&&(this._state.cancel(t+a),this._state.setStateAtTime("stopped",t+a,{implicitEnd:!0})),this._activeSources.add(o),this._loop&&Mn(r)?o.start(t,i):o.start(t,i,a-this.toSeconds(this.fadeOut))}_stop(t){const n=this.toSeconds(t);this._activeSources.forEach(s=>s.stop(n))}restart(t,n,s){return super.restart(t,n,s),this}_restart(t,n,s){this._stop(t),this._start(t,n,s)}seek(t,n){const s=this.toSeconds(n);if(this._state.getValueAtTime(s)==="started"){const i=this.toSeconds(t);this._stop(s),this._start(s,i)}return this}setLoopPoints(t,n){return this.loopStart=t,this.loopEnd=n,this}get loopStart(){return this._loopStart}set loopStart(t){this._loopStart=t,this.buffer.loaded&&Ks(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach(n=>{n.loopStart=t})}get loopEnd(){return this._loopEnd}set loopEnd(t){this._loopEnd=t,this.buffer.loaded&&Ks(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach(n=>{n.loopEnd=t})}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._loop}set loop(t){if(this._loop!==t&&(this._loop=t,this._activeSources.forEach(n=>{n.loop=t}),t)){const n=this._state.getNextState("stopped",this.now());n&&this._state.cancel(n.time)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t;const n=this.now(),s=this._state.getNextState("stopped",n);s&&s.implicitEnd&&(this._state.cancel(s.time),this._activeSources.forEach(i=>i.cancelStop())),this._activeSources.forEach(i=>{i.playbackRate.setValueAtTime(t,n)})}get reverse(){return this._buffer.reverse}set reverse(t){this._buffer.reverse=t}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach(t=>t.dispose()),this._activeSources.clear(),this._buffer.dispose(),this}}_n([ms(0)],lr.prototype,"fadeIn",void 0);_n([ms(0)],lr.prototype,"fadeOut",void 0);class yP extends Ls{constructor(){super(...arguments),this.name="GainToAudio",this._norm=new Oi({context:this.context,mapping:t=>Math.abs(t)*2-1}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class ps extends Ct{constructor(){super(it(ps.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="Envelope",this._sig=new Ht({context:this.context,value:0}),this.output=this._sig,this.input=void 0;const t=it(ps.getDefaults(),arguments,["attack","decay","sustain","release"]);this.attack=t.attack,this.decay=t.decay,this.sustain=t.sustain,this.release=t.release,this.attackCurve=t.attackCurve,this.releaseCurve=t.releaseCurve,this.decayCurve=t.decayCurve}static getDefaults(){return Object.assign(Ct.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(t,n){if(Hn(t))return t;{let s;for(s in no)if(no[s][n]===t)return s;return t}}_setCurve(t,n,s){if(Hn(s)&&Reflect.has(no,s)){const i=no[s];di(i)?t!=="_decayCurve"&&(this[t]=i[n]):this[t]=i}else if(Un(s)&&t!=="_decayCurve")this[t]=s;else throw new Error("Envelope: invalid curve: "+s)}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(t){this._setCurve("_attackCurve","In",t)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(t){this._setCurve("_releaseCurve","Out",t)}get decayCurve(){return this._decayCurve}set decayCurve(t){Ut(["linear","exponential"].some(n=>n===t),`Invalid envelope curve: ${t}`),this._decayCurve=t}triggerAttack(t,n=1){this.log("triggerAttack",t,n),t=this.toSeconds(t);let i=this.toSeconds(this.attack);const r=this.toSeconds(this.decay),a=this.getValueAtTime(t);if(a>0){const o=1/i;i=(1-a)/o}if(i<this.sampleTime)this._sig.cancelScheduledValues(t),this._sig.setValueAtTime(n,t);else if(this._attackCurve==="linear")this._sig.linearRampTo(n,i,t);else if(this._attackCurve==="exponential")this._sig.targetRampTo(n,i,t);else{this._sig.cancelAndHoldAtTime(t);let o=this._attackCurve;for(let A=1;A<o.length;A++)if(o[A-1]<=a&&a<=o[A]){o=this._attackCurve.slice(A),o[0]=a;break}this._sig.setValueCurveAtTime(o,t,i,n)}if(r&&this.sustain<1){const o=n*this.sustain,A=t+i;this.log("decay",A),this._decayCurve==="linear"?this._sig.linearRampToValueAtTime(o,r+A):this._sig.exponentialApproachValueAtTime(o,A,r)}return this}triggerRelease(t){this.log("triggerRelease",t),t=this.toSeconds(t);const n=this.getValueAtTime(t);if(n>0){const s=this.toSeconds(this.release);s<this.sampleTime?this._sig.setValueAtTime(0,t):this._releaseCurve==="linear"?this._sig.linearRampTo(0,s,t):this._releaseCurve==="exponential"?this._sig.targetRampTo(0,s,t):(Ut(Un(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(t),this._sig.setValueCurveAtTime(this._releaseCurve,t,s,n))}return this}getValueAtTime(t){return this._sig.getValueAtTime(t)}triggerAttackRelease(t,n,s=1){return n=this.toSeconds(n),this.triggerAttack(n,s),this.triggerRelease(n+this.toSeconds(t)),this}cancel(t){return this._sig.cancelScheduledValues(this.toSeconds(t)),this}connect(t,n=0,s=0){return vA(this,t,n,s),this}asArray(t=1024){return fe(this,void 0,void 0,function*(){const n=t/this.context.sampleRate,s=new Pu(1,n,this.context.sampleRate),i=this.toSeconds(this.attack)+this.toSeconds(this.decay),r=i+this.toSeconds(this.release),a=r*.1,o=r+a,A=new this.constructor(Object.assign(this.get(),{attack:n*this.toSeconds(this.attack)/o,decay:n*this.toSeconds(this.decay)/o,release:n*this.toSeconds(this.release)/o,context:s}));return A._sig.toDestination(),A.triggerAttackRelease(n*(i+a)/o,0),(yield s.render()).getChannelData(0)})}dispose(){return super.dispose(),this._sig.dispose(),this}}_n([ms(0)],ps.prototype,"attack",void 0);_n([ms(0)],ps.prototype,"decay",void 0);_n([xD(0,1)],ps.prototype,"sustain",void 0);_n([ms(0)],ps.prototype,"release",void 0);const no=(()=>{let t,n;const s=[];for(t=0;t<128;t++)s[t]=Math.sin(t/(128-1)*(Math.PI/2));const i=[],r=6.4;for(t=0;t<128-1;t++){n=t/(128-1);const h=Math.sin(n*(Math.PI*2)*r-Math.PI/2)+1;i[t]=h/10+n*.83}i[128-1]=1;const a=[],o=5;for(t=0;t<128;t++)a[t]=Math.ceil(t/(128-1)*o)/o;const A=[];for(t=0;t<128;t++)n=t/(128-1),A[t]=.5*(1-Math.cos(Math.PI*n));const l=[];for(t=0;t<128;t++){n=t/(128-1);const h=Math.pow(n,3)*4+.2,q=Math.cos(h*Math.PI*2*n);l[t]=Math.abs(q*(1-n))}function u(h){const q=new Array(h.length);for(let p=0;p<h.length;p++)q[p]=1-h[p];return q}function c(h){return h.slice(0).reverse()}return{bounce:{In:u(l),Out:l},cosine:{In:s,Out:c(s)},exponential:"exponential",linear:"linear",ripple:{In:i,Out:u(i)},sine:{In:A,Out:u(A)},step:{In:a,Out:u(a)}}})();class yi extends Ct{constructor(){super(it(yi.getDefaults(),arguments)),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease;const t=it(yi.getDefaults(),arguments);this._volume=this.output=new hs({context:this.context,volume:t.volume}),this.volume=this._volume.volume,zt(this,"volume")}static getDefaults(){return Object.assign(Ct.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0)),this}_syncState(){let t=!1;return this._synced||(this._synced=!0,t=!0),t}_syncMethod(t,n){const s=this["_original_"+t]=this[t];this[t]=(...i)=>{const r=i[n],a=this.context.transport.schedule(o=>{i[n]=o,s.apply(this,i)},r);this._scheduledEvents.push(a)}}unsync(){return this._scheduledEvents.forEach(t=>this.context.transport.clear(t)),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease),this}triggerAttackRelease(t,n,s,i){const r=this.toSeconds(s),a=this.toSeconds(n);return this.triggerAttack(t,r,i),this.triggerRelease(r+a),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class Wi extends yi{constructor(){super(it(Wi.getDefaults(),arguments));const t=it(Wi.getDefaults(),arguments);this.portamento=t.portamento,this.onsilence=t.onsilence}static getDefaults(){return Object.assign(yi.getDefaults(),{detune:0,onsilence:se,portamento:0})}triggerAttack(t,n,s=1){this.log("triggerAttack",t,n,s);const i=this.toSeconds(n);return this._triggerEnvelopeAttack(i,s),this.setNote(t,i),this}triggerRelease(t){this.log("triggerRelease",t);const n=this.toSeconds(t);return this._triggerEnvelopeRelease(n),this}setNote(t,n){const s=this.toSeconds(n),i=t instanceof Vn?t.toFrequency():t;if(this.portamento>0&&this.getLevelAtTime(s)>.05){const r=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(i,r,s)}else this.frequency.setValueAtTime(i,s);return this}}_n([ms(0)],Wi.prototype,"portamento",void 0);class ku extends ps{constructor(){super(it(ku.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new jt({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class qa extends Wi{constructor(){super(it(qa.getDefaults(),arguments)),this.name="Synth";const t=it(qa.getDefaults(),arguments);this.oscillator=new ua(Object.assign({context:this.context,detune:t.detune,onstop:()=>this.onsilence(this)},t.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new ku(Object.assign({context:this.context},t.envelope)),this.oscillator.chain(this.envelope,this.output),zt(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(Wi.getDefaults(),{envelope:Object.assign(Nh(ps.getDefaults(),Object.keys(Ct.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(Nh(ua.getDefaults(),[...Object.keys(gn.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(t,n){if(this.envelope.triggerAttack(t,n),this.oscillator.start(t),this.envelope.sustain===0){const s=this.toSeconds(this.envelope.attack),i=this.toSeconds(this.envelope.decay);this.oscillator.stop(t+s+i)}}_triggerEnvelopeRelease(t){this.envelope.triggerRelease(t),this.oscillator.stop(t+this.toSeconds(this.envelope.release))}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class ha extends Ct{constructor(){super(it(ha.getDefaults(),arguments,["frequency","type"])),this.name="BiquadFilter";const t=it(ha.getDefaults(),arguments,["frequency","type"]);this._filter=this.context.createBiquadFilter(),this.input=this.output=this._filter,this.Q=new Jt({context:this.context,units:"number",value:t.Q,param:this._filter.Q}),this.frequency=new Jt({context:this.context,units:"frequency",value:t.frequency,param:this._filter.frequency}),this.detune=new Jt({context:this.context,units:"cents",value:t.detune,param:this._filter.detune}),this.gain=new Jt({context:this.context,units:"decibels",convert:!1,value:t.gain,param:this._filter.gain}),this.type=t.type}static getDefaults(){return Object.assign(Ct.getDefaults(),{Q:1,type:"lowpass",frequency:350,detune:0,gain:0})}get type(){return this._filter.type}set type(t){Ut(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(t)!==-1,`Invalid filter type: ${t}`),this._filter.type=t}getFrequencyResponse(t=128){const n=new Float32Array(t);for(let a=0;a<t;a++){const A=Math.pow(a/t,2)*(2e4-20)+20;n[a]=A}const s=new Float32Array(t),i=new Float32Array(t),r=this.context.createBiquadFilter();return r.type=this.type,r.Q.value=this.Q.value,r.frequency.value=this.frequency.value,r.gain.value=this.gain.value,r.getFrequencyResponse(n,s,i),s}dispose(){return super.dispose(),this._filter.disconnect(),this.Q.dispose(),this.frequency.dispose(),this.gain.dispose(),this.detune.dispose(),this}}class Hs extends Ct{constructor(){super(it(Hs.getDefaults(),arguments,["frequency","type","rolloff"])),this.name="Filter",this.input=new jt({context:this.context}),this.output=new jt({context:this.context}),this._filters=[];const t=it(Hs.getDefaults(),arguments,["frequency","type","rolloff"]);this._filters=[],this.Q=new Ht({context:this.context,units:"positive",value:t.Q}),this.frequency=new Ht({context:this.context,units:"frequency",value:t.frequency}),this.detune=new Ht({context:this.context,units:"cents",value:t.detune}),this.gain=new Ht({context:this.context,units:"decibels",convert:!1,value:t.gain}),this._type=t.type,this.rolloff=t.rolloff,zt(this,["detune","frequency","gain","Q"])}static getDefaults(){return Object.assign(Ct.getDefaults(),{Q:1,detune:0,frequency:350,gain:0,rolloff:-12,type:"lowpass"})}get type(){return this._type}set type(t){Ut(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(t)!==-1,`Invalid filter type: ${t}`),this._type=t,this._filters.forEach(s=>s.type=t)}get rolloff(){return this._rolloff}set rolloff(t){const n=vn(t)?t:parseInt(t,10),s=[-12,-24,-48,-96];let i=s.indexOf(n);Ut(i!==-1,`rolloff can only be ${s.join(", ")}`),i+=1,this._rolloff=n,this.input.disconnect(),this._filters.forEach(r=>r.disconnect()),this._filters=new Array(i);for(let r=0;r<i;r++){const a=new ha({context:this.context});a.type=this._type,this.frequency.connect(a.frequency),this.detune.connect(a.detune),this.Q.connect(a.Q),this.gain.connect(a.gain),this._filters[r]=a}this._internalChannels=this._filters,Mi(this.input,...this._internalChannels,this.output)}getFrequencyResponse(t=128){const n=new ha({frequency:this.frequency.value,gain:this.gain.value,Q:this.Q.value,type:this._type,detune:this.detune.value}),s=new Float32Array(t).map(()=>1);return this._filters.forEach(()=>{n.getFrequencyResponse(t).forEach((r,a)=>s[a]*=r)}),n.dispose(),s}dispose(){return super.dispose(),this._filters.forEach(t=>{t.dispose()}),Eu(this,["detune","frequency","gain","Q"]),this.frequency.dispose(),this.Q.dispose(),this.detune.dispose(),this.gain.dispose(),this}}class pa extends qa{constructor(){super(it(pa.getDefaults(),arguments)),this.name="MembraneSynth",this.portamento=0;const t=it(pa.getDefaults(),arguments);this.pitchDecay=t.pitchDecay,this.octaves=t.octaves,zt(this,["oscillator","envelope"])}static getDefaults(){return $i(Wi.getDefaults(),qa.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(t,n){const s=this.toSeconds(n),i=this.toFrequency(t instanceof Vn?t.toFrequency():t),r=i*this.octaves;return this.oscillator.frequency.setValueAtTime(r,s),this.oscillator.frequency.exponentialRampToValueAtTime(i,s+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}_n([xD(0)],pa.prototype,"octaves",void 0);_n([ms(0)],pa.prototype,"pitchDecay",void 0);const FD=new Set;function Tu(e){FD.add(e)}function ZD(e,t){const n=`registerProcessor("${e}", ${t})`;FD.add(n)}const WP=`
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;Tu(WP);const EP=`
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;Tu(EP);const PP=`
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;Tu(PP);const IP="feedback-comb-filter",SP=`
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;ZD(IP,SP);class da extends yi{constructor(){super(it(da.getDefaults(),arguments,["urls","onload","baseUrl"],"urls")),this.name="Sampler",this._activeSources=new Map;const t=it(da.getDefaults(),arguments,["urls","onload","baseUrl"],"urls"),n={};Object.keys(t.urls).forEach(s=>{const i=parseInt(s,10);if(Ut(eo(s)||vn(i)&&isFinite(i),`url key is neither a note or midi pitch: ${s}`),eo(s)){const r=new Vn(this.context,s).toMidi();n[r]=t.urls[s]}else vn(i)&&isFinite(i)&&(n[i]=t.urls[i])}),this._buffers=new Su({urls:n,onload:t.onload,baseUrl:t.baseUrl,onerror:t.onerror}),this.attack=t.attack,this.release=t.release,this.curve=t.curve,this._buffers.loaded&&Promise.resolve().then(t.onload)}static getDefaults(){return Object.assign(yi.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:se,onerror:se,release:.1,urls:{}})}_findClosest(t){let s=0;for(;s<96;){if(this._buffers.has(t+s))return-s;if(this._buffers.has(t-s))return s;s++}throw new Error(`No available buffers for note: ${t}`)}triggerAttack(t,n,s=1){return this.log("triggerAttack",t,n,s),Array.isArray(t)||(t=[t]),t.forEach(i=>{const r=YD(new Vn(this.context,i).toFrequency()),a=Math.round(r),o=r-a,A=this._findClosest(a),l=a-A,u=this._buffers.get(l),c=RD(A+o),h=new aa({url:u,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:c}).connect(this.output);h.start(n,0,u.duration/c,s),Un(this._activeSources.get(a))||this._activeSources.set(a,[]),this._activeSources.get(a).push(h),h.onended=()=>{if(this._activeSources&&this._activeSources.has(a)){const q=this._activeSources.get(a),p=q.indexOf(h);p!==-1&&q.splice(p,1)}}}),this}triggerRelease(t,n){return this.log("triggerRelease",t,n),Array.isArray(t)||(t=[t]),t.forEach(s=>{const i=new Vn(this.context,s).toMidi();if(this._activeSources.has(i)&&this._activeSources.get(i).length){const r=this._activeSources.get(i);n=this.toSeconds(n),r.forEach(a=>{a.stop(n)}),this._activeSources.set(i,[])}}),this}releaseAll(t){const n=this.toSeconds(t);return this._activeSources.forEach(s=>{for(;s.length;)s.shift().stop(n)}),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(t,n,s,i=1){const r=this.toSeconds(s);return this.triggerAttack(t,r,i),Un(n)?(Ut(Un(t),"notes must be an array when duration is array"),t.forEach((a,o)=>{const A=n[Math.min(o,n.length-1)];this.triggerRelease(a,r+this.toSeconds(A))})):this.triggerRelease(t,r+this.toSeconds(n)),this}add(t,n,s){if(Ut(eo(t)||isFinite(t),`note must be a pitch or midi: ${t}`),eo(t)){const i=new Vn(this.context,t).toMidi();this._buffers.add(i,n,s)}else this._buffers.add(t,n,s);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach(t=>{t.forEach(n=>n.dispose())}),this._activeSources.clear(),this}}_n([ms(0)],da.prototype,"attack",void 0);_n([ms(0)],da.prototype,"release",void 0);class zo extends Ye{constructor(){super(it(zo.getDefaults(),arguments,["callback","value"])),this.name="ToneEvent",this._state=new QA("stopped"),this._startOffset=0;const t=it(zo.getDefaults(),arguments,["callback","value"]);this._loop=t.loop,this.callback=t.callback,this.value=t.value,this._loopStart=this.toTicks(t.loopStart),this._loopEnd=this.toTicks(t.loopEnd),this._playbackRate=t.playbackRate,this._probability=t.probability,this._humanize=t.humanize,this.mute=t.mute,this._playbackRate=t.playbackRate,this._state.increasing=!0,this._rescheduleEvents()}static getDefaults(){return Object.assign(Ye.getDefaults(),{callback:se,humanize:!1,loop:!1,loopEnd:"1m",loopStart:0,mute:!1,playbackRate:1,probability:1,value:null})}_rescheduleEvents(t=-1){this._state.forEachFrom(t,n=>{let s;if(n.state==="started"){n.id!==-1&&this.context.transport.clear(n.id);const i=n.time+Math.round(this.startOffset/this._playbackRate);if(this._loop===!0||vn(this._loop)&&this._loop>1){s=1/0,vn(this._loop)&&(s=this._loop*this._getLoopDuration());const r=this._state.getAfter(i);r!==null&&(s=Math.min(s,r.time-i)),s!==1/0&&(this._state.setStateAtTime("stopped",i+s+1,{id:-1}),s=new en(this.context,s));const a=new en(this.context,this._getLoopDuration());n.id=this.context.transport.scheduleRepeat(this._tick.bind(this),a,new en(this.context,i),s)}else n.id=this.context.transport.schedule(this._tick.bind(this),new en(this.context,i))}})}get state(){return this._state.getValueAtTime(this.context.transport.ticks)}get startOffset(){return this._startOffset}set startOffset(t){this._startOffset=t}get probability(){return this._probability}set probability(t){this._probability=t}get humanize(){return this._humanize}set humanize(t){this._humanize=t}start(t){const n=this.toTicks(t);return this._state.getValueAtTime(n)==="stopped"&&(this._state.add({id:-1,state:"started",time:n}),this._rescheduleEvents(n)),this}stop(t){this.cancel(t);const n=this.toTicks(t);if(this._state.getValueAtTime(n)==="started"){this._state.setStateAtTime("stopped",n,{id:-1});const s=this._state.getBefore(n);let i=n;s!==null&&(i=s.time),this._rescheduleEvents(i)}return this}cancel(t){t=Di(t,-1/0);const n=this.toTicks(t);return this._state.forEachFrom(n,s=>{this.context.transport.clear(s.id)}),this._state.cancel(n),this}_tick(t){const n=this.context.transport.getTicksAtTime(t);if(!this.mute&&this._state.getValueAtTime(n)==="started"){if(this.probability<1&&Math.random()>this.probability)return;if(this.humanize){let s=.02;BD(this.humanize)||(s=this.toSeconds(this.humanize)),t+=(Math.random()*2-1)*s}this.callback(t,this.value)}}_getLoopDuration(){return Math.round((this._loopEnd-this._loopStart)/this._playbackRate)}get loop(){return this._loop}set loop(t){this._loop=t,this._rescheduleEvents()}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._rescheduleEvents()}get loopEnd(){return new en(this.context,this._loopEnd).toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t),this._loop&&this._rescheduleEvents()}get loopStart(){return new en(this.context,this._loopStart).toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t),this._loop&&this._rescheduleEvents()}get progress(){if(this._loop){const t=this.context.transport.ticks,n=this._state.get(t);if(n!==null&&n.state==="started"){const s=this._getLoopDuration();return(t-n.time)%s/s}else return 0}else return 0}dispose(){return super.dispose(),this.cancel(),this._state.dispose(),this}}class jo extends Ye{constructor(){super(it(jo.getDefaults(),arguments,["callback","interval"])),this.name="Loop";const t=it(jo.getDefaults(),arguments,["callback","interval"]);this._event=new zo({context:this.context,callback:this._tick.bind(this),loop:!0,loopEnd:t.interval,playbackRate:t.playbackRate,probability:t.probability}),this.callback=t.callback,this.iterations=t.iterations}static getDefaults(){return Object.assign(Ye.getDefaults(),{interval:"4n",callback:se,playbackRate:1,iterations:1/0,probability:1,mute:!1,humanize:!1})}start(t){return this._event.start(t),this}stop(t){return this._event.stop(t),this}cancel(t){return this._event.cancel(t),this}_tick(t){this.callback(t)}get state(){return this._event.state}get progress(){return this._event.progress}get interval(){return this._event.loopEnd}set interval(t){this._event.loopEnd=t}get playbackRate(){return this._event.playbackRate}set playbackRate(t){this._event.playbackRate=t}get humanize(){return this._event.humanize}set humanize(t){this._event.humanize=t}get probability(){return this._event.probability}set probability(t){this._event.probability=t}get mute(){return this._event.mute}set mute(t){this._event.mute=t}get iterations(){return this._event.loop===!0?1/0:this._event.loop}set iterations(t){t===1/0?this._event.loop=!0:this._event.loop=t}dispose(){return super.dispose(),this._event.dispose(),this}}class Da extends Ct{constructor(){super(Object.assign(it(Da.getDefaults(),arguments,["fade"]))),this.name="CrossFade",this._panner=this.context.createStereoPanner(),this._split=this.context.createChannelSplitter(2),this._g2a=new yP({context:this.context}),this.a=new jt({context:this.context,gain:0}),this.b=new jt({context:this.context,gain:0}),this.output=new jt({context:this.context}),this._internalChannels=[this.a,this.b];const t=it(Da.getDefaults(),arguments,["fade"]);this.fade=new Ht({context:this.context,units:"normalRange",value:t.fade}),zt(this,"fade"),this.context.getConstant(1).connect(this._panner),this._panner.connect(this._split),this._panner.channelCount=1,this._panner.channelCountMode="explicit",yn(this._split,this.a.gain,0),yn(this._split,this.b.gain,1),this.fade.chain(this._g2a,this._panner.pan),this.a.connect(this.output),this.b.connect(this.output)}static getDefaults(){return Object.assign(Ct.getDefaults(),{fade:.5})}dispose(){return super.dispose(),this.a.dispose(),this.b.dispose(),this.output.dispose(),this.fade.dispose(),this._g2a.dispose(),this._panner.disconnect(),this._split.disconnect(),this}}class Ho extends Ct{constructor(t){super(t),this.name="Effect",this._dryWet=new Da({context:this.context}),this.wet=this._dryWet.fade,this.effectSend=new jt({context:this.context}),this.effectReturn=new jt({context:this.context}),this.input=new jt({context:this.context}),this.output=this._dryWet,this.input.fan(this._dryWet.a,this.effectSend),this.effectReturn.connect(this._dryWet.b),this.wet.setValueAtTime(t.wet,0),this._internalChannels=[this.effectReturn,this.effectSend],zt(this,"wet")}static getDefaults(){return Object.assign(Ct.getDefaults(),{wet:1})}connectEffect(t){return this._internalChannels.push(t),this.effectSend.chain(t,this.effectReturn),this}dispose(){return super.dispose(),this._dryWet.dispose(),this.effectSend.dispose(),this.effectReturn.dispose(),this.wet.dispose(),this}}class Mh extends Ho{constructor(t){super(t),this.name="LFOEffect",this._lfo=new js({context:this.context,frequency:t.frequency,amplitude:t.depth}),this.depth=this._lfo.amplitude,this.frequency=this._lfo.frequency,this.type=t.type,zt(this,["frequency","depth"])}static getDefaults(){return Object.assign(Ho.getDefaults(),{frequency:1,type:"sine",depth:1})}start(t){return this._lfo.start(t),this}stop(t){return this._lfo.stop(t),this}sync(){return this._lfo.sync(),this}unsync(){return this._lfo.unsync(),this}get type(){return this._lfo.type}set type(t){this._lfo.type=t}dispose(){return super.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class Xo extends Mh{constructor(){super(it(Xo.getDefaults(),arguments,["frequency","baseFrequency","octaves"])),this.name="AutoFilter";const t=it(Xo.getDefaults(),arguments,["frequency","baseFrequency","octaves"]);this.filter=new Hs(Object.assign(t.filter,{context:this.context})),this.connectEffect(this.filter),this._lfo.connect(this.filter.frequency),this.octaves=t.octaves,this.baseFrequency=t.baseFrequency}static getDefaults(){return Object.assign(Mh.getDefaults(),{baseFrequency:200,octaves:2.6,filter:{type:"lowpass",rolloff:-12,Q:1}})}get baseFrequency(){return this._lfo.min}set baseFrequency(t){this._lfo.min=this.toFrequency(t),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._lfo.max=this._lfo.min*Math.pow(2,t)}dispose(){return super.dispose(),this.filter.dispose(),this}}class $o extends Ct{constructor(){super(Object.assign(it($o.getDefaults(),arguments,["pan"]))),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner;const t=it($o.getDefaults(),arguments,["pan"]);this.pan=new Jt({context:this.context,param:this._panner.pan,value:t.pan,minValue:-1,maxValue:1}),this._panner.channelCount=t.channelCount,this._panner.channelCountMode="explicit",zt(this,"pan")}static getDefaults(){return Object.assign(Ct.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}const CP="bit-crusher",wP=`
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;ZD(CP,wP);class ga extends Ct{constructor(){super(it(ga.getDefaults(),arguments,["channels"])),this.name="Split";const t=it(ga.getDefaults(),arguments,["channels"]);this._splitter=this.input=this.output=this.context.createChannelSplitter(t.channels),this._internalChannels=[this._splitter]}static getDefaults(){return Object.assign(Ct.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._splitter.disconnect(),this}}class fa extends Ct{constructor(){super(it(fa.getDefaults(),arguments,["channels"])),this.name="Merge";const t=it(fa.getDefaults(),arguments,["channels"]);this._merger=this.output=this.input=this.context.createChannelMerger(t.channels)}static getDefaults(){return Object.assign(Ct.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._merger.disconnect(),this}}class tA extends Ct{constructor(t){super(t),this.name="StereoEffect",this.input=new jt({context:this.context}),this.input.channelCount=2,this.input.channelCountMode="explicit",this._dryWet=this.output=new Da({context:this.context,fade:t.wet}),this.wet=this._dryWet.fade,this._split=new ga({context:this.context,channels:2}),this._merge=new fa({context:this.context,channels:2}),this.input.connect(this._split),this.input.connect(this._dryWet.a),this._merge.connect(this._dryWet.b),zt(this,["wet"])}connectEffectLeft(...t){this._split.connect(t[0],0,0),Mi(...t),yn(t[t.length-1],this._merge,0,0)}connectEffectRight(...t){this._split.connect(t[0],1,0),Mi(...t),yn(t[t.length-1],this._merge,0,1)}static getDefaults(){return Object.assign(Ct.getDefaults(),{wet:1})}dispose(){return super.dispose(),this._dryWet.dispose(),this._split.dispose(),this._merge.dispose(),this}}class Oh extends tA{constructor(t){super(t),this.feedback=new Ht({context:this.context,value:t.feedback,units:"normalRange"}),this._feedbackL=new jt({context:this.context}),this._feedbackR=new jt({context:this.context}),this._feedbackSplit=new ga({context:this.context,channels:2}),this._feedbackMerge=new fa({context:this.context,channels:2}),this._merge.connect(this._feedbackSplit),this._feedbackMerge.connect(this._split),this._feedbackSplit.connect(this._feedbackL,0,0),this._feedbackL.connect(this._feedbackMerge,0,0),this._feedbackSplit.connect(this._feedbackR,1,0),this._feedbackR.connect(this._feedbackMerge,0,1),this.feedback.fan(this._feedbackL.gain,this._feedbackR.gain),zt(this,["feedback"])}static getDefaults(){return Object.assign(tA.getDefaults(),{feedback:.5})}dispose(){return super.dispose(),this.feedback.dispose(),this._feedbackL.dispose(),this._feedbackR.dispose(),this._feedbackSplit.dispose(),this._feedbackMerge.dispose(),this}}class ur extends Oh{constructor(){super(it(ur.getDefaults(),arguments,["frequency","delayTime","depth"])),this.name="Chorus";const t=it(ur.getDefaults(),arguments,["frequency","delayTime","depth"]);this._depth=t.depth,this._delayTime=t.delayTime/1e3,this._lfoL=new js({context:this.context,frequency:t.frequency,min:0,max:1}),this._lfoR=new js({context:this.context,frequency:t.frequency,min:0,max:1,phase:180}),this._delayNodeL=new ia({context:this.context}),this._delayNodeR=new ia({context:this.context}),this.frequency=this._lfoL.frequency,zt(this,["frequency"]),this._lfoL.frequency.connect(this._lfoR.frequency),this.connectEffectLeft(this._delayNodeL),this.connectEffectRight(this._delayNodeR),this._lfoL.connect(this._delayNodeL.delayTime),this._lfoR.connect(this._delayNodeR.delayTime),this.depth=this._depth,this.type=t.type,this.spread=t.spread}static getDefaults(){return Object.assign(Oh.getDefaults(),{frequency:1.5,delayTime:3.5,depth:.7,type:"sine",spread:180,feedback:0,wet:.5})}get depth(){return this._depth}set depth(t){this._depth=t;const n=this._delayTime*t;this._lfoL.min=Math.max(this._delayTime-n,0),this._lfoL.max=this._delayTime+n,this._lfoR.min=Math.max(this._delayTime-n,0),this._lfoR.max=this._delayTime+n}get delayTime(){return this._delayTime*1e3}set delayTime(t){this._delayTime=t/1e3,this.depth=this._depth}get type(){return this._lfoL.type}set type(t){this._lfoL.type=t,this._lfoR.type=t}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(t){this._lfoL.phase=90-t/2,this._lfoR.phase=t/2+90}start(t){return this._lfoL.start(t),this._lfoR.start(t),this}stop(t){return this._lfoL.stop(t),this._lfoR.stop(t),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._delayNodeL.dispose(),this._delayNodeR.dispose(),this.frequency.dispose(),this}}class eA extends Ho{constructor(){super(it(eA.getDefaults(),arguments,["distortion"])),this.name="Distortion";const t=it(eA.getDefaults(),arguments,["distortion"]);this._shaper=new Oi({context:this.context,length:4096}),this._distortion=t.distortion,this.connectEffect(this._shaper),this.distortion=t.distortion,this.oversample=t.oversample}static getDefaults(){return Object.assign(Ho.getDefaults(),{distortion:.4,oversample:"none"})}get distortion(){return this._distortion}set distortion(t){this._distortion=t;const n=t*100,s=Math.PI/180;this._shaper.setMap(i=>Math.abs(i)<.001?0:(3+n)*i*20*s/(Math.PI+n*Math.abs(i)))}get oversample(){return this._shaper.oversample}set oversample(t){this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.dispose(),this}}class nA extends tA{constructor(){super(it(nA.getDefaults(),arguments,["frequency","depth"])),this.name="Tremolo";const t=it(nA.getDefaults(),arguments,["frequency","depth"]);this._lfoL=new js({context:this.context,type:t.type,min:1,max:0}),this._lfoR=new js({context:this.context,type:t.type,min:1,max:0}),this._amplitudeL=new jt({context:this.context}),this._amplitudeR=new jt({context:this.context}),this.frequency=new Ht({context:this.context,value:t.frequency,units:"frequency"}),this.depth=new Ht({context:this.context,value:t.depth,units:"normalRange"}),zt(this,["frequency","depth"]),this.connectEffectLeft(this._amplitudeL),this.connectEffectRight(this._amplitudeR),this._lfoL.connect(this._amplitudeL.gain),this._lfoR.connect(this._amplitudeR.gain),this.frequency.fan(this._lfoL.frequency,this._lfoR.frequency),this.depth.fan(this._lfoR.amplitude,this._lfoL.amplitude),this.spread=t.spread}static getDefaults(){return Object.assign(tA.getDefaults(),{frequency:10,type:"sine",depth:.5,spread:180})}start(t){return this._lfoL.start(t),this._lfoR.start(t),this}stop(t){return this._lfoL.stop(t),this._lfoR.stop(t),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this.context.transport.syncSignal(this.frequency),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this.context.transport.unsyncSignal(this.frequency),this}get type(){return this._lfoL.type}set type(t){this._lfoL.type=t,this._lfoR.type=t}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(t){this._lfoL.phase=90-t/2,this._lfoR.phase=t/2+90}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._amplitudeL.dispose(),this._amplitudeR.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class We extends Ct{constructor(){super(it(We.getDefaults(),arguments,["solo"])),this.name="Solo";const t=it(We.getDefaults(),arguments,["solo"]);this.input=this.output=new jt({context:this.context}),We._allSolos.has(this.context)||We._allSolos.set(this.context,new Set),We._allSolos.get(this.context).add(this),this.solo=t.solo}static getDefaults(){return Object.assign(Ct.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(t){t?this._addSolo():this._removeSolo(),We._allSolos.get(this.context).forEach(n=>n._updateSolo())}get muted(){return this.input.gain.value===0}_addSolo(){We._soloed.has(this.context)||We._soloed.set(this.context,new Set),We._soloed.get(this.context).add(this)}_removeSolo(){We._soloed.has(this.context)&&We._soloed.get(this.context).delete(this)}_isSoloed(){return We._soloed.has(this.context)&&We._soloed.get(this.context).has(this)}_noSolos(){return!We._soloed.has(this.context)||We._soloed.has(this.context)&&We._soloed.get(this.context).size===0}_updateSolo(){this._isSoloed()?this.input.gain.value=1:this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),We._allSolos.get(this.context).delete(this),this._removeSolo(),this}}We._allSolos=new Map;We._soloed=new Map;class sA extends Ct{constructor(){super(it(sA.getDefaults(),arguments,["pan","volume"])),this.name="PanVol";const t=it(sA.getDefaults(),arguments,["pan","volume"]);this._panner=this.input=new $o({context:this.context,pan:t.pan,channelCount:t.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new hs({context:this.context,volume:t.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=t.mute,zt(this,["pan","volume"])}static getDefaults(){return Object.assign(Ct.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class oi extends Ct{constructor(){super(it(oi.getDefaults(),arguments,["volume","pan"])),this.name="Channel";const t=it(oi.getDefaults(),arguments,["volume","pan"]);this._solo=this.input=new We({solo:t.solo,context:this.context}),this._panVol=this.output=new sA({context:this.context,pan:t.pan,volume:t.volume,mute:t.mute,channelCount:t.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),zt(this,["pan","volume"])}static getDefaults(){return Object.assign(Ct.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(t){this._solo.solo=t}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(t){this._panVol.mute=t}_getBus(t){return oi.buses.has(t)||oi.buses.set(t,new jt({context:this.context})),oi.buses.get(t)}send(t,n=0){const s=this._getBus(t),i=new jt({context:this.context,units:"decibels",gain:n});return this.connect(i),i.connect(s),i}receive(t){return this._getBus(t).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}oi.buses=new Map;class BP extends Ct{constructor(){super(...arguments),this.name="Listener",this.positionX=new Jt({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new Jt({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new Jt({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new Jt({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new Jt({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new Jt({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new Jt({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new Jt({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new Jt({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(Ct.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}}TA(e=>{e.listener=new BP({context:e})});bA(e=>{e.listener.dispose()});class nr extends Ct{constructor(){super(it(nr.getDefaults(),arguments)),this.name="Recorder";const t=it(nr.getDefaults(),arguments);this.input=new jt({context:this.context}),Ut(nr.supported,"Media Recorder API is not available"),this._stream=this.context.createMediaStreamDestination(),this.input.connect(this._stream),this._recorder=new MediaRecorder(this._stream.stream,{mimeType:t.mimeType})}static getDefaults(){return Ct.getDefaults()}get mimeType(){return this._recorder.mimeType}static get supported(){return As!==null&&Reflect.has(As,"MediaRecorder")}get state(){return this._recorder.state==="inactive"?"stopped":this._recorder.state==="paused"?"paused":"started"}start(){return fe(this,void 0,void 0,function*(){Ut(this.state!=="started","Recorder is already started");const t=new Promise(n=>{const s=()=>{this._recorder.removeEventListener("start",s,!1),n()};this._recorder.addEventListener("start",s,!1)});return this._recorder.start(),yield t})}stop(){return fe(this,void 0,void 0,function*(){Ut(this.state!=="stopped","Recorder is not started");const t=new Promise(n=>{const s=i=>{this._recorder.removeEventListener("dataavailable",s,!1),n(i.data)};this._recorder.addEventListener("dataavailable",s,!1)});return this._recorder.stop(),yield t})}pause(){return Ut(this.state==="started","Recorder must be started"),this._recorder.pause(),this}dispose(){return super.dispose(),this.input.dispose(),this._stream.disconnect(),this}}const hn=cn().transport,Ei=cn().destination;cn().destination;cn().listener;cn().draw;cn();var kP="0.1.8";function TP(e){return{all:e=e||new Map,on:function(t,n){var s=e.get(t);s?s.push(n):e.set(t,[n])},off:function(t,n){var s=e.get(t);s&&(n?s.splice(s.indexOf(n)>>>0,1):e.set(t,[]))},emit:function(t,n){var s=e.get(t);s&&s.slice().map(function(i){i(n)}),(s=e.get("*"))&&s.slice().map(function(i){i(t,n)})}}}const yt=TP(),KD=()=>{const e=document.querySelector("#bottom");e&&e.scrollIntoView(!1)};const bP={key:0,class:"screen-overlay"},UP={style:{"text-align":"center","font-style":"italic","margin-top":"6px"}},RA=oe({props:{overlayId:null,showOnRender:{type:Boolean}},setup(e){const t=e,n=()=>{const a=document.querySelector("#top");a&&a.scrollIntoView(!1)};let s=de(t.showOnRender);const i=()=>{s.value=!0,n()},r=()=>{s.value=!1,KD()};return yt.on("activate_overlay_by_id",a=>a===t.overlayId&&i()),(a,o)=>Me(s)?(vt(),ne("div",bP,[qt("div",{class:"screen-overlay__close",onClickOnce:r},"Close",32),qt("div",UP,[qt("small",null,"version "+Cs(Me(kP)),1)]),jp(a.$slots,"default"),qt("div",{class:"screen-overlay__close",onClickOnce:r},"Close",32)])):Jn("",!0)}});const QP=qt("div",{class:"welcome-overlay"},[qt("p",null,[_e(" Thanks for checking out this web-based sampler. I "),qt("span",{class:"welcome-overlay__highlight"},"LOVE"),_e(" the PO-33 more than almost anything else I own. It's "),qt("a",{rel:"noopener noreferrer",href:"https://teenage.engineering/store/po-33/",target:"_blank"},"a fully featured sampler"),_e(" that fits in your pocket. I want to share that joy with more people. Hopefully this fun imitation of the real device spurs you on to go and buy it. "),qt("a",{rel:"noopener noreferrer",href:"https://teenage.engineering/store/po-33/",target:"_blank"},"DO IT!"),_e(" If you like sample-based creativity, you will NOT be dissapointed. ")]),qt("hr"),qt("p",null," Not everything is implemented yet, and not everything is one-to-one functionality with the physical device. I built this site using Chrome and an android device. So there will definitely be jank. It works great on macOS Chrome, Windows Chrome, Android Chrome and iOS Chrome. "),qt("p",null," Since it's on the web I've added a way for us to upload audio files straight to a bank! You can sample from the mic as as well. "),qt("p",null,` I've also given us a way to save sessions in-browser so you can come back to a project later (subject to change, meaning you may lose some work during future updates). And of course we can "record out" our sessions and download sequences to an audio mixdown. `),qt("p",null,[_e(" We can interact with the BO-33 via keyboard, midi controller, touch, and mouse. Keyboard and midi actions can be remapped as well and you can save your custom maps in-browser. If you use it "),qt("a",{href:"https://docs.google.com/forms/d/e/1FAIpQLScpr9GhJzk4jMJbfpOqM6RJJ23-Rj8rtUu2-SgQinQbf6F8aw/viewform?usp=sf_link"}," I'd love to get some feedback.")]),qt("i",null,"Disclaimer: I'm not affiliated with Teenage Engineering, just a fan of the PO-33.")],-1),vP=oe({setup(e){return(n,s)=>(vt(),ve(RA,{"overlay-id":"welcome","show-on-render":!0},{default:we(()=>[QP]),_:1}))}});const RP=["disabled"],En=oe({props:{overlayId:null,disabled:{type:Boolean}},setup(e){const t=e,n=()=>yt.emit("activate_overlay_by_id",t.overlayId),s=de(t.disabled||!1);return(i,r)=>(vt(),ne("div",{class:Rn(["floating-action-button",{fab__disabled:s.value}])},[qt("button",{disabled:s.value,onClick:n},[jp(i.$slots,"default")],8,RP)],2))}});const YP=oe({setup(e){const t=()=>document.getElementById("global_pan_button"),n=()=>document.documentElement;let s={top:0,left:0,x:0,y:0},i=de(!1),r=!1;const a=function(l){const u=t(),c=n();!u||!c||(s={left:c.scrollLeft,top:c.scrollTop,x:l.clientX,y:l.clientY},i.value=!0)},o=function(l){if(!i.value)return;const u=t(),c=n();if(!u||!c)return;const h=l.clientX-s.x,q=l.clientY-s.y;c.scrollTop=s.top-q,c.scrollLeft=s.left-h,r=!0},A=function(){r||KD(),i.value=!1,r=!1};return document.addEventListener("pointerup",A),(l,u)=>{const c=Gl("font-awesome-icon");return vt(),ve(En,{id:"global_pan_button",class:Rn(["global_action_button",{global_action_button__inverted:Me(i)}]),onPointerdown:a,onPointermove:o},{default:we(()=>[Me(i)?Jn("",!0):(vt(),ve(c,{key:0,icon:"fa-solid fa-arrows-to-dot"})),Me(i)?(vt(),ve(c,{key:1,icon:"fa-solid fa-arrows-up-down-left-right"})):Jn("",!0)]),_:1},8,["class"])}}});var GP="/bo-33/assets/bo33.png",_P="/bo-33/assets/animation/noun-boxing-1242964.png",yh="/bo-33/assets/animation/noun-blot-1173273.png",xP="/bo-33/assets/animation/noun-boom-1156475.png",FP="/bo-33/assets/animation/noun-boxing-1671486.png",ZP="/bo-33/assets/animation/noun-boxing-1942086.png",KP="/bo-33/assets/animation/noun-boxing-3704327.png",JP="/bo-33/assets/animation/noun-boxing-4579485.png",LP="/bo-33/assets/animation/noun-boxing-4580239.png";var Ns=(e,t)=>{const n=e.__vccOpts||e;for(const[s,i]of t)n[s]=i;return n};const zP={},jP={class:"po_display__animations"},HP=T0('<img class="po_display__animations__image" style="top:65%;left:42%;height:45%;" src="'+_P+'" alt="boxing gloves graphic" title="boxing gloves graphic by art shop from Noun Project" data-image-credit="&#39;boxing&#39; icon by art shop from Noun Project" data-image-credit-link="https://thenounproject.com/browse/icons/term/boxing/" data-v-16df69d0><img class="po_display__animations__image" style="top:4%;left:56%;height:15%;" src="'+yh+'" alt="cartoon bang graphic" title="cartoon bang graphic by Elisabeta from Noun Project" data-image-credit="&#39;blot&#39; icon by Elisabeta from Noun Project" data-image-credit-link="https://thenounproject.com/browse/icons/term/blot/" data-v-16df69d0><img class="po_display__animations__image" style="top:19%;left:62%;height:10%;" src="'+yh+'" alt="cartoon bang graphic" title="cartoon bang graphic by Elisabeta from Noun Project" data-image-credit="&#39;blot&#39; icon by Elisabeta from Noun Project" data-image-credit-link="https://thenounproject.com/browse/icons/term/blot/" data-v-16df69d0><img class="po_display__animations__image" style="top:0%;left:30%;rotate:-17deg;" src="'+xP+'" alt="cartoon boom graphic" title="cartoon boom graphic by Michael G Brown from Noun Project" data-image-credit="&#39;boom&#39; icon by Michael G Brown from Noun Project" data-image-credit-link="https://thenounproject.com/browse/icons/term/boom/" data-v-16df69d0><img class="po_display__animations__image" style="top:20%;left:38%;height:50%;" src="'+FP+'" alt="two stick figures boxing" title="two stick figures boxing by Adrien Coquet from Noun Project" data-image-credit="&#39;boxing&#39; icon by Adrien Coquet from Noun Project" data-image-credit-link="https://thenounproject.com/browse/icons/term/boxing/" data-v-16df69d0><img class="po_display__animations__image" style="top:22%;left:4%;rotate:30deg;" src="'+ZP+'" alt="punching bag graphic" title="punching bag graphic by Yo! Baba from Noun Project" data-image-credit="&#39;boxing&#39; icon by Yo! Baba from Noun Project" data-image-credit-link="https://thenounproject.com/browse/icons/term/boxing/" data-v-16df69d0><img class="po_display__animations__image" style="top:10%;left:91%;rotate:-15deg;" src="'+KP+'" alt="speed bag graphic" title="speed bag graphic by Vectorstall from Noun Project" data-image-credit="&#39;boxing&#39; icon by Vectorstall from Noun Project" data-image-credit-link="https://thenounproject.com/browse/icons/term/boxing/" data-v-16df69d0><img class="po_display__animations__image" style="top:20%;left:10%;height:80%;" src="'+JP+'" alt="female boxer graphic" title="female boxer graphic by Amethyst Studio from Noun Project" data-image-credit="&#39;boxing&#39; icon by Amethyst Studio from Noun Project" data-image-credit-link="https://thenounproject.com/browse/icons/term/boxing/" data-v-16df69d0><img class="po_display__animations__image" style="top:20%;left:70%;height:80%;" src="'+LP+'" alt="male boxer graphic" title="male boxer graphic by Amethyst Studio from Noun Project" data-image-credit="&#39;boxing&#39; icon by Amethyst Studio from Noun Project" data-image-credit-link="https://thenounproject.com/browse/icons/term/boxing/" data-v-16df69d0>',9),XP=[HP];function $P(e,t){return vt(),ne("div",jP,XP)}var tI=Ns(zP,[["render",$P],["__scopeId","data-v-16df69d0"]]);const U={SOUND_DOWN:"SOUND_DOWN",SOUND_UP:"SOUND_UP",PATTERN_DOWN:"PATTERN_DOWN",PATTERN_UP:"PATTERN_UP",BPM_DOWN:"BPM_DOWN",BPM_UP:"BPM_UP",POT_LEFT_DOWN:"POT_LEFT_DOWN",POT_LEFT_UP:"POT_LEFT_UP",POT_RIGHT_DOWN:"POT_RIGHT_DOWN",POT_RIGHT_UP:"POT_RIGHT_UP",RECORD_DOWN:"RECORD_DOWN",RECORD_UP:"RECORD_UP",FX_DOWN:"FX_DOWN",FX_UP:"FX_UP",PLAY_DOWN:"PLAY_DOWN",PLAY_UP:"PLAY_UP",WRITE_DOWN:"WRITE_DOWN",WRITE_UP:"WRITE_UP",PAD_1_DOWN:"PAD_1_DOWN",PAD_1_UP:"PAD_1_UP",PAD_2_DOWN:"PAD_2_DOWN",PAD_2_UP:"PAD_2_UP",PAD_3_DOWN:"PAD_3_DOWN",PAD_3_UP:"PAD_3_UP",PAD_4_DOWN:"PAD_4_DOWN",PAD_4_UP:"PAD_4_UP",PAD_5_DOWN:"PAD_5_DOWN",PAD_5_UP:"PAD_5_UP",PAD_6_DOWN:"PAD_6_DOWN",PAD_6_UP:"PAD_6_UP",PAD_7_DOWN:"PAD_7_DOWN",PAD_7_UP:"PAD_7_UP",PAD_8_DOWN:"PAD_8_DOWN",PAD_8_UP:"PAD_8_UP",PAD_9_DOWN:"PAD_9_DOWN",PAD_9_UP:"PAD_9_UP",PAD_10_DOWN:"PAD_10_DOWN",PAD_10_UP:"PAD_10_UP",PAD_11_DOWN:"PAD_11_DOWN",PAD_11_UP:"PAD_11_UP",PAD_12_DOWN:"PAD_12_DOWN",PAD_12_UP:"PAD_12_UP",PAD_13_DOWN:"PAD_13_DOWN",PAD_13_UP:"PAD_13_UP",PAD_14_DOWN:"PAD_14_DOWN",PAD_14_UP:"PAD_14_UP",PAD_15_DOWN:"PAD_15_DOWN",PAD_15_UP:"PAD_15_UP",PAD_16_DOWN:"PAD_16_DOWN",PAD_16_UP:"PAD_16_UP"},Ft={PAD_1_DOWN:U.PAD_1_DOWN,PAD_2_DOWN:U.PAD_2_DOWN,PAD_3_DOWN:U.PAD_3_DOWN,PAD_4_DOWN:U.PAD_4_DOWN,PAD_5_DOWN:U.PAD_5_DOWN,PAD_6_DOWN:U.PAD_6_DOWN,PAD_7_DOWN:U.PAD_7_DOWN,PAD_8_DOWN:U.PAD_8_DOWN,PAD_9_DOWN:U.PAD_9_DOWN,PAD_10_DOWN:U.PAD_10_DOWN,PAD_11_DOWN:U.PAD_11_DOWN,PAD_12_DOWN:U.PAD_12_DOWN,PAD_13_DOWN:U.PAD_13_DOWN,PAD_14_DOWN:U.PAD_14_DOWN,PAD_15_DOWN:U.PAD_15_DOWN,PAD_16_DOWN:U.PAD_16_DOWN},eI={PAD_1_UP:U.PAD_1_UP,PAD_2_UP:U.PAD_2_UP,PAD_3_UP:U.PAD_3_UP,PAD_4_UP:U.PAD_4_UP,PAD_5_UP:U.PAD_5_UP,PAD_6_UP:U.PAD_6_UP,PAD_7_UP:U.PAD_7_UP,PAD_8_UP:U.PAD_8_UP,PAD_9_UP:U.PAD_9_UP,PAD_10_UP:U.PAD_10_UP,PAD_11_UP:U.PAD_11_UP,PAD_12_UP:U.PAD_12_UP,PAD_13_UP:U.PAD_13_UP,PAD_14_UP:U.PAD_14_UP,PAD_15_UP:U.PAD_15_UP,PAD_16_UP:U.PAD_16_UP};class nI{constructor(){this.layers=this.initializeLayers(),this.stack=[],this.cachedDisplayLights={},this.displayLightGrid=null}activateLayer(t){this.addLayerToStack(this.layers[t])}deactivateLayer(t){this.removeLayerFromStack(this.layers[t])}setLayerGrid(t,n){this.layers[t].grid=n,this.refreshLightDisplay()}setLayerLight(t,n,s,i=!1){this.layers[t].setLight(n,s,i),this.refreshLightDisplay()}setAllLayerLights(t,n,s=!1){const i=this.layers[t];Object.keys(i.grid).forEach(r=>i.setLight(r,n,s)),this.refreshLightDisplay()}addLayerToStack(t){this.stack.push(t),this.refreshLightDisplay()}removeLayerFromStack(t){this.stack=this.stack.filter(n=>n.id!==t.id),this.refreshLightDisplay()}refreshLightDisplay(){this.displayLightGrid=this.reduceStackToOneLightGrid(),this.emitLightEvents(),this.cachedDisplayLights=nt({},this.displayLightGrid.asObject())}reduceStackToOneLightGrid(){const t=this.createBaseLayer();return this.stack.reduceRight((n,s)=>(n.canMergeWith(s.id)&&n.merge(s),n),t)}emitLightEvents(){for(const t in this.displayLightGrid.grid){const n=t.replace("DOWN","UP"),s=this.displayLightGrid.grid[t];JSON.stringify(this.cachedDisplayLights[t])!==JSON.stringify(s.asObject())&&(s.state===re.OFF&&(yt.emit("pad_light_off",{pad_id:n}),yt.emit("pad_blink_light_off",{pad_id:n})),s.state===re.DIM&&yt.emit("pad_light_on",{pad_id:t,bright:!1}),s.state===re.BRIGHT&&yt.emit("pad_light_on",{pad_id:t,bright:!0}),s.blinking||yt.emit("pad_blink_light_off",{pad_id:n}),s.blinking&&yt.emit("pad_blink_light_on",{pad_id:t,bright:s.state===re.BRIGHT}))}}createBaseLayer(){const t=new Wh(Qt.BASE);for(const n in Qt)t.mergesWith.push(n);return t}initializeLayers(){const t={};for(const n in Qt)t[n]=new Wh(n);return t[Qt.FX].mergesWith.push(Qt.PLAY),t[Qt.WRITE].mergesWith.push(Qt.PLAY),t[Qt.PLAY].mergesWith.push(Qt.WRITE),t[Qt.PLAY].mergesWith.push(Qt.FX),t}}const sI=(e,t)=>e.filter(n=>t.includes(n));class Wh{constructor(t){this.id=t,this.mergesWith=[],this.grid=this.initializeLightGrid()}setLight(t,n,s){const i=this.grid[t];i.setState(n),i.setBlinking(s)}merge(t){for(const n in this.grid)this.grid[n].state===re.OFF&&(this.grid[n]=t.grid[n]);this.mergesWith=sI(this.mergesWith,t.mergesWith)}canMergeWith(t){return!!this.mergesWith.includes(t)}initializeLightGrid(){const t={},n=wt(nt({},Ft),{PLAY_DOWN:U.PLAY_DOWN});for(const s in n){const i=n[s];t[i]=new iI(i)}return t}asObject(){const t={};for(const n in this.grid){const s=this.grid[n],i=s.asObject();t[s.padId]=i}return t}}class iI{constructor(t){this.padId=t,this.state=re.OFF,this.blinking=!1}setState(t){this.state=t}setBlinking(t){this.blinking=t}asObject(){return{state:this.state,blinking:this.blinking,padId:this.padId}}}const re={OFF:"off",DIM:"dim",BRIGHT:"bright"},Qt={BASE:"BASE",SOUND:"SOUND",PATTERN:"PATTERN",BPM:"BPM",RECORD:"RECORD",FX:"FX",PLAY:"PLAY",WRITE:"WRITE",PAD:"PAD"},Zt=new nI,kn=(e,t,n)=>Math.min(Math.max(e,t),n),Eh=(e,t,n)=>(e-t)/(n-t),Ph=(e,t,n,s,i)=>(n-t)*((e-s)/(i-s))+t,Ih=(e,t)=>parseFloat((Math.random()*(t-e)+e).toFixed(2)),rI=(e,t)=>(e=Math.ceil(e),t=Math.floor(t),Math.floor(Math.random()*(t-e+1)+e)),aI=e=>e[Math.floor(Math.random()*e.length)],oI=(e,t=1)=>[...e].sort(()=>.5-Math.random()).slice(0,t),JD=e=>JSON.parse(JSON.stringify(e)),Ue=e=>AI[e]||1,AI={[-12]:.5,[-11]:.529732,[-10]:.561231,[-9]:.594604,[-8]:.629961,[-7]:.66742,[-6]:.707107,[-5]:.749154,[-4]:.793701,[-3]:.840896,[-2]:.890899,[-1]:.943874,[0]:1,[1]:1.059463,[2]:1.122462,[3]:1.189207,[4]:1.259921,[5]:1.33484,[6]:1.414214,[7]:1.498307,[8]:1.587401,[9]:1.681793,[10]:1.781797,[11]:1.887749,[12]:2},Ce=e=>{Al=e,yt.emit("write_message_to_display",e)},cI=()=>{Al=null,yt.emit("write_message_to_display",Al)},lI=e=>{yt.emit("toggle_write_mode",e)};let Al=null;class LD{constructor(t=null){this.sound=t,this.bankPitchInSemitones=0,this.bankVolume=0,this.bankFilter=0,this.trimStep=.005}play(){throw"must implement a play() method"}setSound(){throw"must implement a setSound() method"}isEmpty(){throw"must implement a isEmpty() method"}load(){throw"must implement a load() method"}clear(){throw"must implement a clear() method"}increaseBankPitch(){const t=this.bankPitchInSemitones;this.setBankPitch(t+1)}decreaseBankPitch(){const t=this.bankPitchInSemitones;this.setBankPitch(t-1)}setBankPitch(t){const n=kn(t,-12,12);this.bankPitchInSemitones=n,Ce(`pitch: ${n}`)}increaseBankVolume(){const t=this.bankVolume;this.setBankVolume(t+1)}decreaseBankVolume(){const t=this.bankVolume;this.setBankVolume(t-1)}setBankVolume(t){const n=kn(t,-100,10);this.bankVolume=n,Ce(`volume: ${n}`)}increaseBankFilter(){const t=this.bankFilter;this.setBankFilter(t+.5)}decreaseBankFilter(){const t=this.bankFilter;this.setBankFilter(t-.5)}setBankFilter(t){const n=kn(t,-10,10);this.bankFilter=n,Ce(`filter: ${n}`)}getBankFilters(){const t=this.bankFilter,n=t<0?10-Math.abs(t):Math.abs(t),s=Math.round(Math.pow(n,4.5));return{lowpassCutoff:t>=0?2e4:s,highpassCutoff:t<=0?0:s}}getBankPitch(){return this.bankPitchInSemitones}getBankVolume(){return this.bankVolume}writeTrimToDisplay(t){const s=Math.ceil(52*t.startPercentage),i=Math.ceil(52*t.endPercentage),r=Array(52).fill("-").map((a,o)=>o===s?"<":o===i-1?">":o<s||o>=i?" ":a).join("");Ce(["TRIM",r].join(`
`))}}class bu extends LD{constructor(t,n=null){super(),this.id=t,this.sound=n,this.trims=Ch(Sh),this.bankType="DrumSoundBank"}play(t,n,s={}){if(this.sound){const{pitch:i,volume:r,lowpassCutoff:a,highpassCutoff:o}=s,A=this.getBankPitch(),u=Ue(i!==void 0?i:A);this.sound.pitch(u,n);const c=this.getBankVolume(),h=r!==void 0?r:c;this.sound.volume(h,n);const{lowpassCutoff:q,highpassCutoff:p}=this.getBankFilters(),g=a!==void 0?a:q;this.sound.lowpassFilter(g,n);const d=o!==void 0?o:p;this.sound.highpassFilter(d,n),this.sound.play(nt({time:n},this.trims[t]))}}setSound(t){this.sound=t}setTrim(t,{startPercentage:n,endPercentage:s}){this.trims[t]={startPercentage:n,endPercentage:s}}getTrimFromLastPlayed(){return this.trims[It.getLastSoundTriggeredByPadPress()]}isEmpty(){return this.sound===null}load(t){Ce("loading bank"),t.bankType==="MelodicSoundBank"?(this.sound=t.sound.clone(),this.trims=uI(Sh,t.trim)):t.bankType==="DrumSoundBank"&&(this.sound=t.sound.clone(),this.trims=Ch(t.trims))}loadFromAudioInput(t){this.setSound(t),this.setTrimsBySoundTransients(t)}setTrimsBySoundTransients(){console.log("setting trims by transients")}clear(){this.sound!==null&&(this.sound.dispose(),this.sound=null)}increaseStartTrim(){const t=It.getLastSoundTriggeredByPadPress();this.increaseTrim("startPercentage",this.trims[t].endPercentage-this.trimStep),this.increaseEndTrim()}decreaseStartTrim(){this.decreaseTrim("startPercentage"),this.decreaseEndTrim()}increaseEndTrim(){this.increaseTrim("endPercentage")}decreaseEndTrim(){const t=It.getLastSoundTriggeredByPadPress();this.decreaseTrim("endPercentage",this.trims[t].startPercentage+this.trimStep)}increaseTrim(t,n=1){const s=It.getLastSoundTriggeredByPadPress();this.trims[s][t]=kn(this.trims[s][t]+this.trimStep,0,n),this.writeTrimToDisplay(this.trims[s])}decreaseTrim(t,n=0){const s=It.getLastSoundTriggeredByPadPress();this.trims[s][t]=kn(this.trims[s][t]-this.trimStep,n,1),this.writeTrimToDisplay(this.trims[s])}}const Sh={[U.PAD_1_DOWN]:{startPercentage:0,endPercentage:1/16},[U.PAD_2_DOWN]:{startPercentage:1/16,endPercentage:2/16},[U.PAD_3_DOWN]:{startPercentage:2/16,endPercentage:3/16},[U.PAD_4_DOWN]:{startPercentage:3/16,endPercentage:4/16},[U.PAD_5_DOWN]:{startPercentage:4/16,endPercentage:5/16},[U.PAD_6_DOWN]:{startPercentage:5/16,endPercentage:6/16},[U.PAD_7_DOWN]:{startPercentage:6/16,endPercentage:7/16},[U.PAD_8_DOWN]:{startPercentage:7/16,endPercentage:8/16},[U.PAD_9_DOWN]:{startPercentage:8/16,endPercentage:9/16},[U.PAD_10_DOWN]:{startPercentage:9/16,endPercentage:10/16},[U.PAD_11_DOWN]:{startPercentage:10/16,endPercentage:11/16},[U.PAD_12_DOWN]:{startPercentage:11/16,endPercentage:12/16},[U.PAD_13_DOWN]:{startPercentage:12/16,endPercentage:13/16},[U.PAD_14_DOWN]:{startPercentage:13/16,endPercentage:14/16},[U.PAD_15_DOWN]:{startPercentage:14/16,endPercentage:15/16},[U.PAD_16_DOWN]:{startPercentage:15/16,endPercentage:16/16}},Ch=e=>{const t={};for(const n in e)t[n]=nt({},e[n]);return t},uI=(e,t)=>{const n={},s=t.endPercentage-t.startPercentage;let i=0;for(const r in e){const a=t.startPercentage+s*(i/16),o=t.startPercentage+s*((i+1)/16);n[r]={startPercentage:a,endPercentage:o},i+=1}return n};class YA extends LD{constructor(t,n=null){super(),this.id=t,this.sound=n,this.bankType="MelodicSoundBank",this.trim={startPercentage:0,endPercentage:1}}play(t,n,s={}){if(this.sound){const{pitch:i,volume:r,lowpassCutoff:a,highpassCutoff:o}=s,A=this.getBankPitch(),u=Ue(i!==void 0?i:A)*qI[t];this.sound.pitch(u,n);const c=this.getBankVolume(),h=r!==void 0?r:c;this.sound.volume(h,n);const{lowpassCutoff:q,highpassCutoff:p}=this.getBankFilters(),g=a!==void 0?a:q;this.sound.lowpassFilter(g,n);const d=o!==void 0?o:p;this.sound.highpassFilter(d,n),this.sound.play(nt({time:n},this.trim))}}setSound(t){this.sound=t}isEmpty(){return this.sound===null}load(t){Ce("loading bank"),t.bankType==="MelodicSoundBank"?this.sound=t.sound.clone():t.bankType==="DrumSoundBank"&&(this.sound=t.sound.clone(t.getTrimFromLastPlayed()))}loadFromAudioInput(t){this.setSound(t)}clear(){this.sound!==null&&(this.sound.dispose(),this.sound=null)}increaseStartTrim(){this.increaseTrim("startPercentage",this.trim.endPercentage-this.trimStep),this.increaseEndTrim()}decreaseStartTrim(){this.decreaseTrim("startPercentage"),this.decreaseEndTrim()}increaseEndTrim(){this.increaseTrim("endPercentage")}decreaseEndTrim(){this.decreaseTrim("endPercentage",this.trim.startPercentage+this.trimStep)}increaseTrim(t,n=1){const s=kn(this.trim[t]+this.trimStep,0,n);return this.trim[t]=s,this.writeTrimToDisplay(this.trim),s}decreaseTrim(t,n=0){const s=kn(this.trim[t]-this.trimStep,n,1);return this.trim[t]=s,this.writeTrimToDisplay(this.trim),s}}const qI={[U.PAD_13_DOWN]:Ue(-12),[U.PAD_14_DOWN]:Ue(-10),[U.PAD_15_DOWN]:Ue(-9),[U.PAD_16_DOWN]:Ue(-7),[U.PAD_9_DOWN]:Ue(-5),[U.PAD_10_DOWN]:Ue(-4),[U.PAD_11_DOWN]:Ue(-2),[U.PAD_12_DOWN]:Ue(-1),[U.PAD_5_DOWN]:Ue(0),[U.PAD_6_DOWN]:Ue(2),[U.PAD_7_DOWN]:Ue(3),[U.PAD_8_DOWN]:Ue(5),[U.PAD_1_DOWN]:Ue(7),[U.PAD_2_DOWN]:Ue(8),[U.PAD_3_DOWN]:Ue(10),[U.PAD_4_DOWN]:Ue(11)};var Cr=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};function hI(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function so(e){throw new Error('Could not dynamically require "'+e+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var zD={exports:{}};/*!
 * Toastify js 1.12.0
 * https://github.com/apvarun/toastify-js
 * @license MIT licensed
 *
 * Copyright (C) 2018 Varun A P
 */(function(e){(function(t,n){e.exports?e.exports=n():t.Toastify=n()})(Cr,function(t){var n=function(a){return new n.lib.init(a)},s="1.12.0";n.defaults={oldestFirst:!0,text:"Toastify is awesome!",node:void 0,duration:3e3,selector:void 0,callback:function(){},destination:void 0,newWindow:!1,close:!1,gravity:"toastify-top",positionLeft:!1,position:"",backgroundColor:"",avatar:"",className:"",stopOnFocus:!0,onClick:function(){},offset:{x:0,y:0},escapeMarkup:!0,ariaLive:"polite",style:{background:""}},n.lib=n.prototype={toastify:s,constructor:n,init:function(a){return a||(a={}),this.options={},this.toastElement=null,this.options.text=a.text||n.defaults.text,this.options.node=a.node||n.defaults.node,this.options.duration=a.duration===0?0:a.duration||n.defaults.duration,this.options.selector=a.selector||n.defaults.selector,this.options.callback=a.callback||n.defaults.callback,this.options.destination=a.destination||n.defaults.destination,this.options.newWindow=a.newWindow||n.defaults.newWindow,this.options.close=a.close||n.defaults.close,this.options.gravity=a.gravity==="bottom"?"toastify-bottom":n.defaults.gravity,this.options.positionLeft=a.positionLeft||n.defaults.positionLeft,this.options.position=a.position||n.defaults.position,this.options.backgroundColor=a.backgroundColor||n.defaults.backgroundColor,this.options.avatar=a.avatar||n.defaults.avatar,this.options.className=a.className||n.defaults.className,this.options.stopOnFocus=a.stopOnFocus===void 0?n.defaults.stopOnFocus:a.stopOnFocus,this.options.onClick=a.onClick||n.defaults.onClick,this.options.offset=a.offset||n.defaults.offset,this.options.escapeMarkup=a.escapeMarkup!==void 0?a.escapeMarkup:n.defaults.escapeMarkup,this.options.ariaLive=a.ariaLive||n.defaults.ariaLive,this.options.style=a.style||n.defaults.style,a.backgroundColor&&(this.options.style.background=a.backgroundColor),this},buildToast:function(){if(!this.options)throw"Toastify is not initialized";var a=document.createElement("div");a.className="toastify on "+this.options.className,this.options.position?a.className+=" toastify-"+this.options.position:this.options.positionLeft===!0?(a.className+=" toastify-left",console.warn("Property `positionLeft` will be depreciated in further versions. Please use `position` instead.")):a.className+=" toastify-right",a.className+=" "+this.options.gravity,this.options.backgroundColor&&console.warn('DEPRECATION NOTICE: "backgroundColor" is being deprecated. Please use the "style.background" property.');for(var o in this.options.style)a.style[o]=this.options.style[o];if(this.options.ariaLive&&a.setAttribute("aria-live",this.options.ariaLive),this.options.node&&this.options.node.nodeType===Node.ELEMENT_NODE)a.appendChild(this.options.node);else if(this.options.escapeMarkup?a.innerText=this.options.text:a.innerHTML=this.options.text,this.options.avatar!==""){var A=document.createElement("img");A.src=this.options.avatar,A.className="toastify-avatar",this.options.position=="left"||this.options.positionLeft===!0?a.appendChild(A):a.insertAdjacentElement("afterbegin",A)}if(this.options.close===!0){var l=document.createElement("button");l.type="button",l.setAttribute("aria-label","Close"),l.className="toast-close",l.innerHTML="&#10006;",l.addEventListener("click",function(d){d.stopPropagation(),this.removeElement(this.toastElement),window.clearTimeout(this.toastElement.timeOutValue)}.bind(this));var u=window.innerWidth>0?window.innerWidth:screen.width;(this.options.position=="left"||this.options.positionLeft===!0)&&u>360?a.insertAdjacentElement("afterbegin",l):a.appendChild(l)}if(this.options.stopOnFocus&&this.options.duration>0){var c=this;a.addEventListener("mouseover",function(d){window.clearTimeout(a.timeOutValue)}),a.addEventListener("mouseleave",function(){a.timeOutValue=window.setTimeout(function(){c.removeElement(a)},c.options.duration)})}if(typeof this.options.destination!="undefined"&&a.addEventListener("click",function(d){d.stopPropagation(),this.options.newWindow===!0?window.open(this.options.destination,"_blank"):window.location=this.options.destination}.bind(this)),typeof this.options.onClick=="function"&&typeof this.options.destination=="undefined"&&a.addEventListener("click",function(d){d.stopPropagation(),this.options.onClick()}.bind(this)),typeof this.options.offset=="object"){var h=i("x",this.options),q=i("y",this.options),p=this.options.position=="left"?h:"-"+h,g=this.options.gravity=="toastify-top"?q:"-"+q;a.style.transform="translate("+p+","+g+")"}return a},showToast:function(){this.toastElement=this.buildToast();var a;if(typeof this.options.selector=="string"?a=document.getElementById(this.options.selector):this.options.selector instanceof HTMLElement||typeof ShadowRoot!="undefined"&&this.options.selector instanceof ShadowRoot?a=this.options.selector:a=document.body,!a)throw"Root element is not defined";var o=n.defaults.oldestFirst?a.firstChild:a.lastChild;return a.insertBefore(this.toastElement,o),n.reposition(),this.options.duration>0&&(this.toastElement.timeOutValue=window.setTimeout(function(){this.removeElement(this.toastElement)}.bind(this),this.options.duration)),this},hideToast:function(){this.toastElement.timeOutValue&&clearTimeout(this.toastElement.timeOutValue),this.removeElement(this.toastElement)},removeElement:function(a){a.className=a.className.replace(" on",""),window.setTimeout(function(){this.options.node&&this.options.node.parentNode&&this.options.node.parentNode.removeChild(this.options.node),a.parentNode&&a.parentNode.removeChild(a),this.options.callback.call(a),n.reposition()}.bind(this),400)}},n.reposition=function(){for(var a={top:15,bottom:15},o={top:15,bottom:15},A={top:15,bottom:15},l=document.getElementsByClassName("toastify"),u,c=0;c<l.length;c++){r(l[c],"toastify-top")===!0?u="toastify-top":u="toastify-bottom";var h=l[c].offsetHeight;u=u.substr(9,u.length-1);var q=15,p=window.innerWidth>0?window.innerWidth:screen.width;p<=360?(l[c].style[u]=A[u]+"px",A[u]+=h+q):r(l[c],"toastify-left")===!0?(l[c].style[u]=a[u]+"px",a[u]+=h+q):(l[c].style[u]=o[u]+"px",o[u]+=h+q)}return this};function i(a,o){return o.offset[a]?isNaN(o.offset[a])?o.offset[a]:o.offset[a]+"px":"0px"}function r(a,o){return!a||typeof o!="string"?!1:!!(a.className&&a.className.trim().split(/\s+/gi).indexOf(o)>-1)}return n.lib.init.prototype=n.lib,n})})(zD);var pI=zD.exports;const Uu={background:"linear-gradient(to right, #00b09b, #96c93d)",zIndex:10,position:"absolute",borderRadius:"5px",padding:"5px",width:"200px",margin:"auto"},Qu=(e=Uu)=>(t,n=5e3,s=!1)=>pI({text:t,duration:n,newWindow:!0,gravity:"bottom",position:"center",stopOnFocus:!0,style:e,className:"po_33_toast",close:s}).showToast(),dI=Qu(wt(nt({},Uu),{background:"#d0cfd0"})),DI=Qu(wt(nt({},Uu),{background:"#FFD36E"})),gI=Qu();var qn={info:dI,error:DI,success:gI};const jD=async e=>await fetch(e).then(n=>n.blob()),fI=async e=>{const t=await jD(e);return URL.createObjectURL(t)},mI=e=>new Promise(t=>{const n=new FileReader;n.readAsDataURL(e),n.onloadend=function(){t(n.result)}});var HD={encode:mI,decode:jD,decodeAsUrl:fI};const NI={DrumSoundBank:bu,MelodicSoundBank:YA},VI=e=>qn.error(`Sorry, we could not properly load the sound for bank: ${e}.`);var wh={deserialize:(e,t)=>{var l,u;const n=e.bankType,s=e.id,i=NI[n],r=[s],a=(l=e.sound)==null?void 0:l.path,o=(u=e.sound)==null?void 0:u.blobAsString;a&&r.push(t(a,null,o));const A=new i(...r);return e!=null&&e.trim&&(A.trim=e.trim),e!=null&&e.trims&&(A.trims=e.trims),A},deserializeSoundBlob:async(e,t)=>{var i;const n=(i=e.sound)==null?void 0:i.blobAsString;let s=null;if(n)try{s=await HD.decodeAsUrl(n),e.sound=t(s,null,n)}catch{VI(e.id)}}};const ui=[],Us=(e,t=null,n=null)=>{const s=t||e,i=new lr(s),r=new hs,a=new Hs(2e4,"lowpass"),o=new Hs(0,"highpass");return i.chain(r,a,o,Ei),ui.push(i),{path:e,blobAsString:n,play:A=>{if(!A)return i.start();const{time:l=null,startPercentage:u=0,endPercentage:c=1}=A,h=c-u,q=i.buffer.duration*h,p=i.buffer.duration*u;if(It.liveLoopInterval){const g=mP(It.liveLoopInterval).toSeconds();i.loopStart=p,i.loopEnd=Math.min(p+g,q)}i.start(l===null?0:l,p,q)},volume:(A=null,l=null)=>{if(A===null)return r.volume.value;A!==r.volume.value&&(l?r.volume.linearRampToValueAtTime(A,l):r.volume.value=A)},pitch:(A=null,l=null)=>{if(A===null)return i.playbackRate;A!==i.playbackRate&&(i.playbackRate=A)},lowpassFilter:(A=null,l=null)=>{A!==null&&A!==a.frequency.value&&(l?a.frequency.linearRampToValueAtTime(A,l):a.frequency.rampTo(A,0))},highpassFilter:(A=null,l=null)=>{A!==null&&A!==o.frequency.value&&(l?o.frequency.linearRampToValueAtTime(A,l):o.frequency.rampTo(A,0))},clone:A=>{if(!A)return Us(e,i.buffer,n);const{startPercentage:l=0,endPercentage:u=1}=A,c=i.buffer.duration*l,h=i.buffer.duration*u;return Us(e,i.buffer.slice(c,h),n)},dispose:()=>{i.dispose()}}},rs={MIC:"mic",HARD_DRIVE:"hard_drive",OP1_FUN:"op1_fun",FREESOUND:"freesound"},ma={NONE:"none",HARD_DRIVE:"hard_drive"};class MI{constructor(t){this.soundBanks=t,this.currentSoundBank=t[U.PAD_9_DOWN],this.currentAudioInputDevice=rs.MIC,this.lastSoundTriggeredByPadPress=U.PAD_1_DOWN,this.masterVolume=8,this.setMasterVolumeByPadId(U.PAD_8_DOWN),this.liveLoopInterval=null}setMasterVolumeByPadId(t){const n=parseInt(t.split("_")[1]);this.masterVolume=n;const s=Ph(n,-35,35,0,16);this.setMasterDestinationVolume(s)}setMasterDestinationVolume(t){Ei.volume.value=t}getTargetMasterDestinationVolume(){return Ph(this.masterVolume,-35,35,0,16)}turnOnLightForMasterVolume(){Object.keys(Ft).forEach((t,n)=>{this.masterVolume>n?Zt.setLayerLight(Qt.BPM,t,re.BRIGHT):Zt.setLayerLight(Qt.BPM,t,re.OFF)})}setLastSoundTriggeredByPadPress(t){this.lastSoundTriggeredByPadPress=t}getLastSoundTriggeredByPadPress(){return this.lastSoundTriggeredByPadPress}setCurrentAudioInputDevice(t){this.currentAudioInputDevice=t}getCurrentAudioInputDevice(){return this.currentAudioInputDevice}selectSoundBank(t){return this.currentSoundBank=this.soundBanks[t]}getCurrentSoundBank(){return this.currentSoundBank}getSoundBankById(t){return this.soundBanks[t]}getCurrentSoundBankId(){return Object.keys(this.soundBanks).filter(t=>this.soundBanks[t]===this.getCurrentSoundBank())[0]}getUsedSoundBankIds(){return Object.keys(this.soundBanks).filter(t=>!this.soundBanks[t].isEmpty())}getUsedAndCurrentSoundBankIds(){return this.getUsedSoundBankIds().concat([this.getCurrentSoundBankId()])}clearCurrentSoundBank(){this.getCurrentSoundBank().clear()}async importSoundToBankFromFileUrl(t,n,s){const i=await HD.encode(s),r=Us(n,null,i);this.getSoundBankById(t).loadFromAudioInput(r)}turnOnLightForUsedSoundBanks(){const t=this.getUsedSoundBankIds(),n=this.getCurrentSoundBankId();Object.keys(this.soundBanks).forEach(s=>{s===n?Zt.setLayerLight(Qt.SOUND,s,re.BRIGHT,!0):t.includes(s)?Zt.setLayerLight(Qt.SOUND,s,re.DIM):Zt.setLayerLight(Qt.SOUND,s,re.OFF)})}turnOnLightForRecordedSoundBanks(){const t=this.getUsedSoundBankIds(),n=this.getCurrentSoundBankId();Object.keys(this.soundBanks).forEach(s=>{s===n?Zt.setLayerLight(Qt.RECORD,s,re.BRIGHT,!0):t.includes(s)?Zt.setLayerLight(Qt.RECORD,s,re.BRIGHT):Zt.setLayerLight(Qt.RECORD,s,re.OFF)})}play(t){const n=this.getCurrentSoundBank();return n?n.play(t):null}getAllSourceSounds(){return ui}stopAll(){ui.forEach(t=>t.stop())}reverseAll(){ui.forEach(t=>t.reverse=!0)}unreverseAll(){ui.forEach(t=>t.reverse=!1)}deserializeSOUNDBANKS(t){const n=Object.entries(t).reduce((s,[i,r])=>(s[i]=wh.deserialize(r,Us),s),{});return this.deserializeSoundBlobs(n),n}deserializeSoundBlobs(t){Object.entries(t).forEach(async([n,s])=>{await wh.deserializeSoundBlob(s,Us)})}deserializeCURRENTSOUNDBANK(t){return this.soundBanks[t.id]}}const Vr={};for(let e=0;e<8;e++){const t=U[`PAD_${e+1}_DOWN`];Vr[U[`PAD_${e+1}_DOWN`]]=new YA(t)}for(let e=8;e<16;e++){const t=U[`PAD_${e+1}_DOWN`];Vr[U[`PAD_${e+1}_DOWN`]]=new bu(t)}Vr[U.PAD_1_DOWN]=new YA(U.PAD_1_DOWN,Us("/bo-33/assets/sounds/sister_street_fighter/3.wav"));Vr[U.PAD_2_DOWN]=new YA(U.PAD_2_DOWN,Us("/bo-33/assets/sounds/sister_street_fighter/6.wav"));Vr[U.PAD_9_DOWN]=new bu(U.PAD_9_DOWN,Us("/bo-33/assets/sounds/jazz_kit.mp3"));const It=new MI(Vr);const OI=["value"],yI=["value"],WI=["value"],EI=["value"],PI=oe({props:{onSelect:null},setup(e){const t=e,n=de(It.getCurrentAudioInputDevice()),s=()=>{const i=n.value;It.setCurrentAudioInputDevice(i),t.onSelect&&t.onSelect(i)};return(i,r)=>(vt(),ne("div",null,[Mo(qt("select",{"onUpdate:modelValue":r[0]||(r[0]=a=>n.value=a),name:"audio_inputs_select",id:"audio_inputs_select",onChange:s},[qt("option",{value:Me(rs).MIC},"Microphone",8,OI),qt("option",{value:Me(rs).HARD_DRIVE},"Hard Drive",8,yI),qt("option",{disabled:"",value:Me(rs).OP1_FUN},"op1.fun",8,WI),qt("option",{disabled:"",value:Me(rs).FREESOUND},"freesound.org",8,EI)],544),[[ed,n.value]])]))}});var XD=Ns(PI,[["__scopeId","data-v-59034072"]]);class II{constructor(){this.outputDevice=ma.NONE,this.recorder=null}toggle(){this.isStopped()?this.start():this.stop()}isStarted(){return this.recorder!==null}isStopped(){return!this.isStarted()}start(){if(this.isStarted()||this.outputDevice===ma.NONE)return;const t=new nr;this.recorder=t,this.connectAllSounds(t),t.start()}async stop(){if(this.isStopped())return;const t=await this.recorder.stop(),n=URL.createObjectURL(t),s=document.createElement("a");s.download="recording.webm",s.href=n,s.click(),s.remove(),this.disconnectAllSounds(this.recorder),this.recorder.dispose(),this.recorder=null}connectAllSounds(t){Ei.connect(t)}disconnectAllSounds(t){Ei.disconnect(t)}setOutputDevice(t){this.outputDevice=t}getOutputDevice(){return this.outputDevice}}const iA=new II;const SI=["value"],CI=["value"],wI=oe({props:{onSelect:null},setup(e){const t=e,n=de(iA.getOutputDevice()),s=()=>{const i=n.value;iA.setOutputDevice(i),t.onSelect&&t.onSelect(i)};return(i,r)=>Mo((vt(),ne("select",{"onUpdate:modelValue":r[0]||(r[0]=a=>n.value=a),name:"audio_outputs_select",id:"audio_outputs_select",onChange:s},[qt("option",{value:Me(ma).NONE},"None",8,SI),qt("option",{value:Me(ma).HARD_DRIVE},"Hard Drive",8,CI)],544)),[[ed,n.value]])}});var $D=Ns(wI,[["__scopeId","data-v-d15ba886"]]);const BI={class:"input-output-overlay"},kI=qt("h1",null,"I/O",-1),TI=qt("div",null,"input",-1),bI=qt("br",null,null,-1),UI=qt("div",null,"output",-1),QI=oe({setup(e){return(t,n)=>(vt(),ve(RA,{"overlay-id":"input-output-overlay"},{default:we(()=>[qt("div",BI,[kI,TI,Ot(XD),bI,UI,Ot($D)])]),_:1}))}});class vI{constructor(t){this.patterns=t,this.currentPattern=t[U.PAD_1_DOWN],this.chain=[U.PAD_1_DOWN],this.writeModeEnabled=!1,this.writeLiveMode=!1,this.writeFxLiveMode=!1,this.patternMode=!1,this.newSequence=!1}togglePatternMode(){this.patternMode?this.stopPatternMode():this.startPatternMode()}startPatternMode(){this.patternMode=!0,this.newSequence=!0,Zt.activateLayer(Qt.PATTERN),this.turnOnLightForUsedPatterns()}stopPatternMode(){this.patternMode=!1,Zt.deactivateLayer(Qt.PATTERN)}selectPattern(t){return this.currentPattern=this.patterns[t],this.turnOnStepLightsForCurrentPattern(),this.turnOnLightForUsedPatterns(),this.currentPattern}selectFirstPatternInChain(){this.selectPattern(this.chain[0])}writeSequenceLengthMessageToDisplay(t){const n=t.length.toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1});Ce(`L${n}`)}pushPatternIdToSequence(t){this.chain=[...this.chain,t],this.writeSequenceLengthMessageToDisplay(this.chain)}addPatternIdToChain(t){this.newSequence?this.replaceChain(t):this.pushPatternIdToSequence(t)}replaceChain(t){this.chain=[t],this.newSequence=!1,this.writeSequenceLengthMessageToDisplay(this.chain)}getChain(){}getCurrentPattern(){return this.currentPattern}getPatternById(t){return this.patterns[t]}getCurrentPatternId(){return Object.keys(this.patterns).filter(t=>this.patterns[t]===this.getCurrentPattern())[0]}getUsedPatternIds(){return Object.keys(this.patterns).filter(t=>!this.patterns[t].isEmpty())}getUsedAndCurrentPatternIds(){return this.getUsedPatternIds().concat([this.getCurrentPatternId()])}turnOnLightForUsedPatterns(){const t=this.getUsedPatternIds(),n=this.getCurrentPatternId(),s=[...new Set([...this.chain])];Object.keys(Ft).forEach(i=>{const r=Ft[i];Zt.setLayerLight(Qt.PATTERN,r,re.OFF),t.includes(r)&&Zt.setLayerLight(Qt.PATTERN,r,re.DIM),s.includes(r)&&Zt.setLayerLight(Qt.PATTERN,r,re.BRIGHT),n===r&&Zt.setLayerLight(Qt.PATTERN,r,re.BRIGHT,!0)})}turnOnStepLightsForCurrentPattern(){this.getCurrentPattern().turnOnLightForUsedSteps()}toggleWriteMode(){this.writeModeEnabled?this.stopWriteMode():this.startWriteMode(),lI(this.writeModeEnabled)}startWriteMode(){this.writeModeEnabled=!0,Zt.activateLayer(Qt.WRITE),this.turnOnStepLightsForCurrentPattern()}stopWriteMode(){this.writeModeEnabled=!1,Zt.deactivateLayer(Qt.WRITE)}setCurrentPatternStep(t,n){this.getCurrentPattern().setStep(t,n)}deserializePATTERNS(t){return Object.entries(t).reduce((n,[s,i])=>(n[s]=new tg(s,i.steps),n),{})}deserializeCURRENTPATTERN(t){return this.patterns[t.id]}}class tg{constructor(t,n=null){this.id=t,this.steps=n||this.initializeSteps()}getStepById(t){return this.steps[t]}playSoundsAtStep(t,n){const s=this.getStepById(t);for(const i in s){const{padId:r,pitch:a,volume:o,lowpassCutoff:A,highpassCutoff:l}=s[i],u={pitch:a,volume:o,lowpassCutoff:A,highpassCutoff:l};It.getSoundBankById(i).play(r,n,u)}}setStep(t){const n=this.getCurrentSoundBankId();if(this.steps[t][n])this.clearStep(t),Zt.setLayerLight(Qt.WRITE,t,re.OFF);else{const s=It.getLastSoundTriggeredByPadPress(),i=It.getCurrentSoundBank().getBankPitch(),r=It.getCurrentSoundBank().getBankVolume(),{lowpassCutoff:a,highpassCutoff:o}=It.getCurrentSoundBank().getBankFilters();this.steps[t][n]={padId:s,pitch:i,volume:r,lowpassCutoff:a,highpassCutoff:o},this.turnOnLightForUsedSteps()}}writeBankFxLive(t){const n=this.getCurrentSoundBankId(),s=this.steps[t][n];s&&this.setPadIdToStep(t,n,s.padId)}setPadIdToStep(t,n,s){const i=It.getCurrentSoundBank().getBankPitch(),r=It.getCurrentSoundBank().getBankVolume(),{lowpassCutoff:a,highpassCutoff:o}=It.getCurrentSoundBank().getBankFilters();this.steps[t][n]={padId:s,pitch:i,volume:r,lowpassCutoff:a,highpassCutoff:o}}clearStep(t){const n=this.getCurrentSoundBankId();delete this.steps[t][n]}initializeSteps(){const t={};for(let n=0;n<16;n++){const s=U[`PAD_${n+1}_DOWN`];t[s]={}}return t}isEmpty(){for(const t in this.steps){const n=this.steps[t];if(Object.keys(n).length>0)return!1}return!0}turnOnLightForUsedSteps(){const t=this.getCurrentSoundBankId(),n=It.getLastSoundTriggeredByPadPress();for(const s in this.steps){const i=this.steps[s][t];if(i){const{padId:r}=i,a=r===n?re.BRIGHT:re.DIM;Zt.setLayerLight(Qt.WRITE,s,a)}else Zt.setLayerLight(Qt.WRITE,s,re.OFF)}}getCurrentSoundBankId(){return It.getCurrentSoundBank().id}load(t){for(const n in t.steps){const s=t.steps[n];this.steps[n]=nt({},s)}}clear(){this.steps=this.initializeSteps()}}const eg={};for(let e=0;e<16;e++)eg[U[`PAD_${e+1}_DOWN`]]=new tg(U[`PAD_${e+1}_DOWN`]);const Lt=new vI(eg),RI=[{url:"https://cdn.jsdelivr.net/gh/GoogleChromeLabs/web-audio-samples/src/audio-worklet/basic/bit-crusher/bit-crusher-processor.js",moduleName:"bit-crusher-processor"}];let ng=[];const YI=async()=>{ng=await _I(RI)},sg=()=>ng,ig=e=>sg().find(({moduleName:n})=>n===e)||null,GI=e=>{var t;return((t=ig(e))==null?void 0:t.effectNode)||null},_I=async e=>{const t=[];return await e.forEach(async n=>{const s=await xI(n);s&&t.push(s)}),t},xI=async({url:e,moduleName:t})=>{const n=e;try{return await cn().addAudioWorkletModule(n),{effectNode:cn().createAudioWorkletNode(t),moduleName:t}}catch(s){return console.log(`Failed to initialize ${t} from ${n}`),console.log(s),!1}};var FI={initializeCustomFx:YI,getEffects:sg,getEffectByName:ig,getEffectNodeByName:GI};function Wn({name:e="No Effect",shortName:t="non",effect:n=()=>null,active:s=!1,initialize:i=()=>null,activate:r=()=>null,deactivate:a=()=>null}){return{name:e,shortName:t,effect:n,active:s,initialize:i,activate:r,deactivate:a}}function rg(e="4n",t=200,n=2.6){const s=new Xo(e,t,n);return Wn({name:"Auto Filter",shortName:"auto f",effect:()=>s,active:!1,initialize:i=>(i.wet.linearRampTo(0,0),i),activate:(i,r=null)=>{i.active||(i.active=!0,r===null?(i.start(),i.wet.linearRampTo(1,0)):(i.start(r),i.wet.linearRampToValueAtTime(1,r)))},deactivate:(i,r=null)=>{!i.active||(i.active=!1,r===null?(i.stop(),i.wet.linearRampTo(0,0)):(i.stop(r),i.wet.linearRampToValueAtTime(0,r)))}})}function ZI(){const e=new ur(4,12,.1);return Wn({name:"Taurus Chorus",shortName:"chr t",effect:()=>e,active:!1,initialize:t=>(t.wet.linearRampTo(0,0),t),activate:(t,n=null)=>{t.active||(t.active=!0,n===null?(t.start(),t.wet.linearRampTo(1,0)):(t.start(n),t.wet.linearRampToValueAtTime(1,n)))},deactivate:(t,n=null)=>{!t.active||(t.active=!1,n===null?(t.wet.linearRampTo(0,0),t.stop()):(t.wet.linearRampToValueAtTime(0,n),t.stop(n)))}})}function KI(){const e=It;return Wn({name:"Reverse",shortName:"rev",effect:()=>null,active:!1,initialize:t=>t,activate:(t,n=null)=>{e.reverseAll()},deactivate:(t,n=null)=>{e.unreverseAll()}})}function JI(){const e=new ur(1,100,.15);return Wn({name:"Gemini Chorus",shortName:"chr g",effect:()=>e,active:!1,initialize:t=>(t.wet.linearRampTo(0,0),t),activate:(t,n=null)=>{t.active||(t.active=!0,n===null?(t.start(),t.wet.linearRampTo(1,0)):(t.start(n),t.wet.linearRampToValueAtTime(1,n)))},deactivate:(t,n=null)=>{!t.active||(t.active=!1,n===null?(t.wet.linearRampTo(0,0),t.stop()):(t.wet.linearRampToValueAtTime(0,n),t.stop(n)))}})}function LI(){const e=new ur(2,500,.15);return Wn({name:"Aquarius Chorus",shortName:"chr a",effect:()=>e,active:!1,initialize:t=>(t.wet.linearRampTo(0,0),t),activate:(t,n=null)=>{t.active||(t.active=!0,n===null?(t.start(),t.wet.linearRampTo(1,0)):(t.start(n),t.wet.linearRampToValueAtTime(1,n)))},deactivate:(t,n=null)=>{!t.active||(t.active=!1,n===null?(t.wet.linearRampTo(0,0),t.stop()):(t.wet.linearRampToValueAtTime(0,n),t.stop(n)))}})}function zI(){const n=new Hs(2e4,"lowpass");return Wn({name:"The Low Road",shortName:"lo f",effect:()=>n,active:!1,initialize:s=>(s.frequency.linearRampTo(2e4,0),s),activate:(s,i=null)=>{s.active||(s.active=!0,i===null?s.frequency.linearRampTo(300,0):s.frequency.linearRampToValueAtTime(300,i))},deactivate:(s,i=null)=>{!s.active||(s.active=!1,i===null?s.frequency.linearRampTo(2e4,0):s.frequency.linearRampToValueAtTime(2e4,i))}})}function jI(){const n=new Hs(0,"highpass");return Wn({name:"The High Road",shortName:"hi f",effect:()=>n,active:!1,initialize:s=>(s.frequency.linearRampTo(0,0),s),activate:(s,i=null)=>{s.active||(s.active=!0,i===null?s.frequency.linearRampTo(700,0):s.frequency.linearRampToValueAtTime(700,i))},deactivate:(s,i=null)=>{!s.active||(s.active=!1,i===null?s.frequency.linearRampTo(0,0):s.frequency.linearRampToValueAtTime(0,i))}})}function ag(e="32n",t="16 Looper",n="L 16"){return Wn({name:t,shortName:n,activate:(s,i=null)=>{It.liveLoopInterval=e,ui.forEach(r=>{r.loop=!0})},deactivate:(s,i=null)=>{It.liveLoopInterval=null,ui.forEach(r=>{r.loop=!1})}})}function HI(){const e=new eA(.2,"4x");return Wn({name:"Distort",shortName:"dist",effect:()=>e,active:!1,initialize:t=>(t.wet.rampTo(0,0),t),activate:(t,n=null)=>{t.active||(t.active=!0,n===null?t.wet.linearRampTo(1,0):t.wet.linearRampToValueAtTime(1,n))},deactivate:(t,n=null)=>{!t.active||(t.active=!1,n===null?t.wet.linearRampTo(0,0):t.wet.linearRampToValueAtTime(0,n))}})}function XI(){const e=new nA("12n",.5);return Wn({name:"Tremelo",shortName:"tremo",effect:()=>e,active:!1,initialize:t=>(t.wet.rampTo(0,0),t),activate:(t,n=null)=>{t.active||(t.active=!0,t.start(),n===null?t.wet.linearRampTo(1,0):t.wet.linearRampToValueAtTime(1,n))},deactivate:(t,n=null)=>{!t.active||(t.active=!1,t.stop(),n===null?t.wet.linearRampTo(0,0):t.wet.linearRampToValueAtTime(0,n))}})}function vu(e="32n",t="Stutter 8",n="St8"){let s=null;const i=[-100,0];let r=0;return Wn({name:t,shortName:n,activate:a=>{s=hn.scheduleRepeat(o=>{r=1-r;const A=i[r];Ei.volume.linearRampToValueAtTime(A,o)},e)},deactivate:a=>{hn.clear(s),Ei.volume.value=It.getTargetMasterDestinationVolume(),r=0}})}const Ke={};Object.keys(Ft).forEach(e=>{Ke[Ft[e]]=Wn({})});Ke[Ft.PAD_1_DOWN]=jI();Ke[Ft.PAD_2_DOWN]=rg("8n");Ke[Ft.PAD_3_DOWN]=zI();Ke[Ft.PAD_4_DOWN]=rg();Ke[Ft.PAD_5_DOWN]=XI();Ke[Ft.PAD_6_DOWN]=ZI();Ke[Ft.PAD_7_DOWN]=LI();Ke[Ft.PAD_8_DOWN]=JI();Ke[Ft.PAD_9_DOWN]=ag();Ke[Ft.PAD_10_DOWN]=ag("12n","6 Looper","L 6");Ke[Ft.PAD_11_DOWN]=HI();Ke[Ft.PAD_12_DOWN]=KI();Ke[Ft.PAD_13_DOWN]=vu();Ke[Ft.PAD_14_DOWN]=vu("24n","Stutter 6","St6");Ke[Ft.PAD_15_DOWN]=vu("12n.","Stutter 3","St3");const Bh=()=>Ke;class $I{constructor(){this.effects=Bh(),this.fxMode=!1,this.liveFxPadIds=[],this.patterns=this.initializePatterns(),this.lastActiveFxPadId=Ft.PAD_16_DOWN,this.initialize()}getEffects(){return this.effects}getFxShortNameByPadId(t){var n;return(n=this.getFxDataByPadId(t))==null?void 0:n.shortName}getFxNameByPadId(t){var n;return(n=this.getFxDataByPadId(t))==null?void 0:n.name}getFxDataByPadId(t){return this.getEffects()[t]}addLiveFxPadId(t){!this.fxMode||(this.liveFxPadIds.push(t),Ce(this.getFxShortNameByPadId(t)),yt.emit("update_live_fx_text",this.getFxNameByPadId(t)))}removeLiveFxPadId(t){const n=t.replace("UP","DOWN");this.liveFxPadIds=this.liveFxPadIds.filter(i=>i!==n);const s=this.getFxNameByPadId(this.activeLiveFxPadId());yt.emit("update_live_fx_text",s||null)}isLiveFxActive(){return this.liveFxPadIds.length>0}activeLiveFxPadId(){return this.liveFxPadIds.at(-1)}clearLiveFxPadIds(){this.liveFxPadIds=[],yt.emit("update_live_fx_text",null)}setFxMode(t){this.fxMode=t}turnFxModeOn(){this.setFxMode(!0),Zt.activateLayer(Qt.FX)}turnFxModeOff(){this.setFxMode(!1),this.clearLiveFxPadIds(),Zt.deactivateLayer(Qt.FX)}deactiveAllFx(){Object.entries(this.effects).forEach(([t,n])=>n.deactivate(n.effect()))}initialize(){const t=Object.entries(this.effects).map(([n,s])=>s.initialize(s.effect())).filter(n=>n!==null);Ei.chain(...t.reverse())}activateByPad(t,n=null){Zt.setAllLayerLights(Qt.FX,re.OFF,!1),this.lastActiveFxPadId!==t&&this.deactivateByPad(this.lastActiveFxPadId,n),Zt.setLayerLight(Qt.FX,t,re.BRIGHT),!!this.effects[t]&&this.lastActiveFxPadId!==t&&(this.effects[t].activate(this.effects[t].effect(),n),this.lastActiveFxPadId=t)}deactivateByPad(t,n=null){!this.effects[t]||this.effects[t].deactivate(this.effects[t].effect(),n)}getPatternById(t){return this.patterns[t]}initializePatterns(){const t={};for(let n=0;n<16;n++)t[Ft[`PAD_${n+1}_DOWN`]]=new kh(Ft[`PAD_${n+1}_DOWN`]);return t}deserializeEFFECTS(t){return Bh()}deserializePATTERNS(t){return Object.entries(t).reduce((n,[s,i])=>(n[s]=new kh(s,i.steps),n),{})}}const tS=()=>Ft.PAD_16_DOWN;class kh{constructor(t,n=null){this.id=t,this.steps=n||this.initializeSteps()}activateStep(t,n){let s=this.getStepById(t);Fe.isLiveFxActive()&&(s=Fe.activeLiveFxPadId()),Lt.writeModeEnabled&&this.setStepById(t,s),Fe.activateByPad(s,n)}setStepById(t,n){this.steps[t]=n}getStepById(t){return this.steps[t]}initializeSteps(){const t={};for(let n=0;n<16;n++){const s=Ft[`PAD_${n+1}_DOWN`];t[s]=tS()}return t}}const Fe=new $I;var og={exports:{}};/*!
  @mojs/core – The motion graphics toolbelt for the web
  Oleg Solomka @legomushroom 2022 MIT
  1.3.0
*/(function(e,t){var n;n=function(){return(()=>{var s={50:(o,A,l)=>{l.d(A,{Z:()=>h});var u=l(2),c={_sample:function(q){var p=arguments.length>1&&arguments[1]!==void 0?arguments[1]:4,g=(0,u.Z)(p),d={};if(g==="number"){var D=0,f=Math.pow(10,p),y=1/f;d[0]=q(0);for(var N=0;N<f-1;N++){D+=y;var M=parseFloat(D.toFixed(p));d[M]=q(D)}d[1]=q(1),d.base=p}else g==="object"?d=p:g==="string"&&(d=JSON.parse(p));return c._sample._proximate(d)},_proximate:function(q){var p=q.base,g=1/Math.pow(10,p),d=function(D){var f,y,N=function(O,E){E=+E||0;var V=Math.pow(10,E);return Math.round(O*V)/V}(D,p),M=q[N.toString()];if(Math.abs(D-N)<g)return M;var P=(y=D>N?q[f=N+g]:q[f=N-g])-M;return P<g?M:M+(D-N)/(f-N)*(y>M?-1:1)*P};return d.getSamples=function(){return q},d}};c._sample._proximate=c._proximate;const h=c._sample},973:(o,A,l)=>{l.d(A,{Z:()=>g});var u=l(2),c=l(671),h=l(144),q=l(52),p=l.n(q);const g=function(){function d(){var D=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};(0,c.Z)(this,d),this._o=D,this._index=this._o.index||0,this._arrayPropertyMap={strokeDashoffset:1,strokeDasharray:1,origin:1},this._skipPropsDelta={timeline:1,prevChainModule:1,callbacksContext:1},this._declareDefaults(),this._extendDefaults(),this._vars(),this._render()}return(0,h.Z)(d,[{key:"_declareDefaults",value:function(){this._defaults={}}},{key:"_vars",value:function(){this._progress=0,this._strokeDasharrayBuffer=[]}},{key:"_render",value:function(){}},{key:"_setProp",value:function(D,f){if((0,u.Z)(D)==="object")for(var y in D)this._assignProp(y,D[y]);else this._assignProp(D,f)}},{key:"_assignProp",value:function(D,f){this._props[D]=f}},{key:"_show",value:function(){var D=this._props;this.el&&(D.isSoftHide?this._showByTransform():this.el.style.display="block",this._isShown=!0)}},{key:"_hide",value:function(){this.el&&(this._props.isSoftHide?p().setPrefixedStyle(this.el,"transform","scale(0)"):this.el.style.display="none",this._isShown=!1)}},{key:"_showByTransform",value:function(){}},{key:"_parseOptionString",value:function(D){return typeof D=="string"&&D.match(/stagger/)&&(D=p().parseStagger(D,this._index)),typeof D=="string"&&D.match(/rand/)&&(D=p().parseRand(D)),D}},{key:"_parsePositionOption",value:function(D,f){return p().unitOptionMap[D]&&(f=p().parseUnit(f).string),f}},{key:"_parseStrokeDashOption",value:function(D,f){var y=f;if(this._arrayPropertyMap[D])switch(y=[],(0,u.Z)(f)){case"number":y.push(p().parseUnit(f));break;case"string":for(var N=f.split(" "),M=0;M<N.length;M++)y.push(p().parseUnit(N[M]))}return y}},{key:"_isDelta",value:function(D){var f=p().isObject(D);return!(!(f=f&&!D.unit)||p().isArray(D)||p().isDOM(D))}},{key:"_getDelta",value:function(D,f){var y;if(D!=="left"&&D!=="top"||this._o.ctx||p().warn(`Consider to animate x/y properties instead of left/top,
        as it would be much more performant`,f),!this._skipPropsDelta||!this._skipPropsDelta[D]){(y=p().parseDelta(D,f,this._index)).type!=null&&(this._deltas[D]=y);var N=(0,u.Z)(y.end)==="object"?y.end.value===0?0:y.end.string:y.end;this._props[D]=N}}},{key:"_extendDefaults",value:function(){for(var D in this._props={},this._deltas={},this._defaults){var f=this._o[D]!=null?this._o[D]:this._defaults[D];this._parseOption(D,f)}}},{key:"_tuneNewOptions",value:function(D){for(var f in this._hide(),D)D&&delete this._deltas[f],this._o[f]=D[f],this._parseOption(f,D[f])}},{key:"_parseOption",value:function(D,f){if(this._isDelta(f)&&!this._skipPropsDelta[D]){this._getDelta(D,f);var y=p().getDeltaEnd(f);return this._assignProp(D,this._parseProperty(D,y))}this._assignProp(D,this._parseProperty(D,f))}},{key:"_parsePreArrayProperty",value:function(D,f){return f=this._parseOptionString(f),this._parsePositionOption(D,f)}},{key:"_parseProperty",value:function(D,f){return D==="parent"?p().parseEl(f):(f=this._parsePreArrayProperty(D,f),this._parseStrokeDashOption(D,f))}},{key:"_parseDeltaValues",value:function(D,f){var y={};for(var N in f){var M=f[N],P=this._parsePreArrayProperty(D,M);y[this._parsePreArrayProperty(D,N)]=P}return y}},{key:"_preparsePropValue",value:function(D,f){return this._isDelta(f)?this._parseDeltaValues(D,f):this._parsePreArrayProperty(D,f)}},{key:"_calcCurrentProps",value:function(D,f){for(var y in this._deltas){var N=this._deltas[y],M=!!N.curve,P=N.easing==null||M?D:N.easing(f);if(N.type==="array"){var O;p().isArray(this._props[y])?(O=this._props[y]).length=0:O=[];for(var E=M?N.curve(f):null,V=0;V<N.delta.length;V++){var C=N.delta[V],B=M?E*(N.start[V].value+f*C.value):N.start[V].value+P*C.value;O.push({string:"".concat(B).concat(C.unit),value:B,unit:C.unit})}this._props[y]=O}else if(N.type==="number")this._props[y]=M?N.curve(f)*(N.start+f*N.delta):N.start+P*N.delta;else if(N.type==="unit"){var v=M?N.curve(f)*(N.start.value+f*N.delta):N.start.value+P*N.delta;this._props[y]="".concat(v).concat(N.end.unit)}else if(N.type==="color"){var J,K,rt,tt;if(M){var z=N.curve(f);J=parseInt(z*(N.start.r+f*N.delta.r),10),K=parseInt(z*(N.start.g+f*N.delta.g),10),rt=parseInt(z*(N.start.b+f*N.delta.b),10),tt=parseFloat(z*(N.start.a+f*N.delta.a))}else J=parseInt(N.start.r+P*N.delta.r,10),K=parseInt(N.start.g+P*N.delta.g,10),rt=parseInt(N.start.b+P*N.delta.b,10),tt=parseFloat(N.start.a+P*N.delta.a);this._props[y]="rgba(".concat(J,",").concat(K,",").concat(rt,",").concat(tt,")")}}}},{key:"_setProgress",value:function(D,f){this._progress=D,this._calcCurrentProps(D,f)}}]),d}()},623:(o,A,l)=>{l.d(A,{Z:()=>y});var u=l(2),c=l(671),h=l(144),q=l(340),p=l(963),g=l(120),d=l(52),D=l.n(d);function f(N){var M=function(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}();return function(){var P,O=(0,g.Z)(N);if(M){var E=(0,g.Z)(this).constructor;P=Reflect.construct(O,arguments,E)}else P=O.apply(this,arguments);return(0,p.Z)(this,P)}}const y=function(N){(0,q.Z)(P,N);var M=f(P);function P(){return(0,c.Z)(this,P),M.apply(this,arguments)}return(0,h.Z)(P,[{key:"_declareDefaults",value:function(){this._defaults={ns:"http://www.w3.org/2000/svg",tag:"ellipse",parent:document.body,ratio:1,radius:50,radiusX:null,radiusY:null,stroke:"hotpink","stroke-dasharray":"","stroke-dashoffset":"","stroke-linecap":"","stroke-width":2,"stroke-opacity":1,fill:"transparent","fill-opacity":1,width:0,height:0},this._drawMap=["stroke","stroke-width","stroke-opacity","stroke-dasharray","fill","stroke-dashoffset","stroke-linecap","fill-opacity","transform"]}},{key:"_vars",value:function(){this._state={},this._drawMapLength=this._drawMap.length}},{key:"_render",value:function(){this._isRendered||(this._isRendered=!0,this._createSVGCanvas(),this._setCanvasSize(),this._props.parent.appendChild(this._canvas))}},{key:"_createSVGCanvas",value:function(){var O=this._props;this._canvas=document.createElementNS(O.ns,"svg"),this.el=document.createElementNS(O.ns,O.tag),this._canvas.appendChild(this.el)}},{key:"_setCanvasSize",value:function(){var O=this._canvas.style;O.display="block",O.width="100%",O.height="100%",O.left="0px",O.top="0px"}},{key:"_draw",value:function(){this._props.length=this._getLength();for(var O=this._drawMapLength;O--;){var E=this._drawMap[O];switch(E){case"stroke-dasharray":case"stroke-dashoffset":this.castStrokeDash(E)}this._setAttrIfChanged(E,this._props[E])}this._state.radius=this._props.radius}},{key:"castStrokeDash",value:function(O){var E=this._props;if(D().isArray(E[O])){for(var V="",C=0;C<E[O].length;C++){var B=E[O][C],v=B.unit==="%"?this.castPercent(B.value):B.value;V+="".concat(v," ")}return E[O]=V==="0 "?V="":V,E[O]=V}(0,u.Z)(E[O])==="object"&&(V=E[O].unit==="%"?this.castPercent(E[O].value):E[O].value,E[O]=V===0?V="":V)}},{key:"castPercent",value:function(O){return O*(this._props.length/100)}},{key:"_setAttrIfChanged",value:function(O,E){this._state[O]!==E&&(this.el.setAttribute(O,E),this._state[O]=E)}},{key:"_getLength",value:function(){var O=this._props;return this.el&&this.el.getTotalLength&&this.el.getAttribute("d")?this.el.getTotalLength():2*(O.radiusX!=null?O.radiusX:O.radius)}},{key:"_getPointsPerimiter",value:function(O){for(var E=0,V=1;V<O.length;V++)E+=this._pointsDelta(O[V-1],O[V]);return E+=this._pointsDelta(O[0],D().getLastItem(O))}},{key:"_pointsDelta",value:function(O,E){var V=Math.abs(O.x-E.x),C=Math.abs(O.y-E.y);return Math.sqrt(V*V+C*C)}},{key:"_setSize",value:function(O,E){var V=this._props;V.width=O,V.height=E,this._draw()}}]),P}(l(973).Z)},472:(o,A,l)=>{l.d(A,{Z:()=>D});var u=l(671),c=l(144),h=l(752),q=l(340),p=l(963),g=l(120);function d(f){var y=function(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}();return function(){var N,M=(0,g.Z)(f);if(y){var P=(0,g.Z)(this).constructor;N=Reflect.construct(M,arguments,P)}else N=M.apply(this,arguments);return(0,p.Z)(this,N)}}const D=function(f){(0,q.Z)(N,f);var y=d(N);function N(){return(0,u.Z)(this,N),y.apply(this,arguments)}return(0,c.Z)(N,[{key:"_declareDefaults",value:function(){(0,h.Z)((0,g.Z)(N.prototype),"_declareDefaults",this).call(this),this._defaults.tag="path"}},{key:"_draw",value:function(){(0,h.Z)((0,g.Z)(N.prototype),"_draw",this).call(this);var M=this._props,P=M.radiusX!=null?M.radiusX:M.radius,O=M.radiusY!=null?M.radiusY:M.radius,E=P===this._prevRadiusX,V=O===this._prevRadiusY,C=M.points===this._prevPoints;if(!(E&&V&&C)){var B=M.width/2,v=M.height/2,J=B+P,K="M".concat(B-P," ").concat(v," Q ").concat(B," ").concat(v-2*O," ").concat(J," ").concat(v);this.el.setAttribute("d",K),this._prevPoints=M.points,this._prevRadiusX=P,this._prevRadiusY=O}}},{key:"_getLength",value:function(){var M=this._props,P=M.radiusX!=null?M.radiusX:M.radius,O=M.radiusY!=null?M.radiusY:M.radius,E=P+O,V=Math.sqrt((3*P+O)*(P+3*O));return .5*Math.PI*(3*E-V)}}]),N}(l(623).Z)},854:(o,A,l)=>{l.d(A,{Z:()=>D});var u=l(671),c=l(144),h=l(752),q=l(340),p=l(963),g=l(120);function d(f){var y=function(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}();return function(){var N,M=(0,g.Z)(f);if(y){var P=(0,g.Z)(this).constructor;N=Reflect.construct(M,arguments,P)}else N=M.apply(this,arguments);return(0,p.Z)(this,N)}}const D=function(f){(0,q.Z)(N,f);var y=d(N);function N(){return(0,u.Z)(this,N),y.apply(this,arguments)}return(0,c.Z)(N,[{key:"_declareDefaults",value:function(){(0,h.Z)((0,g.Z)(N.prototype),"_declareDefaults",this).call(this),this._defaults.tag="path",this._defaults.parent=null;for(var M=0;M<this._drawMap.length;M++)this._drawMap[M]==="stroke-width"&&this._drawMap.splice(M,1)}},{key:"getShape",value:function(){return""}},{key:"getLength",value:function(){return 100}},{key:"_draw",value:function(){var M=this._props,P=this._state,O=P.radiusX!==M.radiusX,E=P.radiusY!==M.radiusY,V=P.radius!==M.radius;(O||E||V)&&(this.el.setAttribute("transform",this._getScale()),P.radiusX=M.radiusX,P.radiusY=M.radiusY,P.radius=M.radius),this._setAttrIfChanged("stroke-width",M["stroke-width"]/M.maxScale),(0,h.Z)((0,g.Z)(N.prototype),"_draw",this).call(this)}},{key:"_render",value:function(){if(!this._isRendered){this._isRendered=!0,this._length=this.getLength();var M=this._props;M.parent.innerHTML='<svg id="js-mojs-shape-canvas" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink"><g id="js-mojs-shape-el">'.concat(this.getShape(),"</g></svg>"),this._canvas=M.parent.querySelector("#js-mojs-shape-canvas"),this.el=M.parent.querySelector("#js-mojs-shape-el"),this._setCanvasSize()}}},{key:"_getScale",value:function(){var M=this._props,P=M.radiusX?M.radiusX:M.radius,O=M.radiusY?M.radiusY:M.radius;M.scaleX=2*P/100,M.scaleY=2*O/100,M.maxScale=Math.max(M.scaleX,M.scaleY),M.shiftX=M.width/2-50*M.scaleX,M.shiftY=M.height/2-50*M.scaleY;var E="translate(".concat(M.shiftX,", ").concat(M.shiftY,")");return"".concat(E," scale(").concat(M.scaleX,", ").concat(M.scaleY,")")}},{key:"_getLength",value:function(){return this._length}}]),N}(l(623).Z)},342:(o,A,l)=>{l.d(A,{Z:()=>N});var u=l(671),c=l(144),h=l(340),q=l(963),p=l(752),g=l(120),d=l(52),D=l.n(d),f=l(755);function y(M){var P=function(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}();return function(){var O,E=(0,g.Z)(M);if(P){var V=(0,g.Z)(this).constructor;O=Reflect.construct(E,arguments,V)}else O=E.apply(this,arguments);return(0,q.Z)(this,O)}}const N=function(M){(0,h.Z)(O,M);var P=y(O);function O(){var E=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};return(0,u.Z)(this,O),P.call(this,E)}return(0,c.Z)(O,[{key:"add",value:function(){for(var E=arguments.length,V=new Array(E),C=0;C<E;C++)V[C]=arguments[C];return this._pushTimelineArray(V),this._calcDimentions(),this}},{key:"append",value:function(){for(var E=arguments.length,V=new Array(E),C=0;C<E;C++)V[C]=arguments[C];for(var B=0,v=V;B<v.length;B++){var J=v[B];D().isArray(J)?this._appendTimelineArray(J):this._appendTimeline(J,this._timelines.length),this._calcDimentions()}return this}},{key:"stop",value:function(E){return(0,p.Z)((0,g.Z)(O.prototype),"stop",this).call(this,E),this._stopChildren(E),this}},{key:"reset",value:function(){return(0,p.Z)((0,g.Z)(O.prototype),"reset",this).call(this),this._resetChildren(),this}},{key:"_resetChildren",value:function(){for(var E=0;E<this._timelines.length;E++)this._timelines[E].reset()}},{key:"_stopChildren",value:function(E){for(var V=this._timelines.length-1;V>=0;V--)this._timelines[V].stop(E)}},{key:"_appendTimelineArray",value:function(E){for(var V=E.length,C=this._props.repeatTime-this._props.delay,B=this._timelines.length;V--;)this._appendTimeline(E[V],B,C)}},{key:"_appendTimeline",value:function(E,V,C){E.timeline instanceof O&&(E=E.timeline),E.tween instanceof f.Z&&(E=E.tween);var B=C!=null?C:this._props.duration;B+=E._props.shiftTime||0,E.index=V,this._pushTimeline(E,B)}},{key:"_pushTimelineArray",value:function(E){for(var V=0;V<E.length;V++){var C=E[V];D().isArray(C)?this._pushTimelineArray(C):this._pushTimeline(C)}}},{key:"_pushTimeline",value:function(E,V){E.timeline instanceof O&&(E=E.timeline),E.tween instanceof f.Z&&(E=E.tween),V!=null&&E._setProp({shiftTime:V}),this._timelines.push(E),this._recalcDuration(E)}},{key:"_setProgress",value:function(E,V,C){this._updateChildren(E,V,C),f.Z.prototype._setProgress.call(this,E,V)}},{key:"_updateChildren",value:function(E,V,C){var B=V>this._prevTime?-1:1;this._props.isYoyo&&C&&(B*=-1);for(var v=this._props.startTime+E*this._props.duration,J=v+B,K=this._timelines.length,rt=0;rt<K;rt++){var tt=v>J?rt:K-1-rt;this._timelines[tt]._update(v,J,this._prevYoyo,this._onEdge)}this._prevYoyo=C}},{key:"_recalcDuration",value:function(E){var V=E._props,C=V.repeatTime/V.speed+(V.shiftTime||0)+E._negativeShift;this._props.duration=Math.max(C,this._props.duration)}},{key:"_recalcTotalDuration",value:function(){var E=this._timelines.length;for(this._props.duration=0;E--;){var V=this._timelines[E];V._recalcTotalDuration&&V._recalcTotalDuration(),this._recalcDuration(V)}this._calcDimentions()}},{key:"_setStartTime",value:function(E){var V=!(arguments.length>1&&arguments[1]!==void 0)||arguments[1];(0,p.Z)((0,g.Z)(O.prototype),"_setStartTime",this).call(this,E),this._startTimelines(this._props.startTime,V)}},{key:"_startTimelines",value:function(E){var V=!(arguments.length>1&&arguments[1]!==void 0)||arguments[1],C=this._state==="stop";E==null&&(E=this._props.startTime);for(var B=0;B<this._timelines.length;B++){var v=this._timelines[B];v._setStartTime(E,V),V||v._prevTime==null||C||(v._prevTime=v._normPrevTimeForward())}}},{key:"_refresh",value:function(E){for(var V=this._timelines.length,C=0;C<V;C++)this._timelines[C]._refresh(E);(0,p.Z)((0,g.Z)(O.prototype),"_refresh",this).call(this,E)}},{key:"_declareDefaults",value:function(){this._o.duration!=null&&(D().error('Duration can not be declared on Timeline, but "'.concat(this._o.duration,'" is. You probably want to use Tween instead.')),this._o.duration=0),(0,p.Z)((0,g.Z)(O.prototype),"_declareDefaults",this).call(this),this._defaults.duration=0,this._defaults.easing="Linear.None",this._defaults.backwardEasing="Linear.None",this._defaults.nameBase="Timeline"}},{key:"_vars",value:function(){this._timelines=[],(0,p.Z)((0,g.Z)(O.prototype),"_vars",this).call(this)}}]),O}(f.Z)},755:(o,A,l)=>{l.d(A,{Z:()=>M});var u=l(671),c=l(144),h=l(326),q=l(752),p=l(340),g=l(963),d=l(120),D=l(47),f=l(283),y=l.n(f);function N(P){var O=function(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}();return function(){var E,V=(0,d.Z)(P);if(O){var C=(0,d.Z)(this).constructor;E=Reflect.construct(V,arguments,C)}else E=V.apply(this,arguments);return(0,g.Z)(this,E)}}const M=function(P){(0,p.Z)(E,P);var O=N(E);function E(){var V,C=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};return(0,u.Z)(this,E),(V=O.call(this,C))._props.name==null&&V._setSelfName(),(0,g.Z)(V,(0,h.Z)(V))}return(0,c.Z)(E,[{key:"_declareDefaults",value:function(){this._defaults={duration:350,delay:0,repeat:0,speed:1,isYoyo:!1,easing:"Sin.Out",backwardEasing:null,name:null,nameBase:"Tween",onProgress:null,onStart:null,onRefresh:null,onComplete:null,onRepeatStart:null,onRepeatComplete:null,onFirstUpdate:null,onUpdate:null,isChained:!1,onPlaybackStart:null,onPlaybackPause:null,onPlaybackStop:null,onPlaybackComplete:null,callbacksContext:null}}},{key:"play",value:function(){var V=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0;return this._state==="play"&&this._isRunning||(this._props.isReversed=!1,this._subPlay(V,"play"),this._setPlaybackState("play")),this}},{key:"playBackward",value:function(){var V=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0;return this._state==="reverse"&&this._isRunning||(this._props.isReversed=!0,this._subPlay(V,"reverse"),this._setPlaybackState("reverse")),this}},{key:"pause",value:function(){return this._state==="pause"||this._state==="stop"||(this._removeFromTweener(),this._setPlaybackState("pause")),this}},{key:"stop",value:function(V){if(this._state==="stop")return this;this._wasUknownUpdate=void 0;var C=V!=null?V:this._state==="reverse"?1:0;return this.setProgress(C),this.reset(),this}},{key:"replay",value:function(){var V=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0;return this.reset(),this.play(V),this}},{key:"replayBackward",value:function(){var V=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0;return this.reset(),this.playBackward(V),this}},{key:"resume",value:function(){var V=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0;if(this._state!=="pause")return this;switch(this._prevState){case"play":this.play(V);break;case"reverse":this.playBackward(V)}return this}},{key:"setProgress",value:function(V){var C=this._props;return!C.startTime&&this._setStartTime(),this._playTime=null,V<0&&(V=0),V>1&&(V=1),this._update(C.startTime-C.delay+V*C.repeatTime),this}},{key:"setSpeed",value:function(V){return this._props.speed=V,this._state!=="play"&&this._state!=="reverse"||this._setResumeTime(this._state),this}},{key:"reset",value:function(){return this._removeFromTweener(),this._setPlaybackState("stop"),this._progressTime=0,this._isCompleted=!1,this._isStarted=!1,this._isFirstUpdate=!1,this._wasUknownUpdate=void 0,this._prevTime=void 0,this._prevYoyo=void 0,this._props.isReversed=!1,this}},{key:"_subPlay",value:function(){var V=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,C=arguments.length>1?arguments[1]:void 0,B=this._props,v=this._state,J=this._prevState,K=v==="pause",rt=v==="play"||K&&J==="play",tt=v==="reverse"||K&&J==="reverse",z=rt&&C==="reverse"||tt&&C==="play";return this._progressTime=this._progressTime>=B.repeatTime?0:this._progressTime,z&&(this._progressTime=B.repeatTime-this._progressTime),this._setResumeTime(C,V),D.Z.add(this),this}},{key:"_setResumeTime",value:function(V){var C=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;this._resumeTime=performance.now();var B=this._resumeTime-Math.abs(C)-this._progressTime;this._setStartTime(B,!1),this._prevTime!=null&&(this._prevTime=V==="play"?this._normPrevTimeForward():this._props.endTime-this._progressTime)}},{key:"_normPrevTimeForward",value:function(){var V=this._props;return V.startTime+this._progressTime-V.delay}},{key:"_setSelfName",value:function(){var V="_".concat(this._props.nameBase,"s");D.Z[V]=D.Z[V]==null?1:++D.Z[V],this._props.name="".concat(this._props.nameBase," ").concat(D.Z[V])}},{key:"_setPlaybackState",value:function(V){this._prevState=this._state,this._state=V;var C=this._prevState==="pause",B=this._prevState==="stop",v=this._prevState==="play",J=this._prevState==="reverse",K=v||J;V!=="play"&&V!=="reverse"||!(B||C)||this._playbackStart(),V==="pause"&&K&&this._playbackPause(),V==="stop"&&(K||C)&&this._playbackStop()}},{key:"_vars",value:function(){return this.progress=0,this._prevTime=void 0,this._progressTime=0,this._negativeShift=0,this._state="stop",this._props.delay<0&&(this._negativeShift=this._props.delay,this._props.delay=0),this._calcDimentions()}},{key:"_calcDimentions",value:function(){this._props.time=this._props.duration+this._props.delay,this._props.repeatTime=this._props.time*(this._props.repeat+1)}},{key:"_extendDefaults",value:function(){this._callbackOverrides=this._o.callbackOverrides||{},delete this._o.callbackOverrides,(0,q.Z)((0,d.Z)(E.prototype),"_extendDefaults",this).call(this);var V=this._props;V.easing=y().parseEasing(V.easing),V.easing._parent=this,V.backwardEasing!=null&&(V.backwardEasing=y().parseEasing(V.backwardEasing),V.backwardEasing._parent=this)}},{key:"_setStartTime",value:function(V){var C=!(arguments.length>1&&arguments[1]!==void 0)||arguments[1],B=this._props,v=B.shiftTime||0;C&&(this._isCompleted=!1,this._isRepeatCompleted=!1,this._isStarted=!1);var J=V==null?performance.now():V;return B.startTime=J+B.delay+this._negativeShift+v,B.endTime=B.startTime+B.repeatTime-B.delay,this._playTime=this._resumeTime!=null?this._resumeTime:J+v,this._resumeTime=null,this}},{key:"_update",value:function(V,C,B,v){var J=this._props;this._prevTime==null&&C!=null&&(this._props.speed&&this._playTime&&(this._prevTime=this._playTime+this._props.speed*(C-this._playTime)),this._wasUknownUpdate=!0);var K=J.startTime-J.delay;if(J.speed&&this._playTime&&(V=this._playTime+J.speed*(V-this._playTime)),Math.abs(J.endTime-V)<1e-8&&(V=J.endTime),v&&B!=null){var rt=this._getPeriod(V),tt=!(!J.isYoyo||!this._props.repeat||rt%2!=1);if(this._timelines)for(var z=0;z<this._timelines.length;z++)this._timelines[z]._update(V,C,B,v);v===1?B?(this._prevTime=V+1,this._repeatStart(V,tt),this._start(V,tt)):(this._prevTime=V-1,this._repeatComplete(V,tt),this._complete(V,tt)):v===-1&&(B?(this._prevTime=V-1,this._repeatComplete(V,tt),this._complete(V,tt)):this._prevTime>=J.startTime&&this._prevTime<=J.endTime&&(this._prevTime=V+1,this._repeatStart(V,tt),this._start(V,tt),this._isCompleted=!0)),this._prevTime=void 0}return V>K&&V<J.endTime?this._progressTime=V-K:V<=K?this._progressTime=0:V>=J.endTime&&(this._progressTime=J.repeatTime+1e-11),J.isReversed&&(V=J.endTime-this._progressTime),this._prevTime==null?(this._prevTime=V,this._wasUknownUpdate=!0,!1):(V>=K&&V<=J.endTime&&this._progress((V-K)/J.repeatTime,V),V>=J.startTime&&V<=J.endTime?this._updateInActiveArea(V):this._isInActiveArea?this._updateInInactiveArea(V):this._isRefreshed||V<J.startTime&&this.progress!==0&&(this._refresh(!0),this._isRefreshed=!0),this._prevTime=V,V>=J.endTime||V<=K)}},{key:"_updateInInactiveArea",value:function(V){if(this._isInActiveArea){var C=this._props;if(V>C.endTime&&!this._isCompleted){this._progress(1,V);var B=this._getPeriod(C.endTime),v=C.isYoyo&&B%2==0;this._setProgress(v?0:1,V,v),this._repeatComplete(V,v),this._complete(V,v)}V<this._prevTime&&V<C.startTime&&!this._isStarted&&!this._isCompleted&&(this._progress(0,V,!1),this._setProgress(0,V,!1),this._isRepeatStart=!1,this._repeatStart(V,!1),this._start(V,!1)),this._isInActiveArea=!1}}},{key:"_updateInActiveArea",value:function(V){var C=this._props,B=C.delay+C.duration,v=C.startTime-C.delay,J=(V-C.startTime+C.delay)%B,K=Math.round((C.endTime-C.startTime+C.delay)/B),rt=this._getPeriod(V),tt=this._delayT,z=this._getPeriod(this._prevTime),dt=this._delayT,at=C.isYoyo&&rt%2==1,St=C.isYoyo&&z%2==1,gt=at?1:0;if(V===C.endTime)return this._wasUknownUpdate=!1,at=C.isYoyo&&(rt-1)%2==1,this._setProgress(at?0:1,V,at),V>this._prevTime&&(this._isRepeatCompleted=!1),this._repeatComplete(V,at),this._complete(V,at);if(this._isCompleted=!1,this._isRefreshed=!1,v+J>=C.startTime){this._isInActiveArea=!0,this._isRepeatCompleted=!1,this._isRepeatStart=!1,this._isStarted=!1;var kt=(V-C.startTime)%B/C.duration,Gt=rt>0&&z<rt,ce=z>rt;if(this._onEdge=0,Gt&&(this._onEdge=1),ce&&(this._onEdge=-1),this._wasUknownUpdate&&(V>this._prevTime&&(this._start(V,at),this._repeatStart(V,at),this._firstUpdate(V,at)),V<this._prevTime&&(this._complete(V,at),this._repeatComplete(V,at),this._firstUpdate(V,at),this._isCompleted=!1)),Gt){if(this.progress!==1){var Tt=C.isYoyo&&(rt-1)%2==1;this._repeatComplete(V,Tt)}z>=0&&this._repeatStart(V,at)}V>this._prevTime&&(!this._isStarted&&this._prevTime<=C.startTime&&(this._start(V,at),this._repeatStart(V,at),this._isStarted=!1,this._isRepeatStart=!1),this._firstUpdate(V,at)),ce&&(this.progress!==0&&this.progress!==1&&z!=K&&this._repeatStart(V,St),z!==K||this._wasUknownUpdate||(this._complete(V,at),this._repeatComplete(V,at),this._firstUpdate(V,at),this._isCompleted=!1),this._repeatComplete(V,at)),z==="delay"&&(rt<dt&&this._repeatComplete(V,at),rt===dt&&rt>0&&this._repeatStart(V,at)),V>this._prevTime?(kt===0&&this._repeatStart(V,at),V!==C.endTime&&this._setProgress(at?1-kt:kt,V,at)):(V!==C.endTime&&this._setProgress(at?1-kt:kt,V,at),kt===0&&this._repeatStart(V,at)),V===C.startTime&&this._start(V,at)}else if(this._isInActiveArea){var ft=rt==="delay"?tt:rt,Dt=V>this._prevTime;Dt&&ft--,gt=C.isYoyo&&ft%2==1?1:0,V<this._prevTime&&(this._setProgress(gt,V,gt===1),this._repeatStart(V,gt===1)),this._setProgress(Dt?1-gt:gt,V,gt===1),V>this._prevTime&&(this.progress===0&&gt!==1||this._repeatComplete(V,gt===1)),this._isInActiveArea=!1}this._wasUknownUpdate=!1}},{key:"_removeFromTweener",value:function(){return D.Z.remove(this),this}},{key:"_getPeriod",value:function(V){var C=this._props,B=C.delay+C.duration,v=C.delay+V-C.startTime,J=v/B,K=V<C.endTime?v%B:0;return J=V>=C.endTime?Math.round(J):Math.floor(J),V>C.endTime?J=Math.round((C.endTime-C.startTime+C.delay)/B):K>0&&K<C.delay&&(this._delayT=J,J="delay"),J}},{key:"_setProgress",value:function(V,C,B){var v=this._props,J=v.wasYoyo!==B,K=C>this._prevTime;if(this.progress=V,K&&!B||!K&&B)this.easedProgress=v.easing(V);else if(!K&&!B||K&&B){var rt=v.backwardEasing!=null?v.backwardEasing:v.easing;this.easedProgress=rt(V)}return(v.prevEasedProgress!==this.easedProgress||J)&&v.onUpdate!=null&&typeof v.onUpdate=="function"&&v.onUpdate.call(v.callbacksContext||this,this.easedProgress,this.progress,K,B),v.prevEasedProgress=this.easedProgress,v.wasYoyo=B,this}},{key:"_start",value:function(V,C){if(!this._isStarted){var B=this._props;B.onStart!=null&&typeof B.onStart=="function"&&B.onStart.call(B.callbacksContext||this,V>this._prevTime,C),this._isCompleted=!1,this._isStarted=!0,this._isFirstUpdate=!1}}},{key:"_playbackStart",value:function(){var V=this._props;V.onPlaybackStart!=null&&typeof V.onPlaybackStart=="function"&&V.onPlaybackStart.call(V.callbacksContext||this)}},{key:"_playbackPause",value:function(){var V=this._props;V.onPlaybackPause!=null&&typeof V.onPlaybackPause=="function"&&V.onPlaybackPause.call(V.callbacksContext||this)}},{key:"_playbackStop",value:function(){var V=this._props;V.onPlaybackStop!=null&&typeof V.onPlaybackStop=="function"&&V.onPlaybackStop.call(V.callbacksContext||this)}},{key:"_playbackComplete",value:function(){var V=this._props;V.onPlaybackComplete!=null&&typeof V.onPlaybackComplete=="function"&&V.onPlaybackComplete.call(V.callbacksContext||this)}},{key:"_complete",value:function(V,C){if(!this._isCompleted){var B=this._props;B.onComplete!=null&&typeof B.onComplete=="function"&&B.onComplete.call(B.callbacksContext||this,V>this._prevTime,C),this._isCompleted=!0,this._isStarted=!1,this._isFirstUpdate=!1,this._prevYoyo=void 0}}},{key:"_firstUpdate",value:function(V,C){if(!this._isFirstUpdate){var B=this._props;B.onFirstUpdate!=null&&typeof B.onFirstUpdate=="function"&&(B.onFirstUpdate.tween=this,B.onFirstUpdate.call(B.callbacksContext||this,V>this._prevTime,C)),this._isFirstUpdate=!0}}},{key:"_repeatComplete",value:function(V,C){if(!this._isRepeatCompleted){var B=this._props;B.onRepeatComplete!=null&&typeof B.onRepeatComplete=="function"&&B.onRepeatComplete.call(B.callbacksContext||this,V>this._prevTime,C),this._isRepeatCompleted=!0}}},{key:"_repeatStart",value:function(V,C){if(!this._isRepeatStart){var B=this._props;B.onRepeatStart!=null&&typeof B.onRepeatStart=="function"&&B.onRepeatStart.call(B.callbacksContext||this,V>this._prevTime,C),this._isRepeatStart=!0}}},{key:"_progress",value:function(V,C){var B=this._props;B.onProgress!=null&&typeof B.onProgress=="function"&&B.onProgress.call(B.callbacksContext||this,V,C>this._prevTime)}},{key:"_refresh",value:function(V){var C=this._props;if(C.onRefresh!=null){var B=C.callbacksContext||this,v=V?0:1;C.onRefresh.call(B,V,C.easing(v),v)}}},{key:"_onTweenerRemove",value:function(){}},{key:"_onTweenerFinish",value:function(){this._setPlaybackState("stop"),this._playbackComplete()}},{key:"_setProp",value:function(V,C){(0,q.Z)((0,d.Z)(E.prototype),"_setProp",this).call(this,V,C),this._calcDimentions()}},{key:"_assignProp",value:function(V,C){C==null&&(C=this._defaults[V]),V==="easing"&&((C=y().parseEasing(C))._parent=this);var B=this._callbackOverrides[V],v=!C||!C.isMojsCallbackOverride;B&&v&&(C=this._overrideCallback(C,B)),(0,q.Z)((0,d.Z)(E.prototype),"_assignProp",this).call(this,V,C)}},{key:"_overrideCallback",value:function(V,C){var B=V&&typeof V=="function",v=function(){B&&V.apply(this,arguments),C.apply(this,arguments)};return v.isMojsCallbackOverride=!0,v}}]),E}(l(973).Z)},47:(o,A,l)=>{l.d(A,{Z:()=>h});var u=l(671),c=l(144);const h=new(function(){function q(){return(0,u.Z)(this,q),this._vars(),this._listenVisibilityChange(),this}return(0,c.Z)(q,[{key:"_vars",value:function(){this.tweens=[],this._savedTweens=[],this._loop=this._loop.bind(this),this._onVisibilityChange=this._onVisibilityChange.bind(this)}},{key:"_loop",value:function(){return!!this._isRunning&&(this._update(window.performance.now()),this.tweens.length?(requestAnimationFrame(this._loop),this):this._isRunning=!1)}},{key:"_startLoop",value:function(){this._isRunning||(this._isRunning=!0,requestAnimationFrame(this._loop))}},{key:"_stopLoop",value:function(){this._isRunning=!1}},{key:"_update",value:function(p){for(var g=this.tweens.length;g--;){var d=this.tweens[g];d&&d._update(p)===!0&&(this.remove(d),d._onTweenerFinish(),d._prevTime=void 0)}}},{key:"add",value:function(p){p._isRunning||(p._isRunning=!0,this.tweens.push(p),this._startLoop())}},{key:"removeAll",value:function(){this.tweens.length=0}},{key:"remove",value:function(p){var g=typeof p=="number"?p:this.tweens.indexOf(p);g!==-1&&(p=this.tweens[g])&&(p._isRunning=!1,this.tweens.splice(g,1),p._onTweenerRemove())}},{key:"_listenVisibilityChange",value:function(){document.hidden!==void 0?(this._visibilityHidden="hidden",this._visibilityChange="visibilitychange"):document.mozHidden!==void 0?(this._visibilityHidden="mozHidden",this._visibilityChange="mozvisibilitychange"):document.msHidden!==void 0?(this._visibilityHidden="msHidden",this._visibilityChange="msvisibilitychange"):document.webkitHidden!==void 0&&(this._visibilityHidden="webkitHidden",this._visibilityChange="webkitvisibilitychange"),document.addEventListener(this._visibilityChange,this._onVisibilityChange,!1)}},{key:"_onVisibilityChange",value:function(){document[this._visibilityHidden]?this._savePlayingTweens():this._restorePlayingTweens()}},{key:"_savePlayingTweens",value:function(){this._savedTweens=this.tweens.slice(0);for(var p=0;p<this._savedTweens.length;p++)this._savedTweens[p].pause()}},{key:"_restorePlayingTweens",value:function(){for(var p=0;p<this._savedTweens.length;p++)this._savedTweens[p].resume()}}]),q}())},977:(o,A,l)=>{var u,c;c=l(52),u=new(function(){function h(q){return this.vars(),this.generate}return h.prototype.vars=function(){return this.generate=c.bind(this.generate,this)},h.prototype.generate=function(q,p,g,d){var D,f,y,N,M,P,O,E,V,C,B,v,J,K,rt,tt,z,dt,at,St,gt,kt,Gt,ce;if(arguments.length<4)return this.error("Bezier function expects 4 arguments");for(z=dt=0;dt<4;z=++dt)if(typeof(V=arguments[z])!="number"||isNaN(V)||!isFinite(V))return this.error("Bezier function expects 4 arguments");return q<0||q>1||g<0||g>1?this.error("Bezier x values should be > 0 and < 1"):(N=4,M=.001,O=1e-7,P=10,at=1/((St=11)-1),K=!!Float32Array,D=function(Tt,ft){return 1-3*ft+3*Tt},f=function(Tt,ft){return 3*ft-6*Tt},y=function(Tt){return 3*Tt},B=function(Tt,ft,Dt){return((D(ft,Dt)*Tt+f(ft,Dt))*Tt+y(ft))*Tt},rt=function(Tt,ft,Dt){return 3*D(ft,Dt)*Tt*Tt+2*f(ft,Dt)*Tt+y(ft)},kt=function(Tt,ft){var Dt;for(z=0;z<N;){if((Dt=rt(ft,q,g))===0)return ft;ft-=(B(ft,q,g)-Tt)/Dt,++z}return ft},v=function(){for(z=0;z<St;)gt[z]=B(z*at,q,g),++z},C=function(Tt,ft,Dt){var ie,Oe;for(Oe=void 0,ie=void 0,z=0;(Oe=B(ie=ft+(Dt-ft)/2,q,g)-Tt)>0?Dt=ie:ft=ie,Math.abs(Oe)>O&&++z<P;);return ie},tt=function(Tt){var ft,Dt,ie,Oe,Nt,Ie,be;for(Ie=0,ft=1,be=St-1;ft!==be&&gt[ft]<=Tt;)Ie+=at,++ft;return--ft,Dt=gt[ft+1]-gt[ft],ie=(Tt-gt[ft])/Dt,(Nt=rt(Oe=Ie+ie*at,q,g))>=M?kt(Tt,Oe):Nt===0?Oe:C(Tt,Ie,Ie+at)},Gt=function(){if(q!==p||g!==d)return v()},gt=K?new Float32Array(St):new Array(St),E=!1,ce="bezier("+[q,p,g,d]+")",(J=function(Tt){return E||Gt(),q===p&&g===d?Tt:Tt===0?0:Tt===1?1:B(tt(Tt),p,d)}).toStr=function(){return ce},J)},h.prototype.error=function(q){return c.error(q)},h}()),o.exports=u},283:(o,A,l)=>{var u,c,h,q,p,g,d,D,f;d=l(52),p=l(977),h=l(162),D=l(440),q=l(50).Z,f=Math.sin,c=Math.PI,u=function(){function y(){}return y.prototype.bezier=p,y.prototype.PathEasing=h,y.prototype.path=new h("creator").create,y.prototype.approximate=q,y.prototype.inverse=function(N){return 1-N},y.prototype.linear={none:function(N){return N}},y.prototype.ease={in:p.apply(y,[.42,0,1,1]),out:p.apply(y,[0,0,.58,1]),inout:p.apply(y,[.42,0,.58,1])},y.prototype.sin={in:function(N){return 1-Math.cos(N*c/2)},out:function(N){return f(N*c/2)},inout:function(N){return .5*(1-Math.cos(c*N))}},y.prototype.quad={in:function(N){return N*N},out:function(N){return N*(2-N)},inout:function(N){return(N*=2)<1?.5*N*N:-.5*(--N*(N-2)-1)}},y.prototype.cubic={in:function(N){return N*N*N},out:function(N){return--N*N*N+1},inout:function(N){return(N*=2)<1?.5*N*N*N:.5*((N-=2)*N*N+2)}},y.prototype.quart={in:function(N){return N*N*N*N},out:function(N){return 1- --N*N*N*N},inout:function(N){return(N*=2)<1?.5*N*N*N*N:-.5*((N-=2)*N*N*N-2)}},y.prototype.quint={in:function(N){return N*N*N*N*N},out:function(N){return--N*N*N*N*N+1},inout:function(N){return(N*=2)<1?.5*N*N*N*N*N:.5*((N-=2)*N*N*N*N+2)}},y.prototype.expo={in:function(N){return N===0?0:Math.pow(1024,N-1)},out:function(N){return N===1?1:1-Math.pow(2,-10*N)},inout:function(N){return N===0?0:N===1?1:(N*=2)<1?.5*Math.pow(1024,N-1):.5*(2-Math.pow(2,-10*(N-1)))}},y.prototype.circ={in:function(N){return 1-Math.sqrt(1-N*N)},out:function(N){return Math.sqrt(1- --N*N)},inout:function(N){return(N*=2)<1?-.5*(Math.sqrt(1-N*N)-1):.5*(Math.sqrt(1-(N-=2)*N)+1)}},y.prototype.back={in:function(N){var M;return N*N*((1+(M=1.70158))*N-M)},out:function(N){var M;return--N*N*((1+(M=1.70158))*N+M)+1},inout:function(N){var M;return M=2.5949095,(N*=2)<1?N*N*((M+1)*N-M)*.5:.5*((N-=2)*N*((M+1)*N+M)+2)}},y.prototype.elastic={in:function(N){return N===0?0:N===1?1:-1*Math.pow(2,10*(N-=1))*Math.sin((N-.1)*(2*Math.PI)/.4)},out:function(N){return N===0?0:N===1?1:1*Math.pow(2,-10*N)*Math.sin((N-.1)*(2*Math.PI)/.4)+1},inout:function(N){return N===0?0:N===1?1:(N*=2)<1?1*Math.pow(2,10*(N-=1))*Math.sin((N-.1)*(2*Math.PI)/.4)*-.5:1*Math.pow(2,-10*(N-=1))*Math.sin((N-.1)*(2*Math.PI)/.4)*.5+1}},y.prototype.bounce={in:function(N){return 1-g.bounce.out(1-N)},out:function(N){return N<.36363636363636365?7.5625*N*N:N<.7272727272727273?7.5625*(N-=.5454545454545454)*N+.75:N<.9090909090909091?7.5625*(N-=.8181818181818182)*N+.9375:7.5625*(N-=.9545454545454546)*N+.984375},inout:function(N){return N<.5?.5*g.bounce.in(2*N):.5*g.bounce.out(2*N-1)+.5}},y.prototype.parseEasing=function(N){var M;return N==null&&(N="linear.none"),typeof N=="string"?N.charAt(0).toLowerCase()==="m"?this.path(N):(M=this[(N=this._splitEasing(N))[0]])?M[N[1]]:(d.error('Easing with name "'+N[0]+'" was not found, fallback to "linear.none" instead'),this.linear.none):d.isArray(N)?this.bezier.apply(this,N):N},y.prototype._splitEasing=function(N){var M;return typeof N=="function"?N:typeof N=="string"&&N.length?[(M=N.split("."))[0].toLowerCase()||"linear",M[1].toLowerCase()||"none"]:["linear","none"]},y}(),(g=new u).mix=D(g),o.exports=g},440:o=>{var A,l,u,c,h,q,p=[].slice;l=null,h=function(g){return typeof g.value=="number"?g.value:l.parseEasing(g.value)},q=function(g,d){var D;return g.value=h(g),d.value=h(d),D=0,g.to<d.to&&(D=-1),g.to>d.to&&(D=1),D},u=function(g,d){var D,f,y,N;for(f=0,D=y=0,N=g.length;y<N&&(f=D,!(g[D].to>d));D=++y);return f},c=function(){var g;return(g=1<=arguments.length?p.call(arguments,0):[]).length>1?g=g.sort(q):g[0].value=h(g[0]),function(d){var D,f;if((D=u(g,d))!==-1)return f=g[D].value,D===g.length-1&&d>g[D].to?1:typeof f=="function"?f(d):f}},A=function(g){return l=g,c},o.exports=A},162:(o,A,l)=>{var u,c;c=l(52),u=function(){function h(q,p){if(this.o=p!=null?p:{},q!=="creator"){if(this.path=c.parsePath(q),this.path==null)return c.error("Error while parsing the path");this._vars(),this.path.setAttribute("d",this._normalizePath(this.path.getAttribute("d"))),this.pathLength=this.path.getTotalLength(),this.sample=c.bind(this.sample,this),this._hardSample=c.bind(this._hardSample,this),this._preSample()}}return h.prototype._vars=function(){return this._precompute=c.clamp(this.o.precompute||1450,100,1e4),this._step=1/this._precompute,this._rect=this.o.rect||100,this._approximateMax=this.o.approximateMax||5,this._eps=this.o.eps||.001,this._boundsPrevProgress=-1},h.prototype._preSample=function(){var q,p,g,d,D,f,y;for(this._samples=[],y=[],q=p=0,f=this._precompute;0<=f?p<=f:p>=f;q=0<=f?++p:--p)D=q*this._step,g=this.pathLength*D,d=this.path.getPointAtLength(g),y.push(this._samples[q]={point:d,length:g,progress:D});return y},h.prototype._findBounds=function(q,p){var g,d,D,f,y,N,M,P,O,E,V,C,B;if(p===this._boundsPrevProgress)return this._prevBounds;for(this._boundsStartIndex==null&&(this._boundsStartIndex=0),N=q.length,this._boundsPrevProgress>p?(M=0,d="reverse"):(M=N,d="forward"),d==="forward"?(C=q[0],D=q[q.length-1]):(C=q[q.length-1],D=q[0]),f=y=E=this._boundsStartIndex,V=M;E<=V?y<V:y>V;f=E<=V?++y:--y){if(O=(B=q[f]).point.x/this._rect,P=p,d==="reverse"&&(g=O,O=P,P=g),!(O<P)){D=B;break}C=B,this._boundsStartIndex=f}return this._boundsPrevProgress=p,this._prevBounds={start:C,end:D}},h.prototype.sample=function(q){var p,g;return q=c.clamp(q,0,1),p=this._findBounds(this._samples,q),(g=this._checkIfBoundsCloseEnough(q,p))!=null?g:this._findApproximate(q,p.start,p.end)},h.prototype._checkIfBoundsCloseEnough=function(q,p){var g;return(g=this._checkIfPointCloseEnough(q,p.start.point))!=null?g:this._checkIfPointCloseEnough(q,p.end.point)},h.prototype._checkIfPointCloseEnough=function(q,p){if(c.closeEnough(q,p.x/this._rect,this._eps))return this._resolveY(p)},h.prototype._approximate=function(q,p,g){var d,D;return d=p.point.x-q.point.x,D=(g-q.point.x/this._rect)/(d/this._rect),q.length+D*(p.length-q.length)},h.prototype._findApproximate=function(q,p,g,d){var D,f,y,N,M;return d==null&&(d=this._approximateMax),D=this._approximate(p,g,q),M=(N=this.path.getPointAtLength(D)).x/this._rect,c.closeEnough(q,M,this._eps)||--d<1?this._resolveY(N):(y={point:N,length:D},f=q<M?[q,p,y,d]:[q,y,g,d],this._findApproximate.apply(this,f))},h.prototype._resolveY=function(q){return 1-q.y/this._rect},h.prototype._normalizePath=function(q){var p,g,d,D;return D=/[M|L|H|V|C|S|Q|T|A]/gim,(d=q.split(D)).shift(),p=q.match(D),d[0]=this._normalizeSegment(d[0]),d[g=d.length-1]=this._normalizeSegment(d[g],this._rect||100),this._joinNormalizedPath(p,d)},h.prototype._joinNormalizedPath=function(q,p){var g,d,D,f;for(f="",g=d=0,D=q.length;d<D;g=++d)f+=(g===0?"":" ")+q[g]+p[g].trim();return f},h.prototype._normalizeSegment=function(q,p){var g,d,D,f,y,N,M,P;if(p==null&&(p=0),q=q.trim(),y=/(-|\+)?((\d+(\.(\d|\e(-|\+)?)+)?)|(\.?(\d|\e|(\-|\+))+))/gim,P=(D=(N=this._getSegmentPairs(q.match(y)))[N.length-1])[0],Number(P)!==p)for(q="",D[0]=p,g=d=0,f=N.length;d<f;g=++d)q+=(g===0?"":" ")+(M=N[g])[0]+","+M[1];return q},h.prototype._getSegmentPairs=function(q){var p,g,d,D,f;for(q.length%2!=0&&c.error("Failed to parse the path - segment pairs are not even.",q),D=[],p=g=0,d=q.length;g<d;p=g+=2)q[p],f=[q[p],q[p+1]],D.push(f);return D},h.prototype.create=function(q,p){var g;return(g=new h(q,p)).sample.path=g.path,g.sample},h}(),o.exports=u},52:o=>{var A,l;A=function(){function u(){this.vars()}return u.prototype.NS="http://www.w3.org/2000/svg",u.prototype.logBadgeCss="background:#3A0839;color:#FF512F;border-radius:5px; padding: 1px 5px 2px; border: 1px solid #FF512F;",u.prototype.shortColors={transparent:"rgba(0,0,0,0)",none:"rgba(0,0,0,0)",aqua:"rgb(0,255,255)",black:"rgb(0,0,0)",blue:"rgb(0,0,255)",fuchsia:"rgb(255,0,255)",gray:"rgb(128,128,128)",green:"rgb(0,128,0)",lime:"rgb(0,255,0)",maroon:"rgb(128,0,0)",navy:"rgb(0,0,128)",olive:"rgb(128,128,0)",purple:"rgb(128,0,128)",red:"rgb(255,0,0)",silver:"rgb(192,192,192)",teal:"rgb(0,128,128)",white:"rgb(255,255,255)",yellow:"rgb(255,255,0)",orange:"rgb(255,128,0)"},u.prototype.chainOptionMap={},u.prototype.callbacksMap={onRefresh:1,onStart:1,onComplete:1,onFirstUpdate:1,onUpdate:1,onProgress:1,onRepeatStart:1,onRepeatComplete:1,onPlaybackStart:1,onPlaybackPause:1,onPlaybackStop:1,onPlaybackComplete:1},u.prototype.tweenOptionMap={duration:1,delay:1,speed:1,repeat:1,easing:1,backwardEasing:1,isYoyo:1,shiftTime:1,isReversed:1,callbacksContext:1},u.prototype.unitOptionMap={left:1,top:1,x:1,y:1,rx:1,ry:1},u.prototype.RAD_TO_DEG=180/Math.PI,u.prototype.vars=function(){var c;return this.prefix=this.getPrefix(),this.getRemBase(),this.isFF=this.prefix.lowercase==="moz",this.isIE=this.prefix.lowercase==="ms",c=navigator.userAgent,this.isOldOpera=c.match(/presto/gim),this.isSafari=c.indexOf("Safari")>-1,this.isChrome=c.indexOf("Chrome")>-1,this.isOpera=c.toLowerCase().indexOf("op")>-1,this.isChrome&&this.isSafari&&(this.isSafari=!1),c.match(/PhantomJS/gim)&&(this.isSafari=!1),this.isChrome&&this.isOpera&&(this.isChrome=!1),this.is3d=this.checkIf3d(),this.uniqIDs=-1,this.div=document.createElement("div"),document.body.appendChild(this.div),this.defaultStyles=this.computedStyle(this.div)},u.prototype.cloneObj=function(c,h){var q,p,g,d;for(d={},q=(g=Object.keys(c)).length;q--;)p=g[q],h!=null&&h[p]||(d[p]=c[p]);return d},u.prototype.extend=function(c,h){var q;for(q in h)h[q],c[q]==null&&(c[q]=h[q]);return c},u.prototype.getRemBase=function(){var c,h;return c=document.querySelector("html"),h=getComputedStyle(c),this.remBase=parseFloat(h.fontSize)},u.prototype.clamp=function(c,h,q){return c<h?h:c>q?q:c},u.prototype.setPrefixedStyle=function(c,h,q){return h==="transform"&&(c.style[""+this.prefix.css+h]=q),c.style[h]=q},u.prototype.style=function(c,h,q){var p,g,d,D;if(typeof h=="object"){for(d=(g=Object.keys(h)).length,D=[];d--;)q=h[p=g[d]],D.push(this.setPrefixedStyle(c,p,q));return D}return this.setPrefixedStyle(c,h,q)},u.prototype.prepareForLog=function(c){return(c=Array.prototype.slice.apply(c)).unshift("::"),c.unshift(this.logBadgeCss),c.unshift("%cmo\xB7js%c"),c},u.prototype.log=function(){if(mojs.isDebug!==!1)return console.log.apply(console,this.prepareForLog(arguments))},u.prototype.warn=function(){if(mojs.isDebug!==!1)return console.warn.apply(console,this.prepareForLog(arguments))},u.prototype.error=function(){if(mojs.isDebug!==!1)return console.error.apply(console,this.prepareForLog(arguments))},u.prototype.parseUnit=function(c){var h,q,p,g,d;return typeof c=="number"?{unit:"px",isStrict:!1,value:c,string:c===0?""+c:c+"px"}:typeof c=="string"?(g=/px|%|rem|em|ex|cm|ch|mm|in|pt|pc|vh|vw|vmin|deg/gim,q=!0,(d=(p=c.match(g))!=null?p[0]:void 0)||(d="px",q=!1),{unit:d,isStrict:q,value:h=parseFloat(c),string:h===0?""+h:""+h+d}):c},u.prototype.bind=function(c,h){var q,p;return p=function(){var g,d;return g=Array.prototype.slice.call(arguments),d=q.concat(g),c.apply(h,d)},q=Array.prototype.slice.call(arguments,2),p},u.prototype.getRadialPoint=function(c){var h,q,p;return c==null&&(c={}),h=.017453292519943295*(c.rotate-90),q=c.radiusX!=null?c.radiusX:c.radius,p=c.radiusY!=null?c.radiusY:c.radius,{x:c.center.x+Math.cos(h)*q,y:c.center.y+Math.sin(h)*p}},u.prototype.getPrefix=function(){var c,h,q;return q=window.getComputedStyle(document.documentElement,""),c=(Array.prototype.slice.call(q).join("").match(/-(moz|webkit|ms)-/)||q.OLink===""&&["","o"])[1],{dom:(h="WebKit|Moz|MS|O".match(new RegExp("("+c+")","i")))!=null?h[1]:void 0,lowercase:c,css:"-"+c+"-",js:(c!=null?c[0].toUpperCase():void 0)+(c!=null?c.substr(1):void 0)}},u.prototype.strToArr=function(c){var h,q;return h=[],typeof c!="number"||isNaN(c)?(c.trim().split(/\s+/gim).forEach((q=this,function(p){return h.push(q.parseUnit(q.parseIfRand(p)))})),h):(h.push(this.parseUnit(c)),h)},u.prototype.calcArrDelta=function(c,h){var q,p,g,d;for(q=[],p=g=0,d=c.length;g<d;p=++g)c[p],q[p]=this.parseUnit(""+(h[p].value-c[p].value)+h[p].unit);return q},u.prototype.isArray=function(c){return c instanceof Array},u.prototype.normDashArrays=function(c,h){var q,p,g,d,D,f,y,N,M,P;if((q=c.length)>(p=h.length))for(y=q-p,P=h.length,d=D=0,N=y;0<=N?D<N:D>N;d=0<=N?++D:--D)g=d+P,h.push(this.parseUnit("0"+c[g].unit));else if(p>q)for(y=p-q,P=c.length,d=f=0,M=y;0<=M?f<M:f>M;d=0<=M?++f:--f)g=d+P,c.push(this.parseUnit("0"+h[g].unit));return[c,h]},u.prototype.makeColorObj=function(c){var h,q,p,g,d,D,f,y;return c[0]==="#"&&(p={},(f=/^#?([a-f\d]{1,2})([a-f\d]{1,2})([a-f\d]{1,2})$/i.exec(c))&&(D=f[1].length===2?f[1]:f[1]+f[1],g=f[2].length===2?f[2]:f[2]+f[2],q=f[3].length===2?f[3]:f[3]+f[3],p={r:parseInt(D,16),g:parseInt(g,16),b:parseInt(q,16),a:1})),c[0]!=="#"&&((d=c[0]==="r"&&c[1]==="g"&&c[2]==="b")&&(y=c),d||(y=this.shortColors[c]?this.shortColors[c]:(this.div.style.color=c,this.computedStyle(this.div).color)),f=new RegExp("^rgba?\\((\\d{1,3}),\\s?(\\d{1,3}),\\s?(\\d{1,3}),?\\s?(\\d{1}|0?\\.\\d{1,})?\\)$","gi").exec(y),p={},h=parseFloat(f[4]||1),f&&(p={r:parseInt(f[1],10),g:parseInt(f[2],10),b:parseInt(f[3],10),a:h==null||isNaN(h)?1:h})),p},u.prototype.computedStyle=function(c){return getComputedStyle(c)},u.prototype.capitalize=function(c){if(typeof c!="string")throw Error("String expected - nothing to capitalize");return c.charAt(0).toUpperCase()+c.substring(1)},u.prototype.parseRand=function(c){var h,q,p;return q=c.split(/rand\(|\,|\)/),p=this.parseUnit(q[2]),h=this.rand(parseFloat(q[1]),parseFloat(q[2])),p.unit&&q[2].match(p.unit)?h+p.unit:h},u.prototype.parseStagger=function(c,h){var q,p,g,d,D,f;return g=(f=c.split(/stagger\(|\)$/)[1].toLowerCase()).split(/(rand\(.*?\)|[^\(,\s]+)(?=\s*,|\s*$)/gim),f=g.length>3?(q=this.parseUnit(this.parseIfRand(g[1])),g[3]):(q=this.parseUnit(0),g[1]),f=this.parseIfRand(f),p=h*(D=this.parseUnit(f)).value+q.value,(d=q.isStrict?q.unit:D.isStrict?D.unit:"")?""+p+d:p},u.prototype.parseIfStagger=function(c,h){return typeof c=="string"&&c.match(/stagger/g)?this.parseStagger(c,h):c},u.prototype.parseIfRand=function(c){return typeof c=="string"&&c.match(/rand\(/)?this.parseRand(c):c},u.prototype.parseDelta=function(c,h,q){var p,g,d,D,f,y,N,M,P,O,E,V;if((d=(h=this.cloneObj(h)).easing)!=null&&(d=mojs.easing.parseEasing(d)),delete h.easing,(p=h.curve)!=null&&(p=mojs.easing.parseEasing(p)),delete h.curve,D=h[O=Object.keys(h)[0]],g={start:O},!isNaN(parseFloat(O))||O.match(/rand\(/)||O.match(/stagger\(/))if(c==="strokeDasharray"||c==="strokeDashoffset"||c==="origin"){for(E=this.strToArr(O),f=this.strToArr(D),this.normDashArrays(E,f),N=M=0,P=E.length;M<P;N=++M)O=E[N],D=f[N],this.mergeUnits(O,D,c);g={type:"array",name:c,start:E,end:f,delta:this.calcArrDelta(E,f),easing:d,curve:p}}else this.callbacksMap[c]||this.tweenOptionMap[c]||(this.unitOptionMap[c]?(D=this.parseUnit(this.parseStringOption(D,q)),O=this.parseUnit(this.parseStringOption(O,q)),this.mergeUnits(O,D,c),g={type:"unit",name:c,start:O,end:D,delta:D.value-O.value,easing:d,curve:p}):(D=parseFloat(this.parseStringOption(D,q)),g={type:"number",name:c,start:O=parseFloat(this.parseStringOption(O,q)),end:D,delta:D-O,easing:d,curve:p}));else{if(c==="strokeLinecap")return this.warn("Sorry, stroke-linecap property is not animatable yet, using the start("+O+") value instead",h),g;g={type:"color",name:c,start:V=this.makeColorObj(O),end:y=this.makeColorObj(D),easing:d,curve:p,delta:{r:y.r-V.r,g:y.g-V.g,b:y.b-V.b,a:y.a-V.a}}}return g},u.prototype.mergeUnits=function(c,h,q){return!h.isStrict&&c.isStrict?(h.unit=c.unit,h.string=""+h.value+h.unit):h.isStrict&&!c.isStrict?(c.unit=h.unit,c.string=""+c.value+c.unit):h.isStrict&&c.isStrict&&h.unit!==c.unit?(c.unit=h.unit,c.string=""+c.value+c.unit,this.warn('Two different units were specified on "'+q+'" delta property, mo \xB7 js will fallback to end "'+h.unit+'" unit ')):void 0},u.prototype.rand=function(c,h){return Math.random()*(h-c)+c},u.prototype.isDOM=function(c){var h;return c!=null&&(h=typeof c.nodeType=="number"&&typeof c.nodeName=="string",typeof c=="object"&&h)},u.prototype.getChildElements=function(c){var h,q,p;for(q=[],p=(h=c.childNodes).length;p--;)h[p].nodeType===1&&q.unshift(h[p]);return q},u.prototype.delta=function(c,h){var q,p,g,d,D;if(D=typeof h,q=(d=typeof c)=="string"||d==="number"&&!isNaN(c),p=D==="string"||D==="number"&&!isNaN(h),q&&p)return(g={})[c]=h,g;this.error("delta method expects Strings or Numbers at input but got - "+c+", "+h)},u.prototype.getUniqID=function(){return++this.uniqIDs},u.prototype.parsePath=function(c){var h;return typeof c=="string"?c.charAt(0).toLowerCase()==="m"?((h=document.createElementNS(this.NS,"path")).setAttributeNS(null,"d",c),h):document.querySelector(c):c.style?c:void 0},u.prototype.closeEnough=function(c,h,q){return Math.abs(c-h)<q},u.prototype.checkIf3d=function(){var c,h,q;return c=document.createElement("div"),this.style(c,"transform","translateZ(0)"),((q=c.style)[h=this.prefix.css+"transform"]!=null?q[h]:q.transform)!==""},u.prototype.isObject=function(c){return c!==null&&typeof c=="object"},u.prototype.getDeltaEnd=function(c){return c[Object.keys(c)[0]]},u.prototype.getDeltaStart=function(c){return Object.keys(c)[0]},u.prototype.isTweenProp=function(c){return this.tweenOptionMap[c]||this.callbacksMap[c]},u.prototype.parseStringOption=function(c,h){return h==null&&(h=0),typeof c=="string"&&(c=this.parseIfStagger(c,h),c=this.parseIfRand(c)),c},u.prototype.getLastItem=function(c){return c[c.length-1]},u.prototype.parseEl=function(c){return l.isDOM(c)||(typeof c=="string"&&(c=document.querySelector(c)),c===null&&l.error("Can't parse HTML element: ",c)),c},u.prototype.force3d=function(c){return this.setPrefixedStyle(c,"backface-visibility","hidden"),c},u.prototype.isDelta=function(c){return!(!this.isObject(c)||c.unit||this.isArray(c)||this.isDOM(c))},u}(),l=new A,o.exports=l},291:(o,A,l)=>{var u,c,h,q,p;q=l(52),p=l(247),h=l(755).Z,c=l(342).Z,u=function(){function g(d){var D,f;this.o=d!=null?d:{},this.calcHeight=(D=this.calcHeight,f=this,function(){return D.apply(f,arguments)}),this.vars()||this.createTween()}return g.prototype.defaults={path:null,curvature:{x:"75%",y:"50%"},isCompositeLayer:!0,delay:0,duration:1e3,easing:null,repeat:0,yoyo:!1,onStart:null,onComplete:null,onUpdate:null,offsetX:0,offsetY:0,rotationOffset:null,pathStart:0,pathEnd:1,motionBlur:0,transformOrigin:null,isRotation:!1,isReverse:!1,isRunLess:!1,isPresetPosition:!0},g.prototype.vars=function(){return this.getScaler=q.bind(this.getScaler,this),this.resize=p,this.props=q.cloneObj(this.defaults),this.extendOptions(this.o),this.isMotionBlurReset=q.isSafari||q.isIE,this.isMotionBlurReset&&(this.props.motionBlur=0),this.history=[q.cloneObj(this.props)],this.postVars()},g.prototype.curveToPath=function(d){var D,f,y,N,M,P,O,E,V,C,B,v;return V=document.createElementNS(q.NS,"path"),E={x:(v=d.start).x+d.shift.x,y:v.x+d.shift.y},D=d.curvature,P=d.shift.x,O=d.shift.y,C=Math.sqrt(P*P+O*O)/100,B=Math.atan(O/P)*(180/Math.PI)+90,d.shift.x<0&&(B+=180),f=(f=q.parseUnit(D.x)).unit==="%"?f.value*C:f.value,M=q.getRadialPoint({center:{x:v.x,y:v.y},radius:f,rotate}),y=(y=q.parseUnit(D.y)).unit==="%"?y.value*C:y.value,N=q.getRadialPoint({center:{x:M.x,y:M.y},radius:y,rotate:B+90}),V.setAttribute("d","M"+v.x+","+v.y+" Q"+N.x+","+N.y+" "+E.x+","+E.y),V},g.prototype.postVars=function(){return this.props.pathStart=q.clamp(this.props.pathStart,0,1),this.props.pathEnd=q.clamp(this.props.pathEnd,this.props.pathStart,1),this.rotate=0,this.speedX=0,this.speedY=0,this.blurX=0,this.blurY=0,this.prevCoords={},this.blurAmount=20,this.props.motionBlur=q.clamp(this.props.motionBlur,0,1),this.onUpdate=this.props.onUpdate,this.o.el?(this.el=this.parseEl(this.props.el),this.props.motionBlur>0&&this.createFilter(),this.path=this.getPath(),this.path.getAttribute("d")?(this.len=this.path.getTotalLength(),this.slicedLen=this.len*(this.props.pathEnd-this.props.pathStart),this.startLen=this.props.pathStart*this.len,this.fill=this.props.fill,this.fill!=null&&(this.container=this.parseEl(this.props.fill.container),this.fillRule=this.props.fill.fillRule||"all",this.getScaler(),this.container!=null)?(this.removeEvent(this.container,"onresize",this.getScaler),this.addEvent(this.container,"onresize",this.getScaler)):void 0):(q.error("Path has no coordinates to work with, aborting"),!0)):(q.error('Missed "el" option. It could be a selector, DOMNode or another module.'),!0)},g.prototype.addEvent=function(d,D,f){return d.addEventListener(D,f,!1)},g.prototype.removeEvent=function(d,D,f){return d.removeEventListener(D,f,!1)},g.prototype.createFilter=function(){var d,D;return d=document.createElement("div"),this.filterID="filter-"+q.getUniqID(),d.innerHTML='<svg id="svg-'+this.filterID+`"
    style="visibility:hidden; width:0px; height:0px">
  <filter id="`+this.filterID+`" y="-20" x="-20" width="40" height="40">
    <feOffset
      id="blur-offset" in="SourceGraphic"
      dx="0" dy="0" result="offset2"></feOffset>
    <feGaussianblur
      id="blur" in="offset2"
      stdDeviation="0,0" result="blur2"></feGaussianblur>
    <feMerge>
      <feMergeNode in="SourceGraphic"></feMergeNode>
      <feMergeNode in="blur2"></feMergeNode>
    </feMerge>
  </filter>
</svg>`,D=d.querySelector("#svg-"+this.filterID),this.filter=D.querySelector("#blur"),this.filterOffset=D.querySelector("#blur-offset"),document.body.insertBefore(D,document.body.firstChild),this.el.style.filter="url(#"+this.filterID+")",this.el.style[q.prefix.css+"filter"]="url(#"+this.filterID+")"},g.prototype.parseEl=function(d){return typeof d=="string"?document.querySelector(d):d instanceof HTMLElement?d:d._setProp!=null?(this.isModule=!0,d):void 0},g.prototype.getPath=function(){return q.parsePath(this.props.path)||(this.props.path.x||this.props.path.y?this.curveToPath({start:{x:0,y:0},shift:{x:this.props.path.x||0,y:this.props.path.y||0},curvature:{x:this.props.curvature.x||this.defaults.curvature.x,y:this.props.curvature.y||this.defaults.curvature.y}}):void 0)},g.prototype.getScaler=function(){var d,D,f;switch(this.cSize={width:this.container.offsetWidth||0,height:this.container.offsetHeight||0},f=this.path.getPointAtLength(0),d=this.path.getPointAtLength(this.len),D={},this.scaler={},D.width=d.x>=f.x?d.x-f.x:f.x-d.x,D.height=d.y>=f.y?d.y-f.y:f.y-d.y,this.fillRule){case"all":return this.calcWidth(D),this.calcHeight(D);case"width":return this.calcWidth(D),this.scaler.y=this.scaler.x;case"height":return this.calcHeight(D),this.scaler.x=this.scaler.y}},g.prototype.calcWidth=function(d){return this.scaler.x=this.cSize.width/d.width,!isFinite(this.scaler.x)&&(this.scaler.x=1)},g.prototype.calcHeight=function(d){return this.scaler.y=this.cSize.height/d.height,!isFinite(this.scaler.y)&&(this.scaler.y=1)},g.prototype.run=function(d){var D,f;if(d){for(D in this.history[0],d)f=d[D],q.callbacksMap[D]||q.tweenOptionMap[D]?(q.warn('the property "'+D+'" property can not be overridden on run yet'),delete d[D]):this.history[0][D]=f;this.tuneOptions(d)}return this.startTween()},g.prototype.createTween=function(){var d;return this.tween=new h({duration:this.props.duration,delay:this.props.delay,yoyo:this.props.yoyo,repeat:this.props.repeat,easing:this.props.easing,onStart:(d=this,function(){var D;return(D=d.props.onStart)!=null?D.apply(d):void 0}),onComplete:function(D){return function(){var f;return D.props.motionBlur&&D.setBlur({blur:{x:0,y:0},offset:{x:0,y:0}}),(f=D.props.onComplete)!=null?f.apply(D):void 0}}(this),onUpdate:function(D){return function(f){return D.setProgress(f)}}(this),onFirstUpdate:function(D){return function(f,y){if(!f)return D.history.length>1&&D.tuneOptions(D.history[0])}}(this)}),this.timeline=new c,this.timeline.add(this.tween),!this.props.isRunLess&&this.startTween(),this.props.isPresetPosition&&this.setProgress(0,!0)},g.prototype.startTween=function(){return setTimeout((d=this,function(){var D;return(D=d.timeline)!=null?D.play():void 0}),1);var d},g.prototype.setProgress=function(d,D){var f,y,N,M;return f=this.startLen+(this.props.isReverse?(1-d)*this.slicedLen:d*this.slicedLen),N=(y=this.path.getPointAtLength(f)).x+this.props.offsetX,M=y.y+this.props.offsetY,this._getCurrentRotation(y,f,d),this._setTransformOrigin(d),this._setTransform(N,M,d,D),this.props.motionBlur&&this.makeMotionBlur(N,M)},g.prototype.setElPosition=function(d,D,f){var y;return y="translate("+d+"px,"+D+"px) "+(this.rotate!==0?"rotate("+this.rotate+"deg)":"")+" "+(this.props.isCompositeLayer&&q.is3d?"translateZ(0)":""),q.setPrefixedStyle(this.el,"transform",y)},g.prototype.setModulePosition=function(d,D){return this.el._setProp({shiftX:d+"px",shiftY:D+"px",rotate:this.rotate}),this.el._draw()},g.prototype._getCurrentRotation=function(d,D,f){var y,N,M,P,O;return N=typeof this.props.transformOrigin=="function",this.props.isRotation||this.props.rotationOffset!=null||N?(M=this.path.getPointAtLength(D-1),P=d.y-M.y,O=d.x-M.x,y=Math.atan(P/O),!isFinite(y)&&(y=0),this.rotate=y*q.RAD_TO_DEG,typeof this.props.rotationOffset!="function"?this.rotate+=this.props.rotationOffset||0:this.rotate=this.props.rotationOffset.call(this,this.rotate,f)):this.rotate=0},g.prototype._setTransform=function(d,D,f,y){var N;return this.scaler&&(d*=this.scaler.x,D*=this.scaler.y),N=null,y||(N=typeof this.onUpdate=="function"?this.onUpdate(f,{x:d,y:D,rotate:this.rotate}):void 0),this.isModule?this.setModulePosition(d,D):typeof N!="string"?this.setElPosition(d,D,f):q.setPrefixedStyle(this.el,"transform",N)},g.prototype._setTransformOrigin=function(d){var D;if(this.props.transformOrigin)return D=typeof this.props.transformOrigin=="function"?this.props.transformOrigin(this.rotate,d):this.props.transformOrigin,q.setPrefixedStyle(this.el,"transform-origin",D)},g.prototype.makeMotionBlur=function(d,D){var f,y,N,M,P,O,E;return E=0,P=1,O=1,this.prevCoords.x==null||this.prevCoords.y==null?(this.speedX=0,this.speedY=0):(N=d-this.prevCoords.x,M=D-this.prevCoords.y,N>0&&(P=-1),P<0&&(O=-1),this.speedX=Math.abs(N),this.speedY=Math.abs(M),E=Math.atan(M/N)*(180/Math.PI)+90),f=E-this.rotate,y=this.rotToCoords(f),this.blurX=q.clamp(this.speedX/16*this.props.motionBlur,0,1),this.blurY=q.clamp(this.speedY/16*this.props.motionBlur,0,1),this.setBlur({blur:{x:3*this.blurX*this.blurAmount*Math.abs(y.x),y:3*this.blurY*this.blurAmount*Math.abs(y.y)},offset:{x:3*P*this.blurX*y.x*this.blurAmount,y:3*O*this.blurY*y.y*this.blurAmount}}),this.prevCoords.x=d,this.prevCoords.y=D},g.prototype.setBlur=function(d){if(!this.isMotionBlurReset)return this.filter.setAttribute("stdDeviation",d.blur.x+","+d.blur.y),this.filterOffset.setAttribute("dx",d.offset.x),this.filterOffset.setAttribute("dy",d.offset.y)},g.prototype.extendDefaults=function(d){var D,f,y;for(D in f=[],d)y=d[D],f.push(this[D]=y);return f},g.prototype.extendOptions=function(d){var D,f,y;for(D in f=[],d)y=d[D],f.push(this.props[D]=y);return f},g.prototype.then=function(d){var D,f,y,N,M,P;for(f in y={},N=this.history[this.history.length-1])M=N[f],!q.callbacksMap[f]&&!q.tweenOptionMap[f]||f==="duration"?d[f]==null&&(d[f]=M):d[f]==null&&(d[f]=void 0),q.tweenOptionMap[f]&&(y[f]=f!=="duration"||d[f]!=null?d[f]:N[f]);return this.history.push(d),D=this,y.onUpdate=(P=this,function(O){return P.setProgress(O)}),y.onStart=function(O){return function(){var E;return(E=O.props.onStart)!=null?E.apply(O):void 0}}(this),y.onComplete=function(O){return function(){var E;return(E=O.props.onComplete)!=null?E.apply(O):void 0}}(this),y.onFirstUpdate=function(){return D.tuneOptions(D.history[this.index])},y.isChained=!d.delay,this.timeline.append(new h(y)),this},g.prototype.tuneOptions=function(d){return this.extendOptions(d),this.postVars()},g.prototype.rotToCoords=function(d){var D,f,y;return D=((d%=360)-90)*Math.PI/180,f=Math.cos(D),y=Math.sin(D),{x:1.428571429*(f=f<0?Math.max(f,-.7):Math.min(f,.7)),y:1.428571429*(y=y<0?Math.max(y,-.7):Math.min(y,.7))}},g}(),o.exports=u},785:(o,A,l)=>{var u,c={}.hasOwnProperty;u=function(h){function q(){return q.__super__.constructor.apply(this,arguments)}return function(p,g){for(var d in g)c.call(g,d)&&(p[d]=g[d]);function D(){this.constructor=p}D.prototype=g.prototype,p.prototype=new D,p.__super__=g.prototype}(q,h),q.prototype._declareDefaults=function(){return q.__super__._declareDefaults.apply(this,arguments),this._defaults.shape="ellipse"},q.prototype._draw=function(){var p,g;return p=this._props.radiusX!=null?this._props.radiusX:this._props.radius,g=this._props.radiusY!=null?this._props.radiusY:this._props.radius,this._setAttrIfChanged("rx",p),this._setAttrIfChanged("ry",g),this._setAttrIfChanged("cx",this._props.width/2),this._setAttrIfChanged("cy",this._props.height/2),q.__super__._draw.apply(this,arguments)},q.prototype._getLength=function(){var p,g;return p=this._props.radiusX!=null?this._props.radiusX:this._props.radius,g=this._props.radiusY!=null?this._props.radiusY:this._props.radius,2*Math.PI*Math.sqrt((p*p+g*g)/2)},q}(l(623).Z),o.exports=u},158:(o,A,l)=>{var u,c={}.hasOwnProperty;u=function(h){function q(){return q.__super__.constructor.apply(this,arguments)}return function(p,g){for(var d in g)c.call(g,d)&&(p[d]=g[d]);function D(){this.constructor=p}D.prototype=g.prototype,p.prototype=new D,p.__super__=g.prototype}(q,h),q.prototype._declareDefaults=function(){return q.__super__._declareDefaults.apply(this,arguments),this._defaults.tag="path"},q.prototype._draw=function(){var p,g,d,D,f,y,N;if(q.__super__._draw.apply(this,arguments),this._props,D=this._props.radiusX!=null?this._props.radiusX:this._props.radius,f=this._props.radiusY!=null?this._props.radiusY:this._props.radius,g=D===this._prevRadiusX,d=f===this._prevRadiusY,!g||!d)return p="M"+((y=this._props.width/2)-D)+","+(N=this._props.height/2)+" L"+(y+D)+","+N+" M"+y+","+(N-f)+" L"+y+","+(N+f),this.el.setAttribute("d",p),this._prevRadiusX=D,this._prevRadiusY=f},q.prototype._getLength=function(){return 2*((this._props.radiusX!=null?this._props.radiusX:this._props.radius)+(this._props.radiusY!=null?this._props.radiusY:this._props.radius))},q}(l(623).Z),o.exports=u},153:(o,A,l)=>{var u,c={}.hasOwnProperty;u=function(h){function q(){return q.__super__.constructor.apply(this,arguments)}return function(p,g){for(var d in g)c.call(g,d)&&(p[d]=g[d]);function D(){this.constructor=p}D.prototype=g.prototype,p.prototype=new D,p.__super__=g.prototype}(q,h),q.prototype._declareDefaults=function(){return q.__super__._declareDefaults.apply(this,arguments),this._defaults.tag="path",this._defaults.points=2},q.prototype._draw=function(){var p,g,d,D,f,y,N,M,P,O,E,V,C,B,v,J;if(q.__super__._draw.apply(this,arguments),N=this._props,this._props.points&&(M=this._props.radiusX!=null?this._props.radiusX:this._props.radius,P=this._props.radiusY!=null?this._props.radiusY:this._props.radius,D=M===this._prevRadiusX,f=P===this._prevRadiusY,d=N.points===this._prevPoints,!(D&&f&&d))){for(E=this._props.width/2,B=this._props.height/2,V=E-M,C=E+M,p="",J=2*P/(this._props.points-1),v=B-P,g=y=0,O=this._props.points;0<=O?y<O:y>O;g=0<=O?++y:--y)p+="M"+V+", "+(B=""+(g*J+v))+" L"+C+", "+B+" ";return this.el.setAttribute("d",p),this._prevPoints=N.points,this._prevRadiusX=M,this._prevRadiusY=P}},q.prototype._getLength=function(){return 2*(this._props.radiusX!=null?this._props.radiusX:this._props.radius)},q}(l(623).Z),o.exports=u},786:(o,A,l)=>{var u,c={}.hasOwnProperty;u=function(h){function q(){return q.__super__.constructor.apply(this,arguments)}return function(p,g){for(var d in g)c.call(g,d)&&(p[d]=g[d]);function D(){this.constructor=p}D.prototype=g.prototype,p.prototype=new D,p.__super__=g.prototype}(q,h),q.prototype._declareDefaults=function(){return q.__super__._declareDefaults.apply(this,arguments),this._defaults.tag="line"},q.prototype._draw=function(){var p,g,d;return p=this._props.radiusX!=null?this._props.radiusX:this._props.radius,g=this._props.width/2,d=this._props.height/2,this._setAttrIfChanged("x1",g-p),this._setAttrIfChanged("x2",g+p),this._setAttrIfChanged("y1",d),this._setAttrIfChanged("y2",d),q.__super__._draw.apply(this,arguments)},q}(l(623).Z),o.exports=u},878:(o,A,l)=>{var u,c,h={}.hasOwnProperty;c=l(52),u=function(q){function p(){return p.__super__.constructor.apply(this,arguments)}return function(g,d){for(var D in d)h.call(d,D)&&(g[D]=d[D]);function f(){this.constructor=g}f.prototype=d.prototype,g.prototype=new f,g.__super__=d.prototype}(p,q),p.prototype._declareDefaults=function(){return p.__super__._declareDefaults.apply(this,arguments),this._defaults.tag="path",this._defaults.points=3},p.prototype._draw=function(){var g,d,D,f,y,N,M,P,O,E,V,C,B,v,J;if(O=this._props,V=this._props.radiusX!=null?this._props.radiusX:this._props.radius,C=this._props.radiusY!=null?this._props.radiusY:this._props.radius,f=V===this._prevRadiusX,y=C===this._prevRadiusY,D=O.points===this._prevPoints,!(f&&y&&D)){for(J=360/this._props.points,this._radialPoints==null?this._radialPoints=[]:this._radialPoints.length=0,d=N=0,B=this._props.points;0<=B?N<B:N>B;d=0<=B?++N:--N)this._radialPoints.push(c.getRadialPoint({radius:this._props.radius,radiusX:this._props.radiusX,radiusY:this._props.radiusY,rotate:d*J,center:{x:O.width/2,y:O.height/2}}));for(g="",d=M=0,P=(v=this._radialPoints).length;M<P;d=++M)g+=(d===0?"M":"L")+(E=v[d]).x.toFixed(4)+","+E.y.toFixed(4)+" ";this._prevPoints=O.points,this._prevRadiusX=V,this._prevRadiusY=C,this.el.setAttribute("d",g+="z")}return p.__super__._draw.apply(this,arguments)},p.prototype._getLength=function(){return this._getPointsPerimiter(this._radialPoints)},p}(l(623).Z),o.exports=u},979:(o,A,l)=>{var u,c={}.hasOwnProperty;u=function(h){function q(){return q.__super__.constructor.apply(this,arguments)}return function(p,g){for(var d in g)c.call(g,d)&&(p[d]=g[d]);function D(){this.constructor=p}D.prototype=g.prototype,p.prototype=new D,p.__super__=g.prototype}(q,h),q.prototype._declareDefaults=function(){return q.__super__._declareDefaults.apply(this,arguments),this._defaults.tag="rect",this._defaults.rx=0,this._defaults.ry=0},q.prototype._draw=function(){var p,g,d;return q.__super__._draw.apply(this,arguments),g=(p=this._props).radiusX!=null?p.radiusX:p.radius,d=p.radiusY!=null?p.radiusY:p.radius,this._setAttrIfChanged("width",2*g),this._setAttrIfChanged("height",2*d),this._setAttrIfChanged("x",p.width/2-g),this._setAttrIfChanged("y",p.height/2-d),this._setAttrIfChanged("rx",p.rx),this._setAttrIfChanged("ry",p.ry)},q.prototype._getLength=function(){return 2*(2*(this._props.radiusX!=null?this._props.radiusX:this._props.radius)+2*(this._props.radiusY!=null?this._props.radiusY:this._props.radius))},q}(l(623).Z),o.exports=u},806:(o,A,l)=>{var u,c,h,q,p,g,d,D,f,y,N,M;M=l(52),u=l(623).Z,g=l(854).Z,h=l(785),D=l(786),N=l(322),y=l(979),f=l(878),q=l(158),p=l(472).Z,d=l(153),c=function(){function P(){this.addShape=M.bind(this.addShape,this)}return P.prototype.bit=u,P.prototype.custom=g,P.prototype.circle=h,P.prototype.line=D,P.prototype.zigzag=N,P.prototype.rect=y,P.prototype.polygon=f,P.prototype.cross=q,P.prototype.equal=d,P.prototype.curve=p,P.prototype.getShape=function(O){return this[O]||M.error('no "'+O+'" shape available yet, please choose from this list:',["circle","line","zigzag","rect","polygon","cross","equal","curve"])},P.prototype.addShape=function(O,E){return this[O]=E},P}(),o.exports=new c},322:(o,A,l)=>{var u,c={}.hasOwnProperty;u=function(h){function q(){return q.__super__.constructor.apply(this,arguments)}return function(p,g){for(var d in g)c.call(g,d)&&(p[d]=g[d]);function D(){this.constructor=p}D.prototype=g.prototype,p.prototype=new D,p.__super__=g.prototype}(q,h),q.prototype._declareDefaults=function(){return q.__super__._declareDefaults.apply(this,arguments),this._defaults.tag="path",this._defaults.points=3},q.prototype._draw=function(){var p,g,d,D,f,y,N,M,P,O,E,V,C,B,v,J;if(q.__super__._draw.apply(this,arguments),P=this._props,this._props.points&&(E=this._props.radiusX!=null?this._props.radiusX:this._props.radius,V=this._props.radiusY!=null?this._props.radiusY:this._props.radius,f=E===this._prevRadiusX,y=V===this._prevRadiusY,D=P.points===this._prevPoints,!(f&&y&&D))){for(p=P.width/2-E,g=v=P.height/2,B=2*E/(P.points-1),J=-1,M=-(d=Math.sqrt(B*B+V*V)),O="M"+p+", "+v+" ",N=0,C=P.points;0<=C?N<C:N>C;0<=C?++N:--N)O+="L"+p+", "+g+" ",p+=B,M+=d,g=J===-1?v-V:v,J=-J;return this._length=M,this.el.setAttribute("d",O),this._prevPoints=P.points,this._prevRadiusX=E,this._prevRadiusY=V}},q.prototype._getLength=function(){return this._length},q}(l(623).Z),o.exports=u},247:(o,A)=>{var l,u;u=function(){function c(h){this.o=h!=null?h:{},window.isAnyResizeEventInited||(this.vars(),this.redefineProto())}return c.prototype.vars=function(){return window.isAnyResizeEventInited=!0,this.allowedProtos=[HTMLDivElement,HTMLFormElement,HTMLLinkElement,HTMLBodyElement,HTMLParagraphElement,HTMLFieldSetElement,HTMLLegendElement,HTMLLabelElement,HTMLButtonElement,HTMLUListElement,HTMLOListElement,HTMLLIElement,HTMLHeadingElement,HTMLQuoteElement,HTMLPreElement,HTMLBRElement,HTMLFontElement,HTMLHRElement,HTMLModElement,HTMLParamElement,HTMLMapElement,HTMLTableElement,HTMLTableCaptionElement,HTMLImageElement,HTMLTableCellElement,HTMLSelectElement,HTMLInputElement,HTMLTextAreaElement,HTMLAnchorElement,HTMLObjectElement,HTMLTableColElement,HTMLTableSectionElement,HTMLTableRowElement],this.timerElements={img:1,textarea:1,input:1,embed:1,object:1,svg:1,canvas:1,tr:1,tbody:1,thead:1,tfoot:1,a:1,select:1,option:1,optgroup:1,dl:1,dt:1,br:1,basefont:1,font:1,col:1,iframe:1}},c.prototype.redefineProto=function(){var h,q,p;return q=this,function(){var g,d,D,f;for(D=this.allowedProtos,f=[],h=g=0,d=D.length;g<d;h=++g)(p=D[h]).prototype!=null&&f.push(function(y){return function(N){var M;M=function(){return this===window&&this===document||arguments[0]==="onresize"&&!this.isAnyResizeEventInited&&q.handleResize({args:arguments,that:this}),N.apply(this,arguments)},y.prototype.addEventListener?y.prototype.addEventListener=M:y.prototype.attachEvent&&(y.prototype.attachEvent=M)}(y.prototype.addEventListener||y.prototype.attachEvent),function(N){var M;return M=function(){return this.isAnyResizeEventInited=!1,this.iframe&&this.removeChild(this.iframe),N.apply(this,arguments)},y.prototype.removeEventListener?y.prototype.removeEventListener=M:y.prototype.detachEvent?y.prototype.detachEvent=wrappedListener:void 0}(y.prototype.removeEventListener||y.prototype.detachEvent)}(p));return f}.call(this)},c.prototype.handleResize=function(h){var q,p,g,d,D,f,y,N;return p=h.that,this.timerElements[p.tagName.toLowerCase()]?this.initTimer(p):(g=document.createElement("iframe"),p.appendChild(g),g.style.width="100%",g.style.height="100%",g.style.position="absolute",g.style.zIndex=-999,g.style.opacity=0,g.style.top=0,g.style.left=0,q=window.getComputedStyle?getComputedStyle(p):p.currentStyle,D=p.style.position==="",f=q.position==="static"&&D,d=q.position===""&&p.style.position==="",(f||d)&&(p.style.position="relative"),(y=g.contentWindow)!=null&&(y.onresize=(N=this,function(M){return N.dispatchEvent(p)})),p.iframe=g),p.isAnyResizeEventInited=!0},c.prototype.initTimer=function(h){var q,p,g;return p=0,q=0,this.interval=setInterval((g=this,function(){var d,D;if(D=h.offsetWidth,d=h.offsetHeight,D!==p||d!==q)return g.dispatchEvent(h),p=D,q=d}),this.o.interval||62.5)},c.prototype.dispatchEvent=function(h){var q;return document.createEvent?((q=document.createEvent("HTMLEvents")).initEvent("onresize",!1,!1),h.dispatchEvent(q)):!!document.createEventObject&&(q=document.createEventObject(),h.fireEvent("onresize",q))},c.prototype.destroy=function(){var h,q,p,g,d,D;for(clearInterval(this.interval),this.interval=null,window.isAnyResizeEventInited=!1,D=[],h=q=0,p=(d=this.allowedProtos).length;q<p;h=++q)(g=d[h]).prototype!=null&&D.push(function(f){return f.prototype.addEventListener||f.prototype.attachEvent,f.prototype.addEventListener?f.prototype.addEventListener=Element.prototype.addEventListener:f.prototype.attachEvent&&(f.prototype.attachEvent=Element.prototype.attachEvent),f.prototype.removeEventListener?f.prototype.removeEventListener=Element.prototype.removeEventListener:f.prototype.detachEvent?f.prototype.detachEvent=Element.prototype.detachEvent:void 0}(g));return D},c}(),(l=function(){return new u}.apply(A,[]))===void 0||(o.exports=l)},326:(o,A,l)=>{function u(c){if(c===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return c}l.d(A,{Z:()=>u})},671:(o,A,l)=>{function u(c,h){if(!(c instanceof h))throw new TypeError("Cannot call a class as a function")}l.d(A,{Z:()=>u})},144:(o,A,l)=>{function u(h,q){for(var p=0;p<q.length;p++){var g=q[p];g.enumerable=g.enumerable||!1,g.configurable=!0,"value"in g&&(g.writable=!0),Object.defineProperty(h,g.key,g)}}function c(h,q,p){return q&&u(h.prototype,q),p&&u(h,p),Object.defineProperty(h,"prototype",{writable:!1}),h}l.d(A,{Z:()=>c})},752:(o,A,l)=>{l.d(A,{Z:()=>h});var u=l(120);function c(q,p){for(;!Object.prototype.hasOwnProperty.call(q,p)&&(q=(0,u.Z)(q))!==null;);return q}function h(){return(h=typeof Reflect!="undefined"&&Reflect.get?Reflect.get:function(q,p,g){var d=c(q,p);if(d){var D=Object.getOwnPropertyDescriptor(d,p);return D.get?D.get.call(arguments.length<3?q:g):D.value}}).apply(this,arguments)}},120:(o,A,l)=>{function u(c){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(h){return h.__proto__||Object.getPrototypeOf(h)})(c)}l.d(A,{Z:()=>u})},340:(o,A,l)=>{function u(h,q){return(u=Object.setPrototypeOf||function(p,g){return p.__proto__=g,p})(h,q)}function c(h,q){if(typeof q!="function"&&q!==null)throw new TypeError("Super expression must either be null or a function");h.prototype=Object.create(q&&q.prototype,{constructor:{value:h,writable:!0,configurable:!0}}),Object.defineProperty(h,"prototype",{writable:!1}),q&&u(h,q)}l.d(A,{Z:()=>c})},963:(o,A,l)=>{l.d(A,{Z:()=>h});var u=l(2),c=l(326);function h(q,p){if(p&&((0,u.Z)(p)==="object"||typeof p=="function"))return p;if(p!==void 0)throw new TypeError("Derived constructors may only return object or undefined");return(0,c.Z)(q)}},2:(o,A,l)=>{function u(c){return(u=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(h){return typeof h}:function(h){return h&&typeof Symbol=="function"&&h.constructor===Symbol&&h!==Symbol.prototype?"symbol":typeof h})(c)}l.d(A,{Z:()=>u})}},i={};function r(o){var A=i[o];if(A!==void 0)return A.exports;var l=i[o]={exports:{}};return s[o](l,l.exports,r),l.exports}r.n=o=>{var A=o&&o.__esModule?()=>o.default:()=>o;return r.d(A,{a:A}),A},r.d=(o,A)=>{for(var l in A)r.o(A,l)&&!r.o(o,l)&&Object.defineProperty(o,l,{enumerable:!0,get:A[l]})},r.o=(o,A)=>Object.prototype.hasOwnProperty.call(o,A);var a={};return(()=>{r.d(a,{default:()=>Wt});var o=r(52),A=r.n(o),l=r(806),u=r.n(l),c=r(671),h=r(144),q=r(340),p=r(963),g=r(120),d=r(342);function D(j,T,k){return T in j?Object.defineProperty(j,T,{value:k,enumerable:!0,configurable:!0,writable:!0}):j[T]=k,j}var f=r(752),y=r(755),N=r(973);function M(j){var T=function(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}();return function(){var k,m=(0,g.Z)(j);if(T){var W=(0,g.Z)(this).constructor;k=Reflect.construct(m,arguments,W)}else k=m.apply(this,arguments);return(0,p.Z)(this,k)}}const P=function(j){(0,q.Z)(k,j);var T=M(k);function k(){var m,W=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};return(0,c.Z)(this,k),(m=T.call(this,W))._transformTweenOptions(),!m._o.isTweenLess&&m._makeTween(),!m._o.isTimelineLess&&m._makeTimeline(),m}return(0,h.Z)(k,[{key:"play",value:function(){return this.timeline.play.apply(this.timeline,arguments),this}},{key:"playBackward",value:function(){return this.timeline.playBackward.apply(this.timeline,arguments),this}},{key:"pause",value:function(){return this.timeline.pause.apply(this.timeline,arguments),this}},{key:"stop",value:function(){return this.timeline.stop.apply(this.timeline,arguments),this}},{key:"reset",value:function(){return this.timeline.reset.apply(this.timeline,arguments),this}},{key:"replay",value:function(){return this.timeline.replay.apply(this.timeline,arguments),this}},{key:"replayBackward",value:function(){return this.timeline.replayBackward.apply(this.timeline,arguments),this}},{key:"resume",value:function(){return this.timeline.resume.apply(this.timeline,arguments),this}},{key:"setProgress",value:function(){return this.timeline.setProgress.apply(this.timeline,arguments),this}},{key:"setSpeed",value:function(){return this.timeline.setSpeed.apply(this.timeline,arguments),this}},{key:"_transformTweenOptions",value:function(){}},{key:"_makeTween",value:function(){this._o.callbacksContext=this._o.callbacksContext||this,this.tween=new y.Z(this._o),this._o.isTimelineLess&&(this.timeline=this.tween)}},{key:"_makeTimeline",value:function(){this._o.timeline=this._o.timeline||{},this._o.timeline.callbacksContext=this._o.callbacksContext||this,this.timeline=new d.Z(this._o.timeline),this._isTimeline=!0,this.tween&&this.timeline.add(this.tween)}}]),k}(N.Z);function O(j){var T=function(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}();return function(){var k,m=(0,g.Z)(j);if(T){var W=(0,g.Z)(this).constructor;k=Reflect.construct(m,arguments,W)}else k=m.apply(this,arguments);return(0,p.Z)(this,k)}}const E=function(j){(0,q.Z)(k,j);var T=O(k);function k(){return(0,c.Z)(this,k),T.apply(this,arguments)}return(0,h.Z)(k,[{key:"then",value:function(m){if(m==null||!Object.keys(m).length)return 1;var W=this._history[this._history.length-1],w=this._mergeThenOptions(W,m);this._resetMergedFlags(w);var _=new this.constructor(w);return _._masterModule=this,this._modules.push(_),this.timeline.append(_),this}},{key:"_resetMergedFlags",value:function(m){return m.isTimelineLess=!0,m.isShowStart=!1,m.isRefreshState=!1,m.callbacksContext=this._props.callbacksContext||this,m.prevChainModule=A().getLastItem(this._modules),m.masterModule=this,m}},{key:"_vars",value:function(){(0,f.Z)((0,g.Z)(k.prototype),"_vars",this).call(this),this._masterModule=this._o.masterModule,this._isChained=!!this._masterModule;var m=A().cloneObj(this._props);for(var W in this._arrayPropertyMap)if(this._o[W]){var w=this._parsePreArrayProperty(W,this._o[W]);m[W]=w}this._history=[m],this._modules=[this],this._nonMergeProps={shape:1}}},{key:"_mergeThenOptions",value:function(m,W){var w={};return this._mergeStartLoop(w,m),this._mergeEndLoop(w,m,W),this._history.push(w),w}},{key:"_checkStartValue",value:function(m,W){return W}},{key:"_mergeStartLoop",value:function(m,W){for(var w in W){var _=W[w];W[w]!=null&&(A().isTweenProp(w)&&w!=="duration"||(this._isDelta(_)?m[w]=A().getDeltaEnd(_):m[w]=_))}}},{key:"_mergeEndLoop",value:function(m,W,w){for(var _ in w)if(_!="parent"){var ct=w[_],ht=W[_]!=null?W[_]:this._defaults[_];if(ht=this._checkStartValue(_,ht),ct!=null){var Bt=_==="radiusX"||_==="radiusY";Bt&&ht==null&&(ht=W.radius),(Bt=_==="scaleX"||_==="scaleY")&&ht==null&&(ht=W.scale),m[_]=this._mergeThenProperty(_,ht,ct)}}else m[_]=w[_]}},{key:"_mergeThenProperty",value:function(m,W,w){var _,ct,ht=typeof w=="boolean";if(A().isTweenProp(m)||this._nonMergeProps[m]||ht)return w;if(A().isObject(w)&&w.to!=null&&(_=w.curve,ct=w.easing,w=w.to),this._isDelta(w))return this._parseDeltaValues(m,w);var Bt,bt,te=this._parsePreArrayProperty(m,w);return this._isDelta(W)?(D(Bt={},A().getDeltaEnd(W),te),D(Bt,"easing",ct),D(Bt,"curve",_),Bt):(D(bt={},W,te),D(bt,"easing",ct),D(bt,"curve",_),bt)}},{key:"_getArrayLength",value:function(m){return A().isArray(m)?m.length:-1}},{key:"_isDelta",value:function(m){var W=A().isObject(m);return!(!(W=W&&!m.unit)||A().isArray(m)||A().isDOM(m))}},{key:"_isFirstInChain",value:function(){return!this._masterModule}},{key:"_isLastInChain",value:function(){var m=this._masterModule;return m?this===A().getLastItem(m._modules):this._modules.length===1}}]),k}(P);function V(j){var T=function(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}();return function(){var k,m=(0,g.Z)(j);if(T){var W=(0,g.Z)(this).constructor;k=Reflect.construct(m,arguments,W)}else k=m.apply(this,arguments);return(0,p.Z)(this,k)}}const C=function(j){(0,q.Z)(k,j);var T=V(k);function k(){return(0,c.Z)(this,k),T.apply(this,arguments)}return(0,h.Z)(k,[{key:"tune",value:function(m){if(m&&Object.keys(m).length){for(var W in this._transformHistory(m),this._tuneNewOptions(m),this._history[0]=A().cloneObj(this._props),this._arrayPropertyMap)m[W]!=null&&(this._history[0][W]=this._preparsePropValue(W,m[W]));this._tuneSubModules(),this._resetTweens()}return this}},{key:"generate",value:function(){return this.tune(this._o)}},{key:"_transformHistory",value:function(m){for(var W in m){var w=m[W];this._transformHistoryFor(W,this._preparsePropValue(W,w))}}},{key:"_transformHistoryFor",value:function(m,W){for(var w=0;w<this._history.length&&(W=this._transformHistoryRecord(w,m,W))!=null;w++);}},{key:"_transformHistoryRecord",value:function(m,W,w,_,ct){if(w==null)return null;_=_==null?this._history[m]:_,ct=ct==null?this._history[m+1]:ct;var ht=_[W],Bt=ct==null?null:ct[W];if(m===0){if(_[W]=w,A().isTweenProp(W)&&W!=="duration")return null;var bt=this._isRewriteNext(ht,Bt),te=this._isDelta(w)?A().getDeltaEnd(w):w;return bt?te:null}return this._isDelta(ht)?(_[W]=D({},w,A().getDeltaEnd(ht)),null):(_[W]=w,this._isRewriteNext(ht,Bt)?w:null)}},{key:"_isRewriteNext",value:function(m,W){if(W==null&&m!=null)return!1;var w=m===W,_=this._isDelta(W),ct=!1,ht=!1;return this._isDelta(m)&&_?A().getDeltaEnd(m)==A().getDeltaStart(W)&&(ht=!0):_&&(ct=A().getDeltaStart(W)==="".concat(m)),w||ct||ht}},{key:"_tuneSubModules",value:function(){for(var m=1;m<this._modules.length;m++)this._modules[m]._tuneNewOptions(this._history[m])}},{key:"_resetTweens",value:function(){var m=0,W=this.timeline._timelines;if(W!=null){for(var w=0;w<W.length;w++){var _=W[w],ct=W[w-1];m+=ct?ct._props.repeatTime:0,this._resetTween(_,this._history[w],m)}this.timeline._setProp(this._props.timeline),this.timeline._recalcTotalDuration()}}},{key:"_resetTween",value:function(m,W){var w=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0;W.shiftTime=w,m._setProp(W)}}]),k}(E);function B(j){var T=function(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}();return function(){var k,m=(0,g.Z)(j);if(T){var W=(0,g.Z)(this).constructor;k=Reflect.construct(m,arguments,W)}else k=m.apply(this,arguments);return(0,p.Z)(this,k)}}var v=function(j){(0,q.Z)(k,j);var T=B(k);function k(m,W){var w;return(0,c.Z)(this,k),w=T.call(this),(0,p.Z)(w,w._init(m,W))}return(0,h.Z)(k,[{key:"then",value:function(m){if(m==null)return this;for(var W=0;W<this._modules.length;W++)this._modules[W].then(this._getOptionByIndex(W,m));return this.timeline._recalcTotalDuration(),this}},{key:"tune",value:function(m){if(m==null)return this;for(var W=0;W<this._modules.length;W++)this._modules[W].tune(this._getOptionByIndex(W,m));return this.timeline._recalcTotalDuration(),this}},{key:"generate",value:function(){for(var m=0;m<this._modules.length;m++)this._modules[m].generate();return this.timeline._recalcTotalDuration(),this}},{key:"_getOptionByMod",value:function(m,W,w){var _=w[m];_+""!="[object NodeList]"&&_+""!="[object HTMLCollection]"||(_=Array.prototype.slice.call(_,0));var ct=A().isArray(_)?_[W%_.length]:_;return A().parseIfStagger(ct,W)}},{key:"_getOptionByIndex",value:function(m,W){var w=this,_={};return Object.keys(W).forEach(function(ct){return _[ct]=w._getOptionByMod(ct,m,W)}),_}},{key:"_getChildQuantity",value:function(m,W){if(typeof m=="number")return m;var w=W[m];return A().isArray(w)||w+""=="[object NodeList]"?w.length:w+""=="[object HTMLCollection]"?Array.prototype.slice.call(w,0).length:w instanceof HTMLElement||typeof w=="string"?1:void 0}},{key:"_init",value:function(m,W){var w=this._getChildQuantity(m.quantifier||"el",m);this._createTimeline(m),this._modules=[];for(var _=0;_<w;_++){var ct=this._getOptionByIndex(_,m);ct.isRunLess=!0,ct.index=_;var ht=new W(ct);this._modules.push(ht),this.timeline.add(ht)}return this}},{key:"_createTimeline",value:function(){var m=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};this.timeline=new d.Z(m.timeline)}},{key:"_makeTween",value:function(){}},{key:"_makeTimeline",value:function(){}}]),k}(C),J=r(47),K=r(283),rt=r.n(K);function tt(j){var T=function(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}();return function(){var k,m=(0,g.Z)(j);if(T){var W=(0,g.Z)(this).constructor;k=Reflect.construct(m,arguments,W)}else k=m.apply(this,arguments);return(0,p.Z)(this,k)}}const z=function(j){(0,q.Z)(k,j);var T=tt(k);function k(){return(0,c.Z)(this,k),T.apply(this,arguments)}return(0,h.Z)(k,[{key:"_declareDefaults",value:function(){this._defaults={parent:document.body,className:"",shape:"circle",stroke:"transparent",strokeOpacity:1,strokeLinecap:"",strokeWidth:2,strokeDasharray:0,strokeDashoffset:0,fill:"deeppink",fillOpacity:1,isSoftHide:!0,isForce3d:!1,left:"50%",top:"50%",x:0,y:0,rotate:0,scale:1,scaleX:null,scaleY:null,origin:"50% 50%",opacity:1,rx:0,ry:0,points:3,radius:50,radiusX:null,radiusY:null,isShowStart:!1,isShowEnd:!0,isRefreshState:!0,duration:400,width:null,height:null,isWithShape:!0,callbacksContext:this}}},{key:"tune",value:function(m){return(0,f.Z)((0,g.Z)(k.prototype),"tune",this).call(this,m),this._getMaxSizeInChain(),this}},{key:"then",value:function(m){return(0,f.Z)((0,g.Z)(k.prototype),"then",this).call(this,m),this._getMaxSizeInChain(),this}},{key:"_vars",value:function(){return(0,f.Z)((0,g.Z)(k.prototype),"_vars",this).call(this),this._lastSet={},this._prevChainModule=this._o.prevChainModule,this.isForeign=!!this._o.ctx,this.isForeignBit=!!this._o.shape}},{key:"_render",value:function(){return this._isRendered||this._isChained?this._isChained&&(this.el=this._masterModule.el,this.shapeModule=this._masterModule.shapeModule):(this.el=document.createElement("div"),this.el.setAttribute("data-name","mojs-shape"),this.el.setAttribute("class",this._props.className),this._createShape(),this._props.parent.appendChild(this.el),this._setElStyles(),this._setProgress(0,0),this._props.isShowStart?this._show():this._hide(),this._isRendered=!0),this}},{key:"_setElStyles",value:function(){if(this.el){var m=this._props,W=this.el.style,w=m.shapeWidth,_=m.shapeHeight;if(W.position="absolute",this._setElSizeStyles(w,_),m.isForce3d){var ct="backface-visibility";W["".concat(ct)]="hidden",W["".concat(A().prefix.css).concat(ct)]="hidden"}}}},{key:"_setElSizeStyles",value:function(m,W){var w=this.el.style;w.width="".concat(m,"px"),w.height="".concat(W,"px"),w["margin-left"]="".concat(-m/2,"px"),w["margin-top"]="".concat(-W/2,"px")}},{key:"_draw",value:function(){if(this.shapeModule){var m=this._props,W=this.shapeModule._props;W.rx=m.rx,W.ry=m.ry,W.stroke=m.stroke,W["stroke-width"]=m.strokeWidth,W["stroke-opacity"]=m.strokeOpacity,W["stroke-dasharray"]=m.strokeDasharray,W["stroke-dashoffset"]=m.strokeDashoffset,W["stroke-linecap"]=m.strokeLinecap,W.fill=m.fill,W["fill-opacity"]=m.fillOpacity,W.radius=m.radius,W.radiusX=m.radiusX,W.radiusY=m.radiusY,W.points=m.points,this.shapeModule._draw(),this._drawEl()}}},{key:"_drawEl",value:function(){if(this.el==null)return!0;var m=this._props,W=this.el.style;if(this._isPropChanged("opacity")&&(W.opacity=m.opacity),!this.isForeign){this._isPropChanged("left")&&(W.left=m.left),this._isPropChanged("top")&&(W.top=m.top);var w=this._isPropChanged("x"),_=this._isPropChanged("y"),ct=w||_,ht=this._isPropChanged("scaleX"),Bt=this._isPropChanged("scaleY"),bt=this._isPropChanged("scale"),te=this._isPropChanged("rotate");if(bt=bt||ht||Bt,ct||bt||te){var Je=this._fillTransform();W["".concat(A().prefix.css,"transform")]=Je,W.transform=Je}if(this._isPropChanged("origin")||this._deltas.origin){var Vs=this._fillOrigin();W["".concat(A().prefix.css,"transform-origin")]=Vs,W["transform-origin"]=Vs}}}},{key:"_isPropChanged",value:function(m){return this._lastSet[m]==null&&(this._lastSet[m]={}),this._lastSet[m].value!==this._props[m]&&(this._lastSet[m].value=this._props[m],!0)}},{key:"_tuneNewOptions",value:function(m){if((0,f.Z)((0,g.Z)(k.prototype),"_tuneNewOptions",this).call(this,m),m==null||!Object.keys(m).length)return 1;this._setElStyles()}},{key:"_getMaxRadius",value:function(m){var W;return W=this._getRadiusSize("radius"),this._getRadiusSize(m,W)}},{key:"_increaseSizeWithEasing",value:function(){var m=this._props,W=this._o.easing;switch(W&&typeof W=="string"&&W.toLowerCase()){case"elastic.out":case"elastic.inout":m.size*=1.25;break;case"back.out":case"back.inout":m.size*=1.1}}},{key:"_getRadiusSize",value:function(m){var W=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,w=this._deltas[m];return w!=null?Math.max(Math.abs(w.end),Math.abs(w.start)):this._props[m]!=null?parseFloat(this._props[m]):W}},{key:"_getShapeSize",value:function(){var m=this._props,W=this._getMaxStroke();m.shapeWidth=m.width!=null?m.width:2*this._getMaxRadius("radiusX")+W,m.shapeHeight=m.height!=null?m.height:2*this._getMaxRadius("radiusY")+W}},{key:"_createShape",value:function(){if(this._getShapeSize(),this._props.isWithShape){var m=this._props,W=u().getShape(this._props.shape);this.shapeModule=new W({width:m.shapeWidth,height:m.shapeHeight,parent:this.el})}}},{key:"_getMaxSizeInChain",value:function(){for(var m=0,W=0,w=0;w<this._modules.length;w++)this._modules[w]._getShapeSize(),m=Math.max(m,this._modules[w]._props.shapeWidth),W=Math.max(W,this._modules[w]._props.shapeHeight);this.shapeModule&&this.shapeModule._setSize(m,W),this._setElSizeStyles(m,W)}},{key:"_getMaxStroke",value:function(){var m=this._props,W=this._deltas.strokeWidth;return W!=null?Math.max(W.start,W.end):m.strokeWidth}},{key:"_setProgress",value:function(m,W){N.Z.prototype._setProgress.call(this,m,W),this._draw(m)}},{key:"_applyCallbackOverrides",value:function(m){var W=this,w=this._props;m.callbackOverrides={onUpdate:function(_,ct){return W._setProgress(_,ct)},onStart:function(_){W._isChained||(_?W._show():w.isShowStart||W._hide())},onComplete:function(_){W._isLastInChain()&&(_?w.isShowEnd||W._hide():W._show())},onRefresh:function(_){w.isRefreshState&&_&&W._refreshBefore()}}}},{key:"_transformTweenOptions",value:function(){this._applyCallbackOverrides(this._o)}},{key:"_fillTransform",value:function(){var m=this._props,W=m.scaleX!=null?m.scaleX:m.scale,w=m.scaleY!=null?m.scaleY:m.scale,_="".concat(W,", ").concat(w);return"translate(".concat(m.x,", ").concat(m.y,") rotate(").concat(m.rotate,"deg) scale(").concat(_,")")}},{key:"_fillOrigin",value:function(){for(var m=this._props,W="",w=0;w<m.origin.length;w++)W+="".concat(m.origin[w].string," ");return W}},{key:"_refreshBefore",value:function(){this._setProgress(this.tween._props.easing(0),0),this._props.isShowStart?this._show():this._hide()}},{key:"_showByTransform",value:function(){this._lastSet.scale=null,this._drawEl()}}]),k}(C);function dt(j){var T=function(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}();return function(){var k,m=(0,g.Z)(j);if(T){var W=(0,g.Z)(this).constructor;k=Reflect.construct(m,arguments,W)}else k=m.apply(this,arguments);return(0,p.Z)(this,k)}}const at=function(j){(0,q.Z)(k,j);var T=dt(k);function k(){return(0,c.Z)(this,k),T.apply(this,arguments)}return(0,h.Z)(k,[{key:"_declareDefaults",value:function(){(0,f.Z)((0,g.Z)(k.prototype),"_declareDefaults",this).call(this),this._defaults.isSwirl=!0,this._defaults.swirlSize=10,this._defaults.swirlFrequency=3,this._defaults.pathScale=1,this._defaults.degreeShift=0,this._defaults.radius=5,this._defaults.x=0,this._defaults.y=0,this._defaults.scale={1:0},this._defaults.direction=1}},{key:"_extendDefaults",value:function(){(0,f.Z)((0,g.Z)(k.prototype),"_extendDefaults",this).call(this),this._calcPosData()}},{key:"_tuneNewOptions",value:function(m){m!=null&&((0,f.Z)((0,g.Z)(k.prototype),"_tuneNewOptions",this).call(this,m),m.x==null&&m.y==null||this._calcPosData())}},{key:"_calcPosData",value:function(){var m=this._getPosValue("x"),W=this._getPosValue("y"),w=90+Math.atan(W.delta/m.delta||0)*A().RAD_TO_DEG;this._posData={radius:Math.sqrt(m.delta*m.delta+W.delta*W.delta),rotate:m.delta<0?w+180:w,x:m,y:W}}},{key:"_getPosValue",value:function(m){var W=this._deltas[m];if(W)return delete this._deltas[m],{start:W.start.value,end:W.end.value,delta:W.delta,units:W.end.unit};var w=A().parseUnit(this._props[m]);return{start:w.value,end:w.value,delta:0,units:w.unit}}},{key:"_setProgress",value:function(m,W){this._progress=m,this._calcCurrentProps(m,W),this._calcSwirlXY(m),this._draw(m)}},{key:"_calcSwirlXY",value:function(m){var W=this._props,w=this._posData.rotate+W.degreeShift,_=A().getRadialPoint({rotate:W.isSwirl?w+this._getSwirl(m):w,radius:m*this._posData.radius*W.pathScale,center:{x:this._posData.x.start,y:this._posData.y.start}}),ct=_.x,ht=_.y,Bt=1e-6;ct>0&&ct<Bt&&(ct=Bt),ht>0&&ht<Bt&&(ht=Bt),ct<0&&ct>-1e-6&&(ct=-1e-6),ht<0&&ht>-1e-6&&(ht=-1e-6),W.x=this._o.ctx?ct:"".concat(ct).concat(this._posData.x.units),W.y=this._o.ctx?ht:"".concat(ht).concat(this._posData.y.units)}},{key:"_getSwirl",value:function(m){var W=this._props;return W.direction*W.swirlSize*Math.sin(W.swirlFrequency*m)}},{key:"_draw",value:function(){var m=this._props.isWithShape?"_draw":"_drawEl";z.prototype[m].call(this)}}]),k}(z);function St(j){var T=function(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}();return function(){var k,m=(0,g.Z)(j);if(T){var W=(0,g.Z)(this).constructor;k=Reflect.construct(m,arguments,W)}else k=m.apply(this,arguments);return(0,p.Z)(this,k)}}var gt=function(j){(0,q.Z)(k,j);var T=St(k);function k(){return(0,c.Z)(this,k),T.apply(this,arguments)}return(0,h.Z)(k,[{key:"_declareDefaults",value:function(){this._defaults={count:5,degree:360,radius:{0:50},radiusX:null,radiusY:null,width:0,height:0}}},{key:"then",value:function(m){this._removeTweenProperties(m);var W=this._masterThen(m),w=this._childThen(m);return this._setSwirlDuration(W,this._calcPackTime(w)),this.timeline._recalcTotalDuration(),this}},{key:"tune",value:function(m){return m==null||(this._saveTimelineOptions(m),this.timeline._setProp(this._timelineOptions),this._removeTweenProperties(m),this._tuneNewOptions(m),this.masterSwirl.tune(m),this._tuneSwirls(m),this._recalcModulesTime()),this}},{key:"_extendDefaults",value:function(){this._removeTweenProperties(this._o),(0,f.Z)((0,g.Z)(k.prototype),"_extendDefaults",this).call(this)}},{key:"_removeTweenProperties",value:function(m){for(var W in A().tweenOptionMap)this._defaults[W]==null&&delete m[W]}},{key:"_recalcModulesTime",value:function(){for(var m=this.masterSwirl._modules,W=this._swirls,w=0,_=0;_<m.length;_++){var ct=m[_].tween,ht=this._calcPackTime(W[_]);ct._setProp({duration:ht,shiftTime:w}),w+=ht}this.timeline._recalcTotalDuration()}},{key:"_tuneSwirls",value:function(m){for(var W=this._swirls[0],w=0;w<W.length;w++){var _=W[w],ct=this._getChildOption(m||{},w),ht=ct.degreeShift!=null;ht||(ct.degreeShift=this._swirls[0][w]._props.degreeShift),this._addBurstProperties(ct,w),ht||delete ct.degreeShift,_.tune(ct),this._refreshBurstOptions(_._modules,w)}}},{key:"_refreshBurstOptions",value:function(m,W){for(var w=1;w<m.length;w++){var _=m[w],ct={};this._addBurstProperties(ct,W,w),_._tuneNewOptions(ct)}}},{key:"_masterThen",value:function(m){this.masterSwirl.then(m);var W=A().getLastItem(this.masterSwirl._modules);return this._masterSwirls.push(W),W}},{key:"_childThen",value:function(m){for(var W=this._swirls[0],w=[],_=0;_<W.length;_++){var ct=this._getChildOption(m,_),ht=W[_];ct.parent=this.el,this._addBurstProperties(ct,_,this._masterSwirls.length-1),ht.then(ct),w.push(A().getLastItem(ht._modules))}return this._swirls[this._masterSwirls.length-1]=w,w}},{key:"_vars",value:function(){(0,f.Z)((0,g.Z)(k.prototype),"_vars",this).call(this),this._bufferTimeline=new d.Z}},{key:"_render",value:function(){this._o.isWithShape=!1,this._o.isSwirl=this._props.isSwirl,this._o.callbacksContext=this,this._saveTimelineOptions(this._o),this.masterSwirl=new Gt(this._o),this._masterSwirls=[this.masterSwirl],this.el=this.masterSwirl.el,this._renderSwirls()}},{key:"_renderSwirls",value:function(){for(var m=this._props,W=[],w=0;w<m.count;w++){var _=this._getChildOption(this._o,w);W.push(new kt(this._addOptionalProps(_,w)))}this._swirls={0:W},this._setSwirlDuration(this.masterSwirl,this._calcPackTime(W))}},{key:"_saveTimelineOptions",value:function(m){this._timelineOptions=m.timeline,delete m.timeline}},{key:"_calcPackTime",value:function(m){for(var W=0,w=0;w<m.length;w++){var _=m[w].tween._props;W=Math.max(_.repeatTime/_.speed,W)}return W}},{key:"_setSwirlDuration",value:function(m,W){m.tween._setProp("duration",W),m.timeline&&m.timeline._recalcTotalDuration&&m.timeline._recalcTotalDuration()}},{key:"_getChildOption",value:function(m,W){var w={};for(var _ in m.children)w[_]=this._getPropByMod(_,W,m.children);return w}},{key:"_getPropByMod",value:function(m,W){var w=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},_=w[m];return A().isArray(_)?_[W%_.length]:_}},{key:"_addOptionalProps",value:function(m,W){return m.index=W,m.parent=this.masterSwirl.el,this._addBurstProperties(m,W),m}},{key:"_addBurstProperties",value:function(m,W,w){var _=this._index;this._index=W;var ct=this._parseProperty("degreeShift",m.degreeShift||0);this._index=_;var ht=this._props,Bt=ht.degree%360==0?ht.count:ht.count-1||1,bt=ht.degree/Bt,te=this._getSidePoint("start",W*bt+ct,w),Je=this._getSidePoint("end",W*bt+ct,w);m.x=this._getDeltaFromPoints("x",te,Je),m.y=this._getDeltaFromPoints("y",te,Je),m.rotate=this._getBitRotation(m.rotate||0,ct,W)}},{key:"_getBitRotation",value:function(){var m=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,W=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,w=arguments.length>2?arguments[2]:void 0,_=this._props,ct=_.degree%360==0?_.count:_.count-1||1,ht=_.degree/ct,Bt=w*ht+90;if(Bt+=W,this._isDelta(m)){var bt={},te=Object.keys(m),Je=te[0],Vs=m[Je];Je=A().parseStringOption(Je,w),Vs=A().parseStringOption(Vs,w),bt[parseFloat(Je)+Bt]=parseFloat(Vs)+Bt,m=bt}else m+=Bt;return m}},{key:"_getSidePoint",value:function(m,W,w){var _=this._getSideRadius(m,w);return A().getRadialPoint({radius:_.radius,radiusX:_.radiusX,radiusY:_.radiusY,rotate:W,center:{x:0,y:0}})}},{key:"_getSideRadius",value:function(m,W){return{radius:this._getRadiusByKey("radius",m,W),radiusX:this._getRadiusByKey("radiusX",m,W),radiusY:this._getRadiusByKey("radiusY",m,W)}}},{key:"_getRadiusByKey",value:function(m,W){var w=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,_=this._masterSwirls[w],ct=_._deltas,ht=_._props;return ct[m]!=null?ct[m][W]:ht[m]!=null?ht[m]:void 0}},{key:"_getDeltaFromPoints",value:function(m,W,w){var _={};return W[m]===w[m]?_=W[m]:_[W[m]]=w[m],_}},{key:"_makeTimeline",value:function(){this._o.timeline=this._timelineOptions,(0,f.Z)((0,g.Z)(k.prototype),"_makeTimeline",this).call(this),this.timeline.add(this.masterSwirl,this._swirls[0])}},{key:"_makeTween",value:function(){}},{key:"_hide",value:function(){}},{key:"_show",value:function(){}}]),k}(C),kt=function(j){(0,q.Z)(k,j);var T=St(k);function k(){return(0,c.Z)(this,k),T.apply(this,arguments)}return(0,h.Z)(k,[{key:"_declareDefaults",value:function(){(0,f.Z)((0,g.Z)(k.prototype),"_declareDefaults",this).call(this),this._defaults.isSwirl=!1,this._o.duration=this._o.duration!=null?this._o.duration:700}},{key:"_calcSwirlXY",value:function(m){var W=this._props.degreeShift;this._props.degreeShift=0,(0,f.Z)((0,g.Z)(k.prototype),"_calcSwirlXY",this).call(this,m),this._props.degreeShift=W}}]),k}(at),Gt=function(j){(0,q.Z)(k,j);var T=St(k);function k(){return(0,c.Z)(this,k),T.apply(this,arguments)}return(0,h.Z)(k,[{key:"_declareDefaults",value:function(){(0,f.Z)((0,g.Z)(k.prototype),"_declareDefaults",this).call(this),this._defaults.scale=1,this._defaults.width=0,this._defaults.height=0,this._defaults.radius={25:75}}}]),k}(kt);gt.ChildSwirl=kt,gt.MainSwirl=Gt;const ce=gt,Tt=function(){function j(){var T=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};(0,c.Z)(this,j),this._o=T,this._createTween(T.tweenOptions),!this._o.isChained&&this.refresh(!0)}return(0,h.Z)(j,[{key:"refresh",value:function(T){this._previousValues=[];for(var k=this._o.deltas,m=0;m<k.length;m++){var W=k[m].name;this._previousValues.push({name:W,value:this._o.props[W]})}return this.tween._refresh(T),this}},{key:"restore",value:function(){for(var T=this._previousValues,k=0;k<T.length;k++){var m=T[k];this._o.props[m.name]=m.value}return this}},{key:"_createTween",value:function(){var T=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},k=this;T.callbackOverrides={onUpdate:function(m,W){k._calcCurrentProps(m,W)}},this._o.isChained||(T.callbackOverrides.onRefresh=function(m,W,w){k._calcCurrentProps(W,w)}),T.callbacksContext=this._o.callbacksContext,this.tween=new y.Z(T)}},{key:"_calcCurrentProps",value:function(T,k){for(var m=this._o.deltas,W=0;W<m.length;W++){var w=m[W].type;this["_calcCurrent_".concat(w)](m[W],T,k)}}},{key:"_calcCurrent_color",value:function(T,k,m){var W,w,_,ct,ht=T.start,Bt=T.delta;if(T.curve){var bt=T.curve(m);W=parseInt(bt*(ht.r+m*Bt.r),10),w=parseInt(bt*(ht.g+m*Bt.g),10),_=parseInt(bt*(ht.b+m*Bt.b),10),ct=parseFloat(bt*(ht.a+m*Bt.a))}else W=parseInt(ht.r+k*Bt.r,10),w=parseInt(ht.g+k*Bt.g,10),_=parseInt(ht.b+k*Bt.b,10),ct=parseFloat(ht.a+k*Bt.a);this._o.props[T.name]="rgba(".concat(W,",").concat(w,",").concat(_,",").concat(ct,")")}},{key:"_calcCurrent_number",value:function(T,k,m){this._o.props[T.name]=T.curve?T.curve(m)*(T.start+m*T.delta):T.start+k*T.delta}},{key:"_calcCurrent_unit",value:function(T,k,m){var W=T.curve?T.curve(m)*(T.start.value+m*T.delta):T.start.value+k*T.delta;this._o.props[T.name]="".concat(W).concat(T.end.unit)}},{key:"_calcCurrent_array",value:function(T,k,m){for(var W=T.name,w=this._o.props,_="",ct=T.curve?T.curve(m):null,ht=0;ht<T.delta.length;ht++){var Bt=T.delta[ht],bt=T.curve?ct*(T.start[ht].value+m*Bt.value):T.start[ht].value+k*Bt.value;_+="".concat(bt).concat(Bt.unit," ")}w[W]=_}}]),j}();function ft(j,T){var k=Object.keys(j);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(j);T&&(m=m.filter(function(W){return Object.getOwnPropertyDescriptor(j,W).enumerable})),k.push.apply(k,m)}return k}function Dt(j){for(var T=1;T<arguments.length;T++){var k=arguments[T]!=null?arguments[T]:{};T%2?ft(Object(k),!0).forEach(function(m){D(j,m,k[m])}):Object.getOwnPropertyDescriptors?Object.defineProperties(j,Object.getOwnPropertyDescriptors(k)):ft(Object(k)).forEach(function(m){Object.defineProperty(j,m,Object.getOwnPropertyDescriptor(k,m))})}return j}var ie={};y.Z.prototype._declareDefaults.call(ie);for(var Oe=Object.keys(ie._defaults),Nt=0;Nt<Oe.length;Nt++)ie._defaults[Oe[Nt]]=1;ie._defaults.timeline=1;var Ie=ie._defaults;const be=function(){function j(){var T=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};(0,c.Z)(this,j),this._o=T,this._shortColors={transparent:"rgba(0,0,0,0)",none:"rgba(0,0,0,0)",aqua:"rgb(0,255,255)",black:"rgb(0,0,0)",blue:"rgb(0,0,255)",fuchsia:"rgb(255,0,255)",gray:"rgb(128,128,128)",green:"rgb(0,128,0)",lime:"rgb(0,255,0)",maroon:"rgb(128,0,0)",navy:"rgb(0,0,128)",olive:"rgb(128,128,0)",purple:"rgb(128,0,128)",red:"rgb(255,0,0)",silver:"rgb(192,192,192)",teal:"rgb(0,128,128)",white:"rgb(255,255,255)",yellow:"rgb(255,255,0)",orange:"rgb(255,128,0)"},this._ignoreDeltasMap={prevChainModule:1,masterModule:1},this._parseDeltas(T.options),this._createDeltas(),this._createTimeline(this._mainTweenOptions)}return(0,h.Z)(j,[{key:"refresh",value:function(T){for(var k=0;k<this._deltas.length;k++)this._deltas[k].refresh(T);return this}},{key:"restore",value:function(){for(var T=0;T<this._deltas.length;T++)this._deltas[T].restore();return this}},{key:"_createTimeline",value:function(){this.timeline=new d.Z,this.timeline.add(this._deltas)}},{key:"_createDeltas",value:function(){this._deltas=[],this._deltas.push(this._createDelta(this._mainDeltas,this._mainTweenOptions));for(var T=0;T<this._childDeltas.length;T++){var k=this._childDeltas[T];this._deltas.push(this._createDelta([k.delta],k.tweenOptions))}}},{key:"_createDelta",value:function(T,k){var m=this._o;return new Tt({deltas:T,tweenOptions:k,props:m.props,isChained:m.isChained,callbacksContext:m.callbacksContext})}},{key:"_parseDeltas",value:function(T){var k=this._splitTweenOptions(T),m=k.delta;this._mainTweenOptions=k.tweenOptions,this._mainDeltas=[],this._childDeltas=[];for(var W=Object.keys(m),w=0;w<W.length;w++){var _=W[w];if(this._isDelta(m[_])&&!this._ignoreDeltasMap[_]){var ct=this._splitAndParseDelta(_,m[_]);ct.tweenOptions?this._childDeltas.push(ct):this._mainDeltas.push(ct.delta)}}}},{key:"_splitAndParseDelta",value:function(T,k){var m=this._splitTweenOptions(k);return m.delta=this._parseDelta(T,m.delta),m}},{key:"_parseDelta",value:function(T,k,m){return this._o.customProps&&this._o.customProps[T]!=null?this._parseDeltaByCustom(T,k,m):this._parseDeltaByGuess(T,k,m)}},{key:"_parseDeltaByCustom",value:function(T,k,m){return this._parseNumberDelta(T,k,m)}},{key:"_parseDeltaByGuess",value:function(T,k,m){var W=this._preparseDelta(k).start,w=this._o;return!isNaN(parseFloat(W))||W.match(/rand\(/)||W.match(/stagger\(/)?w.arrayPropertyMap&&w.arrayPropertyMap[T]?this._parseArrayDelta(T,k):w.numberPropertyMap&&w.numberPropertyMap[T]?this._parseNumberDelta(T,k,m):this._parseUnitDelta(T,k,m):this._parseColorDelta(T,k)}},{key:"_splitTweenOptions",value:function(T){T=Dt({},T);for(var k=Object.keys(T),m={},W=null,w=0;w<k.length;w++){var _=k[w];Ie[_]&&(T[_]!=null&&(m[_]=T[_],W=!0),delete T[_])}return{delta:T,tweenOptions:W?m:void 0}}},{key:"_isDelta",value:function(T){var k=A().isObject(T);return!(!(k=k&&!T.unit)||A().isArray(T)||A().isDOM(T))}},{key:"_parseColorDelta",value:function(T,k){if(T==="strokeLinecap")return A().warn("Sorry, stroke-linecap property is not animatable yet, using the start(#{start}) value instead",k),{};var m=this._preparseDelta(k),W=this._makeColorObj(m.start),w=this._makeColorObj(m.end);return{type:"color",name:T,start:W,end:w,curve:m.curve,delta:{r:w.r-W.r,g:w.g-W.g,b:w.b-W.b,a:w.a-W.a}}}},{key:"_parseArrayDelta",value:function(T,k){var m=this._preparseDelta(k),W=this._strToArr(m.start),w=this._strToArr(m.end);A().normDashArrays(W,w);for(var _=0;_<W.length;_++){var ct=w[_];A().mergeUnits(W[_],ct,T)}return{type:"array",name:T,start:W,end:w,delta:A().calcArrDelta(W,w),curve:m.curve}}},{key:"_parseUnitDelta",value:function(T,k,m){var W=this._preparseDelta(k),w=A().parseUnit(A().parseStringOption(W.end,m)),_=A().parseUnit(A().parseStringOption(W.start,m));return A().mergeUnits(_,w,T),{type:"unit",name:T,start:_,end:w,delta:w.value-_.value,curve:W.curve}}},{key:"_parseNumberDelta",value:function(T,k,m){var W=this._preparseDelta(k),w=parseFloat(A().parseStringOption(W.end,m)),_=parseFloat(A().parseStringOption(W.start,m));return{type:"number",name:T,start:_,end:w,delta:w-_,curve:W.curve}}},{key:"_preparseDelta",value:function(T){var k=(T=Dt({},T)).curve;k!=null&&((k=rt().parseEasing(k))._parent=this),delete T.curve;var m=Object.keys(T)[0];return{start:m,end:T[m],curve:k}}},{key:"_makeColorObj",value:function(T){var k={};if(T[0]==="#"){var m=/^#?([a-f\d]{1,2})([a-f\d]{1,2})([a-f\d]{1,2})$/i.exec(T);if(m){var W=m[1].length===2?m[1]:m[1]+m[1],w=m[2].length===2?m[2]:m[2]+m[2],_=m[3].length===2?m[3]:m[3]+m[3];k={r:parseInt(W,16),g:parseInt(w,16),b:parseInt(_,16),a:1}}}if(T[0]!=="#"){var ct,ht=T[0]==="r"&&T[1]==="g"&&T[2]==="b";ht&&(ct=T),ht||(this._shortColors[T]?ct=this._shortColors[T]:(A().div.style.color=T,ct=A().computedStyle(A().div).color));var Bt=new RegExp("^rgba?\\((\\d{1,3}),\\s?(\\d{1,3}),\\s?(\\d{1,3}),?\\s?(\\d{1}|0?\\.\\d{1,})?\\)$","gi").exec(ct),bt=parseFloat(Bt[4]||1);Bt&&(k={r:parseInt(Bt[1],10),g:parseInt(Bt[2],10),b:parseInt(Bt[3],10),a:bt==null||isNaN(bt)?1:bt})}return k}},{key:"_strToArr",value:function(T){var k=[];return typeof T!="number"||isNaN(T)?(T.trim().split(/\s+/gim).forEach(function(m){k.push(A().parseUnit(A().parseIfRand(m)))}),k):(k.push(A().parseUnit(T)),k)}}]),j}();function b(j,T){var k=Object.keys(j);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(j);T&&(m=m.filter(function(W){return Object.getOwnPropertyDescriptor(j,W).enumerable})),k.push.apply(k,m)}return k}function Y(j){for(var T=1;T<arguments.length;T++){var k=arguments[T]!=null?arguments[T]:{};T%2?b(Object(k),!0).forEach(function(m){D(j,m,k[m])}):Object.getOwnPropertyDescriptors?Object.defineProperties(j,Object.getOwnPropertyDescriptors(k)):b(Object(k)).forEach(function(m){Object.defineProperty(j,m,Object.getOwnPropertyDescriptor(k,m))})}return j}function R(j){var T=function(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}();return function(){var k,m=(0,g.Z)(j);if(T){var W=(0,g.Z)(this).constructor;k=Reflect.construct(m,arguments,W)}else k=m.apply(this,arguments);return(0,p.Z)(this,k)}}var Z={};y.Z.prototype._declareDefaults.call(Z);for(var L=Object.keys(Z._defaults),X=0;X<L.length;X++)Z._defaults[L[X]]=1;Z._defaults.timeline=1;var et=Z._defaults;const $=function(j){(0,q.Z)(k,j);var T=R(k);function k(){return(0,c.Z)(this,k),T.apply(this,arguments)}return(0,h.Z)(k,[{key:"_declareDefaults",value:function(){this._defaults={x:0,y:0,z:0,skewX:0,skewY:0,rotateX:0,rotateY:0,rotateZ:0,scale:1,scaleX:1,scaleY:1,isSoftHide:!0,isShowStart:!0,isShowEnd:!0,isForce3d:!1,isRefreshState:!0},this._drawExclude={el:1},this._3dProperties=["rotateX","rotateY","z"],this._arrayPropertyMap={transformOrigin:1,backgroundPosition:1},this._numberPropertyMap={opacity:1,scale:1,scaleX:1,scaleY:1,rotateX:1,rotateY:1,rotateZ:1,skewX:1,skewY:1},this._prefixPropertyMap={transform:1,transformOrigin:1},this._prefix=A().prefix.css}},{key:"then",value:function(m){if(m==null||!Object.keys(m).length)return 1;var W=A().getLastItem(this._modules);return W.deltas.refresh(!1),this._history[this._history.length-1]=W._o,(0,f.Z)((0,g.Z)(k.prototype),"then",this).call(this,m),W.deltas.restore(),this}},{key:"_checkStartValue",value:function(m,W){return W==null?this._defaults[m]!=null?this._defaults[m]:this._customProps[m]!=null?this._customProps[m]:A().defaultStyles[m]!=null?A().defaultStyles[m]:0:W}},{key:"_draw",value:function(){for(var m=this._props,W=0;W<this._drawProps.length;W++){var w=this._drawProps[W];this._setStyle(w,m[w])}this._drawTransform(),this._customDraw&&this._customDraw(this._props.el,this._props)}},{key:"_drawTransform",value:function(){var m=this._props,W=this._is3d?"translate3d(".concat(m.x,", ").concat(m.y,", ").concat(m.z,") rotateX(").concat(m.rotateX,"deg) rotateY(").concat(m.rotateY,"deg) rotateZ(").concat(m.rotateZ,"deg) skew(").concat(m.skewX,"deg, ").concat(m.skewY,"deg) scale(").concat(m.scaleX,", ").concat(m.scaleY,")"):"translate(".concat(m.x,", ").concat(m.y,") rotate(").concat(m.rotateZ,"deg) skew(").concat(m.skewX,"deg, ").concat(m.skewY,"deg) scale(").concat(m.scaleX,", ").concat(m.scaleY,")");this._setStyle("transform",W)}},{key:"_render",value:function(){if(!this._o.prevChainModule){for(var m=this._props,W=0;W<this._renderProps.length;W++){var w=this._renderProps[W],_=m[w];_=typeof _=="number"?"".concat(_,"px"):_,this._setStyle(w,_)}this._draw(),m.isShowStart||this._hide()}}},{key:"_setStyle",value:function(m,W){if(this._state[m]!==W){var w=this._props.el.style;w[m]=W,this._prefixPropertyMap[m]&&(w["".concat(this._prefix).concat(m)]=W),this._state[m]=W}}},{key:"_extendDefaults",value:function(){this._props=this._o.props||{},this._renderProps=[],this._drawProps=[],this._saveCustomProperties(this._o);var m=Y({},this._o);m=this._addDefaults(m);for(var W=Object.keys(m),w=0;w<W.length;w++){var _=W[w],ct=!this._drawExclude[_]&&this._defaults[_]==null&&!et[_],ht=this._customProps[_];A().isDelta(m[_])||et[_]?ct&&!ht&&this._drawProps.push(_):(this._parseOption(_,m[_]),_==="el"&&(this._props.el=A().parseEl(m.el),this.el=this._props.el),ct&&!ht&&this._renderProps.push(_))}this._createDeltas(m)}},{key:"_saveCustomProperties",value:function(){var m=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};this._customProps=m.customProperties||{},this._customProps=Y({},this._customProps),this._customDraw=this._customProps.draw,delete this._customProps.draw,delete m.customProperties,this._copyDefaultCustomProps()}},{key:"_copyDefaultCustomProps",value:function(){for(var m in this._customProps)this._o[m]==null&&(this._o[m]=this._customProps[m])}},{key:"_resetMergedFlags",value:function(m){return(0,f.Z)((0,g.Z)(k.prototype),"_resetMergedFlags",this).call(this,m),m.props=this._props,m.customProperties=this._customProps,m}},{key:"_parseOption",value:function(m,W){(0,f.Z)((0,g.Z)(k.prototype),"_parseOption",this).call(this,m,W);var w=this._props[m];A().isArray(w)&&(this._props[m]=this._arrToString(w))}},{key:"_arrToString",value:function(m){for(var W="",w=0;w<m.length;w++)W+="".concat(m[w].string," ");return W}},{key:"_addDefaults",value:function(m){for(var W in this._is3d=!1,this._defaults)m[W]==null?m[W]=W==="scaleX"||W==="scaleY"?m.scale!=null?m.scale:this._defaults.scale:this._defaults[W]:this._3dProperties.indexOf(W)!==-1&&(this._is3d=!0);return this._o.isForce3d&&(this._is3d=!0),m}},{key:"_vars",value:function(){this.deltas.refresh(!1),(0,f.Z)((0,g.Z)(k.prototype),"_vars",this).call(this),this._state={},this.deltas.restore(!1)}},{key:"_createDeltas",value:function(m){this.deltas=new be({options:m,props:this._props,arrayPropertyMap:this._arrayPropertyMap,numberPropertyMap:this._numberPropertyMap,customProps:this._customProps,callbacksContext:m.callbacksContext||this,isChained:!!this._o.prevChainModule}),this._o.prevChainModule&&(this.timeline=this.deltas.timeline)}},{key:"_makeTween",value:function(){}},{key:"_makeTimeline",value:function(){this._o.prevChainModule||(this._o.timeline=this._o.timeline||{},this._addCallbackOverrides(this._o.timeline),(0,f.Z)((0,g.Z)(k.prototype),"_makeTimeline",this).call(this),this.timeline.add(this.deltas))}},{key:"_addCallbackOverrides",value:function(m){var W=this,w=this._props;m.callbackOverrides={onUpdate:this._draw,onRefresh:this._props.isRefreshState?this._draw:void 0,onStart:function(_){W._isChained||(_&&!w.isShowStart?W._show():w.isShowStart||W._hide())},onComplete:function(_){W._isChained||(_?w.isShowEnd||W._hide():w.isShowEnd||W._show())}}}},{key:"_showByTransform",value:function(){this._drawTransform()}},{key:"_mergeThenProperty",value:function(m,W,w){var _=typeof w=="boolean";if(A().isTweenProp(m)||this._nonMergeProps[m]||_)return w;var ct={};if(A().isObject(w)&&w.to!=null){for(var ht in w)(et[ht]||ht==="curve")&&(ct[ht]=w[ht],delete w[ht]);w=w.to}if(this._isDelta(w)){var Bt={};for(var bt in w)(et[bt]||bt==="curve")&&(Bt[bt]=w[bt],delete w[bt]);return Y(Y({},this._parseDeltaValues(m,w)),Bt)}var te=this._parsePreArrayProperty(m,w);return this._isDelta(W)?Y(D({},A().getDeltaEnd(W),te),ct):Y(D({},W,te),ct)}}]),k}(E),ot=function(){function j(){var T=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};return(0,c.Z)(this,j),this.o=T,this.o.el?(this._vars(),this._declareDefaults(),this._extendDefaults(),this._parseFrames(),this._frames.length<=2&&A().warn("Spriter: only ".concat(this._frames.length," frames found")),this._frames.length<1&&A().error("Spriter: there is no frames to animate, aborting"),this._createTween(),this):A().error('No "el" option specified, aborting')}return(0,h.Z)(j,[{key:"_declareDefaults",value:function(){this._defaults={duration:500,delay:0,easing:"linear.none",repeat:0,yoyo:!1,isRunLess:!1,isShowEnd:!1,onStart:null,onUpdate:null,onComplete:null}}},{key:"_vars",value:function(){this._props=A().cloneObj(this.o),this.el=this.o.el,this._frames=[]}},{key:"run",value:function(){return this.timeline.play()}},{key:"_extendDefaults",value:function(){return A().extend(this._props,this._defaults)}},{key:"_parseFrames",value:function(){this._frames=Array.prototype.slice.call(this.el.children,0),this._frames.forEach(function(T){return T.style.opacity=0}),this._frameStep=1/this._frames.length}},{key:"_createTween",value:function(){var T=this;this._tween=new y.Z({duration:this._props.duration,delay:this._props.delay,yoyo:this._props.yoyo,repeat:this._props.repeat,easing:this._props.easing,onStart:function(){return T._props.onStart&&T._props.onStart()},onComplete:function(){return T._props.onComplete&&T._props.onComplete()},onUpdate:function(k){return T._setProgress(k)}}),this.timeline=new d.Z,this.timeline.add(this._tween),this._props.isRunLess||this._startTween()}},{key:"_startTween",value:function(){var T=this;setTimeout(function(){return T.timeline.play()},1)}},{key:"_setProgress",value:function(T){var k=Math.floor(T/this._frameStep);if(this._prevFrame!=this._frames[k]){this._prevFrame&&(this._prevFrame.style.opacity=0);var m=T===1&&this._props.isShowEnd?k-1:k;this._frames[m]&&(this._frames[m].style.opacity=1),this._prevFrame=this._frames[k]}this._props.onUpdate&&this._props.onUpdate(T)}}]),j}();var st=r(291),Mt=r.n(st),mt={revision:"1.3.0",isDebug:!1,helpers:A(),Shape:z,ShapeSwirl:at,Burst:ce,Html:$,stagger:function(j){return function(T){return new v(T,j)}},Spriter:ot,MotionPath:Mt(),Tween:y.Z,Timeline:d.Z,Tweenable:P,Thenable:E,Tunable:C,Module:N.Z,tweener:J.Z,easing:rt(),shapesMap:u(),_pool:{Delta:Tt,Deltas:be},h:A(),delta:A().delta,addShape:u().addShape,CustomShape:u().custom,Transit:z,Swirl:at};typeof window!="undefined"&&(window.mojs=mt);const Wt=mt})(),a=a.default})()},e.exports=n()})(og);var Ag=hI(og.exports);const eS=new Ag.Burst({left:0,top:0,radius:{12:20},angle:45,count:7,children:{shape:"line",radius:3,scale:1,stroke:"#fff",fill:"none",strokeDasharray:"100%",strokeDashoffset:{"-100%":"100%"},duration:350,easing:"quad.out"}}),nS=e=>Object.keys(Ft).includes(e),cg=({x:e,y:t})=>eS.tune({x:e,y:t}).replay(),sS=e=>{if(!nS(e))return!1;const t=document.querySelector(`[data-pressed-id="${e}"]`),n=document.querySelector(`[data-released-id="${e.replace("DOWN","UP")}"]`);let s=null;if(t?s=t.getBoundingClientRect():n&&(s=n.getBoundingClientRect()),!s)return!1;const i=1,r=20,a=s.x+i+window.scrollX,o=s.y+r+window.scrollY;cg({x:a,y:o})},Th=Array(10).fill("").map(()=>new Ag.Burst({left:0,top:0,rotate:"rand(0, 359)",count:"rand(3, 30)",radius:{200:200},children:{shape:"line",radius:2,scale:1,stroke:"black",fill:"none",strokeDasharray:"100%",strokeDashoffset:{"-100%":"100%"},duration:350,easing:"quad.out",delay:"stagger( rand(0, 200) )"}}));let Ac=0;const iS=()=>(Ac=(Ac+1)%Th.length,Th[Ac]);let rS=document.querySelector("#po_display");const aS=()=>rS||document.querySelector("#po_display"),oS=()=>{const e=aS().getBoundingClientRect(),t=Ih(e.left,e.right),n=Ih(e.top,e.bottom),s=aI(["circle","rect","polygon","line","cross","equal","curve","zigzag"]),i={x:t+window.scrollX,y:n+window.scrollY,children:{shape:s}};iS().tune(i).replay()},cl=.1,AS=1,lg=()=>document.querySelectorAll(".po_display__animations__image"),cS=()=>{const e=lg(),t=rI(0,e.length);oI(e,t).forEach(s=>{s.style.opacity==cl?s.style.opacity=AS:s.style.opacity=cl})},lS=()=>{lg().forEach(t=>{t.style.opacity=cl})};var ll={playLineBurst:cg,playLineBurstForPadById:sS,playRandomDisplayBurst:oS,playDisplayScreenAnimations:cS,clearDisplayScreenAnimations:lS};const cc={HIP_HOP:{name:"HIP HOP",value:80},DISCO:{name:"DISCO",value:120},TECHNO:{name:"TECHNO",value:140}},io=[cc.HIP_HOP,cc.DISCO,cc.TECHNO],uS=()=>hn.position.split(":").map(e=>Math.floor(e)),qS=()=>{const[,e,t]=uS();return`PAD_${e*4+t+1}_DOWN`};class hS{constructor(){const t=io[0];this.defaultBpm=t,this.bpm=t,this.swing=500,this.isPlaying=!1,this.currentPatternStep=1,this.currentChainStep=1,this.loadNewChainOnNextChainStep=!1,hn.bpm.value=this.bpm.value}toggle(){this.isPlaying?this.stopSequence():this.playSequence()}playSequence(){Zt.activateLayer(Qt.PLAY),cI(),this.isPlaying=!0,new jo(t=>{const n=this.currentChainStep-1,s=Lt.chain[n],i=Lt.getPatternById(s),r=Fe.getPatternById(s),a=`PAD_${this.currentPatternStep}_DOWN`;this.processPlayAndStepLight(a),this.processScreenAnimation(),r.activateStep(a,t),Lt.writeFxLiveMode&&i.writeBankFxLive(a),i.playSoundsAtStep(a,t),this.incrementPatternStep()},"16n").start(0),hn.start(),iA.start()}stopSequence(){Zt.deactivateLayer(Qt.PLAY),hn.stop(),hn.cancel(),this.resetChainAndPatternStep(),Fe.deactiveAllFx(),It.stopAll(),ll.clearDisplayScreenAnimations(),this.isPlaying=!1,iA.stop()}writeStepLive(t){const n=It.getCurrentSoundBankId(),s=Lt.chain[this.currentChainStep-1],i=Lt.getPatternById(s),r=`PAD_${this.currentPatternStep}_DOWN`,a=qS();i.setPadIdToStep(a,n,t),It.setLastSoundTriggeredByPadPress(t),r!==a&&It.play(t)}cycleDefaultBpms(){let n=io.findIndex(i=>i.name===this.defaultBpm.name)+1;n>=io.length&&(n=0);const s=io[n];this.defaultBpm=s,this.bpm=s,hn.bpm.value=this.bpm.value,Ce(s.name)}decrementBpm(){this.bpm.value=kn(this.bpm.value-1,60,240),hn.bpm.value=this.bpm.value}incrementBpm(){this.bpm.value=kn(this.bpm.value+1,60,240),hn.bpm.value=this.bpm.value}decrementSwing(){this.swing=kn(this.swing-1,500,518),hn.swing=Eh(this.swing,500,524)}incrementSwing(){this.swing=kn(this.swing+1,500,518),hn.swing=Eh(this.swing,500,524)}resetChainAndPatternStep(){this.currentChainStep=1,this.currentPatternStep=1,Lt.selectFirstPatternInChain()}processPlayAndStepLight(t){Zt.setAllLayerLights(Qt.PLAY,re.OFF),this.processPlayLight(),this.processStepLight(t)}processPlayLight(){[1,5,9,13].includes(this.currentPatternStep)?Zt.setLayerLight(Qt.PLAY,U.PLAY_DOWN,re.BRIGHT):[2,6,10,14].includes(this.currentPatternStep)&&Zt.setLayerLight(Qt.PLAY,U.PLAY_DOWN,re.OFF)}processStepLight(t){Zt.setLayerLight(Qt.PLAY,t,re.BRIGHT)}processScreenAnimation(){[1,5,9,13].includes(this.currentPatternStep)&&ll.playDisplayScreenAnimations()}incrementPatternStep(){this.currentPatternStep>=16?(this.currentPatternStep=1,this.incrementChainStep()):this.currentPatternStep+=1}incrementChainStep(){this.currentChainStep>=Lt.chain.length?this.currentChainStep=1:this.currentChainStep+=1;const t=Lt.chain[this.currentChainStep-1];Lt.selectPattern(t)}deserializeBPM(t){return hn.bpm.value=t.value,t}}const Xe=new hS,pS=e=>({serialize:()=>JSON.stringify(e)}),dS=e=>({deserialize:t=>{if(!t)return null;const n=JSON.parse(t);return Object.entries(n).map(([s,i])=>{let r=i;const a=`deserialize${s.toUpperCase()}`;e[a]&&(r=e[a](i)),e[s]=r}),e}});var ug={exports:{}};/*!
    localForage -- Offline Storage, Improved
    Version 1.10.0
    https://localforage.github.io/localForage
    (c) 2013-2017 Mozilla, Apache License 2.0
*/(function(e,t){(function(n){e.exports=n()})(function(){return function n(s,i,r){function a(l,u){if(!i[l]){if(!s[l]){var c=typeof so=="function"&&so;if(!u&&c)return c(l,!0);if(o)return o(l,!0);var h=new Error("Cannot find module '"+l+"'");throw h.code="MODULE_NOT_FOUND",h}var q=i[l]={exports:{}};s[l][0].call(q.exports,function(p){var g=s[l][1][p];return a(g||p)},q,q.exports,n,s,i,r)}return i[l].exports}for(var o=typeof so=="function"&&so,A=0;A<r.length;A++)a(r[A]);return a}({1:[function(n,s,i){(function(r){var a=r.MutationObserver||r.WebKitMutationObserver,o;if(a){var A=0,l=new a(p),u=r.document.createTextNode("");l.observe(u,{characterData:!0}),o=function(){u.data=A=++A%2}}else if(!r.setImmediate&&typeof r.MessageChannel!="undefined"){var c=new r.MessageChannel;c.port1.onmessage=p,o=function(){c.port2.postMessage(0)}}else"document"in r&&"onreadystatechange"in r.document.createElement("script")?o=function(){var d=r.document.createElement("script");d.onreadystatechange=function(){p(),d.onreadystatechange=null,d.parentNode.removeChild(d),d=null},r.document.documentElement.appendChild(d)}:o=function(){setTimeout(p,0)};var h,q=[];function p(){h=!0;for(var d,D,f=q.length;f;){for(D=q,q=[],d=-1;++d<f;)D[d]();f=q.length}h=!1}s.exports=g;function g(d){q.push(d)===1&&!h&&o()}}).call(this,typeof Cr!="undefined"?Cr:typeof self!="undefined"?self:typeof window!="undefined"?window:{})},{}],2:[function(n,s,i){var r=n(1);function a(){}var o={},A=["REJECTED"],l=["FULFILLED"],u=["PENDING"];s.exports=c;function c(M){if(typeof M!="function")throw new TypeError("resolver must be a function");this.state=u,this.queue=[],this.outcome=void 0,M!==a&&g(this,M)}c.prototype.catch=function(M){return this.then(null,M)},c.prototype.then=function(M,P){if(typeof M!="function"&&this.state===l||typeof P!="function"&&this.state===A)return this;var O=new this.constructor(a);if(this.state!==u){var E=this.state===l?M:P;q(O,E,this.outcome)}else this.queue.push(new h(O,M,P));return O};function h(M,P,O){this.promise=M,typeof P=="function"&&(this.onFulfilled=P,this.callFulfilled=this.otherCallFulfilled),typeof O=="function"&&(this.onRejected=O,this.callRejected=this.otherCallRejected)}h.prototype.callFulfilled=function(M){o.resolve(this.promise,M)},h.prototype.otherCallFulfilled=function(M){q(this.promise,this.onFulfilled,M)},h.prototype.callRejected=function(M){o.reject(this.promise,M)},h.prototype.otherCallRejected=function(M){q(this.promise,this.onRejected,M)};function q(M,P,O){r(function(){var E;try{E=P(O)}catch(V){return o.reject(M,V)}E===M?o.reject(M,new TypeError("Cannot resolve promise with itself")):o.resolve(M,E)})}o.resolve=function(M,P){var O=d(p,P);if(O.status==="error")return o.reject(M,O.value);var E=O.value;if(E)g(M,E);else{M.state=l,M.outcome=P;for(var V=-1,C=M.queue.length;++V<C;)M.queue[V].callFulfilled(P)}return M},o.reject=function(M,P){M.state=A,M.outcome=P;for(var O=-1,E=M.queue.length;++O<E;)M.queue[O].callRejected(P);return M};function p(M){var P=M&&M.then;if(M&&(typeof M=="object"||typeof M=="function")&&typeof P=="function")return function(){P.apply(M,arguments)}}function g(M,P){var O=!1;function E(v){O||(O=!0,o.reject(M,v))}function V(v){O||(O=!0,o.resolve(M,v))}function C(){P(V,E)}var B=d(C);B.status==="error"&&E(B.value)}function d(M,P){var O={};try{O.value=M(P),O.status="success"}catch(E){O.status="error",O.value=E}return O}c.resolve=D;function D(M){return M instanceof this?M:o.resolve(new this(a),M)}c.reject=f;function f(M){var P=new this(a);return o.reject(P,M)}c.all=y;function y(M){var P=this;if(Object.prototype.toString.call(M)!=="[object Array]")return this.reject(new TypeError("must be an array"));var O=M.length,E=!1;if(!O)return this.resolve([]);for(var V=new Array(O),C=0,B=-1,v=new this(a);++B<O;)J(M[B],B);return v;function J(K,rt){P.resolve(K).then(tt,function(z){E||(E=!0,o.reject(v,z))});function tt(z){V[rt]=z,++C===O&&!E&&(E=!0,o.resolve(v,V))}}}c.race=N;function N(M){var P=this;if(Object.prototype.toString.call(M)!=="[object Array]")return this.reject(new TypeError("must be an array"));var O=M.length,E=!1;if(!O)return this.resolve([]);for(var V=-1,C=new this(a);++V<O;)B(M[V]);return C;function B(v){P.resolve(v).then(function(J){E||(E=!0,o.resolve(C,J))},function(J){E||(E=!0,o.reject(C,J))})}}},{"1":1}],3:[function(n,s,i){(function(r){typeof r.Promise!="function"&&(r.Promise=n(2))}).call(this,typeof Cr!="undefined"?Cr:typeof self!="undefined"?self:typeof window!="undefined"?window:{})},{"2":2}],4:[function(n,s,i){var r=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(I){return typeof I}:function(I){return I&&typeof Symbol=="function"&&I.constructor===Symbol&&I!==Symbol.prototype?"symbol":typeof I};function a(I,Q){if(!(I instanceof Q))throw new TypeError("Cannot call a class as a function")}function o(){try{if(typeof indexedDB!="undefined")return indexedDB;if(typeof webkitIndexedDB!="undefined")return webkitIndexedDB;if(typeof mozIndexedDB!="undefined")return mozIndexedDB;if(typeof OIndexedDB!="undefined")return OIndexedDB;if(typeof msIndexedDB!="undefined")return msIndexedDB}catch{return}}var A=o();function l(){try{if(!A||!A.open)return!1;var I=typeof openDatabase!="undefined"&&/(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent)&&!/Chrome/.test(navigator.userAgent)&&!/BlackBerry/.test(navigator.platform),Q=typeof fetch=="function"&&fetch.toString().indexOf("[native code")!==-1;return(!I||Q)&&typeof indexedDB!="undefined"&&typeof IDBKeyRange!="undefined"}catch{return!1}}function u(I,Q){I=I||[],Q=Q||{};try{return new Blob(I,Q)}catch(G){if(G.name!=="TypeError")throw G;for(var S=typeof BlobBuilder!="undefined"?BlobBuilder:typeof MSBlobBuilder!="undefined"?MSBlobBuilder:typeof MozBlobBuilder!="undefined"?MozBlobBuilder:WebKitBlobBuilder,x=new S,F=0;F<I.length;F+=1)x.append(I[F]);return x.getBlob(Q.type)}}typeof Promise=="undefined"&&n(3);var c=Promise;function h(I,Q){Q&&I.then(function(S){Q(null,S)},function(S){Q(S)})}function q(I,Q,S){typeof Q=="function"&&I.then(Q),typeof S=="function"&&I.catch(S)}function p(I){return typeof I!="string"&&(console.warn(I+" used as a key, but it is not a string."),I=String(I)),I}function g(){if(arguments.length&&typeof arguments[arguments.length-1]=="function")return arguments[arguments.length-1]}var d="local-forage-detect-blob-support",D=void 0,f={},y=Object.prototype.toString,N="readonly",M="readwrite";function P(I){for(var Q=I.length,S=new ArrayBuffer(Q),x=new Uint8Array(S),F=0;F<Q;F++)x[F]=I.charCodeAt(F);return S}function O(I){return new c(function(Q){var S=I.transaction(d,M),x=u([""]);S.objectStore(d).put(x,"key"),S.onabort=function(F){F.preventDefault(),F.stopPropagation(),Q(!1)},S.oncomplete=function(){var F=navigator.userAgent.match(/Chrome\/(\d+)/),G=navigator.userAgent.match(/Edge\//);Q(G||!F||parseInt(F[1],10)>=43)}}).catch(function(){return!1})}function E(I){return typeof D=="boolean"?c.resolve(D):O(I).then(function(Q){return D=Q,D})}function V(I){var Q=f[I.name],S={};S.promise=new c(function(x,F){S.resolve=x,S.reject=F}),Q.deferredOperations.push(S),Q.dbReady?Q.dbReady=Q.dbReady.then(function(){return S.promise}):Q.dbReady=S.promise}function C(I){var Q=f[I.name],S=Q.deferredOperations.pop();if(S)return S.resolve(),S.promise}function B(I,Q){var S=f[I.name],x=S.deferredOperations.pop();if(x)return x.reject(Q),x.promise}function v(I,Q){return new c(function(S,x){if(f[I.name]=f[I.name]||kt(),I.db)if(Q)V(I),I.db.close();else return S(I.db);var F=[I.name];Q&&F.push(I.version);var G=A.open.apply(A,F);Q&&(G.onupgradeneeded=function(H){var At=G.result;try{At.createObjectStore(I.storeName),H.oldVersion<=1&&At.createObjectStore(d)}catch(lt){if(lt.name==="ConstraintError")console.warn('The database "'+I.name+'" has been upgraded from version '+H.oldVersion+" to version "+H.newVersion+', but the storage "'+I.storeName+'" already exists.');else throw lt}}),G.onerror=function(H){H.preventDefault(),x(G.error)},G.onsuccess=function(){var H=G.result;H.onversionchange=function(At){At.target.close()},S(H),C(I)}})}function J(I){return v(I,!1)}function K(I){return v(I,!0)}function rt(I,Q){if(!I.db)return!0;var S=!I.db.objectStoreNames.contains(I.storeName),x=I.version<I.db.version,F=I.version>I.db.version;if(x&&(I.version!==Q&&console.warn('The database "'+I.name+`" can't be downgraded from version `+I.db.version+" to version "+I.version+"."),I.version=I.db.version),F||S){if(S){var G=I.db.version+1;G>I.version&&(I.version=G)}return!0}return!1}function tt(I){return new c(function(Q,S){var x=new FileReader;x.onerror=S,x.onloadend=function(F){var G=btoa(F.target.result||"");Q({__local_forage_encoded_blob:!0,data:G,type:I.type})},x.readAsBinaryString(I)})}function z(I){var Q=P(atob(I.data));return u([Q],{type:I.type})}function dt(I){return I&&I.__local_forage_encoded_blob}function at(I){var Q=this,S=Q._initReady().then(function(){var x=f[Q._dbInfo.name];if(x&&x.dbReady)return x.dbReady});return q(S,I,I),S}function St(I){V(I);for(var Q=f[I.name],S=Q.forages,x=0;x<S.length;x++){var F=S[x];F._dbInfo.db&&(F._dbInfo.db.close(),F._dbInfo.db=null)}return I.db=null,J(I).then(function(G){return I.db=G,rt(I)?K(I):G}).then(function(G){I.db=Q.db=G;for(var H=0;H<S.length;H++)S[H]._dbInfo.db=G}).catch(function(G){throw B(I,G),G})}function gt(I,Q,S,x){x===void 0&&(x=1);try{var F=I.db.transaction(I.storeName,Q);S(null,F)}catch(G){if(x>0&&(!I.db||G.name==="InvalidStateError"||G.name==="NotFoundError"))return c.resolve().then(function(){if(!I.db||G.name==="NotFoundError"&&!I.db.objectStoreNames.contains(I.storeName)&&I.version<=I.db.version)return I.db&&(I.version=I.db.version+1),K(I)}).then(function(){return St(I).then(function(){gt(I,Q,S,x-1)})}).catch(S);S(G)}}function kt(){return{forages:[],db:null,dbReady:null,deferredOperations:[]}}function Gt(I){var Q=this,S={db:null};if(I)for(var x in I)S[x]=I[x];var F=f[S.name];F||(F=kt(),f[S.name]=F),F.forages.push(Q),Q._initReady||(Q._initReady=Q.ready,Q.ready=at);var G=[];function H(){return c.resolve()}for(var At=0;At<F.forages.length;At++){var lt=F.forages[At];lt!==Q&&G.push(lt._initReady().catch(H))}var ut=F.forages.slice(0);return c.all(G).then(function(){return S.db=F.db,J(S)}).then(function(pt){return S.db=pt,rt(S,Q._defaultConfig.version)?K(S):pt}).then(function(pt){S.db=F.db=pt,Q._dbInfo=S;for(var Et=0;Et<ut.length;Et++){var xt=ut[Et];xt!==Q&&(xt._dbInfo.db=S.db,xt._dbInfo.version=S.version)}})}function ce(I,Q){var S=this;I=p(I);var x=new c(function(F,G){S.ready().then(function(){gt(S._dbInfo,N,function(H,At){if(H)return G(H);try{var lt=At.objectStore(S._dbInfo.storeName),ut=lt.get(I);ut.onsuccess=function(){var pt=ut.result;pt===void 0&&(pt=null),dt(pt)&&(pt=z(pt)),F(pt)},ut.onerror=function(){G(ut.error)}}catch(pt){G(pt)}})}).catch(G)});return h(x,Q),x}function Tt(I,Q){var S=this,x=new c(function(F,G){S.ready().then(function(){gt(S._dbInfo,N,function(H,At){if(H)return G(H);try{var lt=At.objectStore(S._dbInfo.storeName),ut=lt.openCursor(),pt=1;ut.onsuccess=function(){var Et=ut.result;if(Et){var xt=Et.value;dt(xt)&&(xt=z(xt));var Xt=I(xt,Et.key,pt++);Xt!==void 0?F(Xt):Et.continue()}else F()},ut.onerror=function(){G(ut.error)}}catch(Et){G(Et)}})}).catch(G)});return h(x,Q),x}function ft(I,Q,S){var x=this;I=p(I);var F=new c(function(G,H){var At;x.ready().then(function(){return At=x._dbInfo,y.call(Q)==="[object Blob]"?E(At.db).then(function(lt){return lt?Q:tt(Q)}):Q}).then(function(lt){gt(x._dbInfo,M,function(ut,pt){if(ut)return H(ut);try{var Et=pt.objectStore(x._dbInfo.storeName);lt===null&&(lt=void 0);var xt=Et.put(lt,I);pt.oncomplete=function(){lt===void 0&&(lt=null),G(lt)},pt.onabort=pt.onerror=function(){var Xt=xt.error?xt.error:xt.transaction.error;H(Xt)}}catch(Xt){H(Xt)}})}).catch(H)});return h(F,S),F}function Dt(I,Q){var S=this;I=p(I);var x=new c(function(F,G){S.ready().then(function(){gt(S._dbInfo,M,function(H,At){if(H)return G(H);try{var lt=At.objectStore(S._dbInfo.storeName),ut=lt.delete(I);At.oncomplete=function(){F()},At.onerror=function(){G(ut.error)},At.onabort=function(){var pt=ut.error?ut.error:ut.transaction.error;G(pt)}}catch(pt){G(pt)}})}).catch(G)});return h(x,Q),x}function ie(I){var Q=this,S=new c(function(x,F){Q.ready().then(function(){gt(Q._dbInfo,M,function(G,H){if(G)return F(G);try{var At=H.objectStore(Q._dbInfo.storeName),lt=At.clear();H.oncomplete=function(){x()},H.onabort=H.onerror=function(){var ut=lt.error?lt.error:lt.transaction.error;F(ut)}}catch(ut){F(ut)}})}).catch(F)});return h(S,I),S}function Oe(I){var Q=this,S=new c(function(x,F){Q.ready().then(function(){gt(Q._dbInfo,N,function(G,H){if(G)return F(G);try{var At=H.objectStore(Q._dbInfo.storeName),lt=At.count();lt.onsuccess=function(){x(lt.result)},lt.onerror=function(){F(lt.error)}}catch(ut){F(ut)}})}).catch(F)});return h(S,I),S}function Nt(I,Q){var S=this,x=new c(function(F,G){if(I<0){F(null);return}S.ready().then(function(){gt(S._dbInfo,N,function(H,At){if(H)return G(H);try{var lt=At.objectStore(S._dbInfo.storeName),ut=!1,pt=lt.openKeyCursor();pt.onsuccess=function(){var Et=pt.result;if(!Et){F(null);return}I===0||ut?F(Et.key):(ut=!0,Et.advance(I))},pt.onerror=function(){G(pt.error)}}catch(Et){G(Et)}})}).catch(G)});return h(x,Q),x}function Ie(I){var Q=this,S=new c(function(x,F){Q.ready().then(function(){gt(Q._dbInfo,N,function(G,H){if(G)return F(G);try{var At=H.objectStore(Q._dbInfo.storeName),lt=At.openKeyCursor(),ut=[];lt.onsuccess=function(){var pt=lt.result;if(!pt){x(ut);return}ut.push(pt.key),pt.continue()},lt.onerror=function(){F(lt.error)}}catch(pt){F(pt)}})}).catch(F)});return h(S,I),S}function be(I,Q){Q=g.apply(this,arguments);var S=this.config();I=typeof I!="function"&&I||{},I.name||(I.name=I.name||S.name,I.storeName=I.storeName||S.storeName);var x=this,F;if(!I.name)F=c.reject("Invalid arguments");else{var G=I.name===S.name&&x._dbInfo.db,H=G?c.resolve(x._dbInfo.db):J(I).then(function(At){var lt=f[I.name],ut=lt.forages;lt.db=At;for(var pt=0;pt<ut.length;pt++)ut[pt]._dbInfo.db=At;return At});I.storeName?F=H.then(function(At){if(!!At.objectStoreNames.contains(I.storeName)){var lt=At.version+1;V(I);var ut=f[I.name],pt=ut.forages;At.close();for(var Et=0;Et<pt.length;Et++){var xt=pt[Et];xt._dbInfo.db=null,xt._dbInfo.version=lt}var Xt=new c(function(ee,Se){var ye=A.open(I.name,lt);ye.onerror=function(mn){var yr=ye.result;yr.close(),Se(mn)},ye.onupgradeneeded=function(){var mn=ye.result;mn.deleteObjectStore(I.storeName)},ye.onsuccess=function(){var mn=ye.result;mn.close(),ee(mn)}});return Xt.then(function(ee){ut.db=ee;for(var Se=0;Se<pt.length;Se++){var ye=pt[Se];ye._dbInfo.db=ee,C(ye._dbInfo)}}).catch(function(ee){throw(B(I,ee)||c.resolve()).catch(function(){}),ee})}}):F=H.then(function(At){V(I);var lt=f[I.name],ut=lt.forages;At.close();for(var pt=0;pt<ut.length;pt++){var Et=ut[pt];Et._dbInfo.db=null}var xt=new c(function(Xt,ee){var Se=A.deleteDatabase(I.name);Se.onerror=function(){var ye=Se.result;ye&&ye.close(),ee(Se.error)},Se.onblocked=function(){console.warn('dropInstance blocked for database "'+I.name+'" until all open connections are closed')},Se.onsuccess=function(){var ye=Se.result;ye&&ye.close(),Xt(ye)}});return xt.then(function(Xt){lt.db=Xt;for(var ee=0;ee<ut.length;ee++){var Se=ut[ee];C(Se._dbInfo)}}).catch(function(Xt){throw(B(I,Xt)||c.resolve()).catch(function(){}),Xt})})}return h(F,Q),F}var b={_driver:"asyncStorage",_initStorage:Gt,_support:l(),iterate:Tt,getItem:ce,setItem:ft,removeItem:Dt,clear:ie,length:Oe,key:Nt,keys:Ie,dropInstance:be};function Y(){return typeof openDatabase=="function"}var R="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Z="~~local_forage_type~",L=/^~~local_forage_type~([^~]+)~/,X="__lfsc__:",et=X.length,$="arbf",ot="blob",st="si08",Mt="ui08",mt="uic8",Wt="si16",j="si32",T="ur16",k="ui32",m="fl32",W="fl64",w=et+$.length,_=Object.prototype.toString;function ct(I){var Q=I.length*.75,S=I.length,x,F=0,G,H,At,lt;I[I.length-1]==="="&&(Q--,I[I.length-2]==="="&&Q--);var ut=new ArrayBuffer(Q),pt=new Uint8Array(ut);for(x=0;x<S;x+=4)G=R.indexOf(I[x]),H=R.indexOf(I[x+1]),At=R.indexOf(I[x+2]),lt=R.indexOf(I[x+3]),pt[F++]=G<<2|H>>4,pt[F++]=(H&15)<<4|At>>2,pt[F++]=(At&3)<<6|lt&63;return ut}function ht(I){var Q=new Uint8Array(I),S="",x;for(x=0;x<Q.length;x+=3)S+=R[Q[x]>>2],S+=R[(Q[x]&3)<<4|Q[x+1]>>4],S+=R[(Q[x+1]&15)<<2|Q[x+2]>>6],S+=R[Q[x+2]&63];return Q.length%3===2?S=S.substring(0,S.length-1)+"=":Q.length%3===1&&(S=S.substring(0,S.length-2)+"=="),S}function Bt(I,Q){var S="";if(I&&(S=_.call(I)),I&&(S==="[object ArrayBuffer]"||I.buffer&&_.call(I.buffer)==="[object ArrayBuffer]")){var x,F=X;I instanceof ArrayBuffer?(x=I,F+=$):(x=I.buffer,S==="[object Int8Array]"?F+=st:S==="[object Uint8Array]"?F+=Mt:S==="[object Uint8ClampedArray]"?F+=mt:S==="[object Int16Array]"?F+=Wt:S==="[object Uint16Array]"?F+=T:S==="[object Int32Array]"?F+=j:S==="[object Uint32Array]"?F+=k:S==="[object Float32Array]"?F+=m:S==="[object Float64Array]"?F+=W:Q(new Error("Failed to get type for BinaryArray"))),Q(F+ht(x))}else if(S==="[object Blob]"){var G=new FileReader;G.onload=function(){var H=Z+I.type+"~"+ht(this.result);Q(X+ot+H)},G.readAsArrayBuffer(I)}else try{Q(JSON.stringify(I))}catch(H){console.error("Couldn't convert value into a JSON string: ",I),Q(null,H)}}function bt(I){if(I.substring(0,et)!==X)return JSON.parse(I);var Q=I.substring(w),S=I.substring(et,w),x;if(S===ot&&L.test(Q)){var F=Q.match(L);x=F[1],Q=Q.substring(F[0].length)}var G=ct(Q);switch(S){case $:return G;case ot:return u([G],{type:x});case st:return new Int8Array(G);case Mt:return new Uint8Array(G);case mt:return new Uint8ClampedArray(G);case Wt:return new Int16Array(G);case T:return new Uint16Array(G);case j:return new Int32Array(G);case k:return new Uint32Array(G);case m:return new Float32Array(G);case W:return new Float64Array(G);default:throw new Error("Unkown type: "+S)}}var te={serialize:Bt,deserialize:bt,stringToBuffer:ct,bufferToString:ht};function Je(I,Q,S,x){I.executeSql("CREATE TABLE IF NOT EXISTS "+Q.storeName+" (id INTEGER PRIMARY KEY, key unique, value)",[],S,x)}function Vs(I){var Q=this,S={db:null};if(I)for(var x in I)S[x]=typeof I[x]!="string"?I[x].toString():I[x];var F=new c(function(G,H){try{S.db=openDatabase(S.name,String(S.version),S.description,S.size)}catch(At){return H(At)}S.db.transaction(function(At){Je(At,S,function(){Q._dbInfo=S,G()},function(lt,ut){H(ut)})},H)});return S.serializer=te,F}function Ms(I,Q,S,x,F,G){I.executeSql(S,x,F,function(H,At){At.code===At.SYNTAX_ERR?H.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name = ?",[Q.storeName],function(lt,ut){ut.rows.length?G(lt,At):Je(lt,Q,function(){lt.executeSql(S,x,F,G)},G)},G):G(H,At)},G)}function sf(I,Q){var S=this;I=p(I);var x=new c(function(F,G){S.ready().then(function(){var H=S._dbInfo;H.db.transaction(function(At){Ms(At,H,"SELECT * FROM "+H.storeName+" WHERE key = ? LIMIT 1",[I],function(lt,ut){var pt=ut.rows.length?ut.rows.item(0).value:null;pt&&(pt=H.serializer.deserialize(pt)),F(pt)},function(lt,ut){G(ut)})})}).catch(G)});return h(x,Q),x}function rf(I,Q){var S=this,x=new c(function(F,G){S.ready().then(function(){var H=S._dbInfo;H.db.transaction(function(At){Ms(At,H,"SELECT * FROM "+H.storeName,[],function(lt,ut){for(var pt=ut.rows,Et=pt.length,xt=0;xt<Et;xt++){var Xt=pt.item(xt),ee=Xt.value;if(ee&&(ee=H.serializer.deserialize(ee)),ee=I(ee,Xt.key,xt+1),ee!==void 0){F(ee);return}}F()},function(lt,ut){G(ut)})})}).catch(G)});return h(x,Q),x}function Ju(I,Q,S,x){var F=this;I=p(I);var G=new c(function(H,At){F.ready().then(function(){Q===void 0&&(Q=null);var lt=Q,ut=F._dbInfo;ut.serializer.serialize(Q,function(pt,Et){Et?At(Et):ut.db.transaction(function(xt){Ms(xt,ut,"INSERT OR REPLACE INTO "+ut.storeName+" (key, value) VALUES (?, ?)",[I,pt],function(){H(lt)},function(Xt,ee){At(ee)})},function(xt){if(xt.code===xt.QUOTA_ERR){if(x>0){H(Ju.apply(F,[I,lt,S,x-1]));return}At(xt)}})})}).catch(At)});return h(G,S),G}function af(I,Q,S){return Ju.apply(this,[I,Q,S,1])}function of(I,Q){var S=this;I=p(I);var x=new c(function(F,G){S.ready().then(function(){var H=S._dbInfo;H.db.transaction(function(At){Ms(At,H,"DELETE FROM "+H.storeName+" WHERE key = ?",[I],function(){F()},function(lt,ut){G(ut)})})}).catch(G)});return h(x,Q),x}function Af(I){var Q=this,S=new c(function(x,F){Q.ready().then(function(){var G=Q._dbInfo;G.db.transaction(function(H){Ms(H,G,"DELETE FROM "+G.storeName,[],function(){x()},function(At,lt){F(lt)})})}).catch(F)});return h(S,I),S}function cf(I){var Q=this,S=new c(function(x,F){Q.ready().then(function(){var G=Q._dbInfo;G.db.transaction(function(H){Ms(H,G,"SELECT COUNT(key) as c FROM "+G.storeName,[],function(At,lt){var ut=lt.rows.item(0).c;x(ut)},function(At,lt){F(lt)})})}).catch(F)});return h(S,I),S}function lf(I,Q){var S=this,x=new c(function(F,G){S.ready().then(function(){var H=S._dbInfo;H.db.transaction(function(At){Ms(At,H,"SELECT key FROM "+H.storeName+" WHERE id = ? LIMIT 1",[I+1],function(lt,ut){var pt=ut.rows.length?ut.rows.item(0).key:null;F(pt)},function(lt,ut){G(ut)})})}).catch(G)});return h(x,Q),x}function uf(I){var Q=this,S=new c(function(x,F){Q.ready().then(function(){var G=Q._dbInfo;G.db.transaction(function(H){Ms(H,G,"SELECT key FROM "+G.storeName,[],function(At,lt){for(var ut=[],pt=0;pt<lt.rows.length;pt++)ut.push(lt.rows.item(pt).key);x(ut)},function(At,lt){F(lt)})})}).catch(F)});return h(S,I),S}function qf(I){return new c(function(Q,S){I.transaction(function(x){x.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'",[],function(F,G){for(var H=[],At=0;At<G.rows.length;At++)H.push(G.rows.item(At).name);Q({db:I,storeNames:H})},function(F,G){S(G)})},function(x){S(x)})})}function hf(I,Q){Q=g.apply(this,arguments);var S=this.config();I=typeof I!="function"&&I||{},I.name||(I.name=I.name||S.name,I.storeName=I.storeName||S.storeName);var x=this,F;return I.name?F=new c(function(G){var H;I.name===S.name?H=x._dbInfo.db:H=openDatabase(I.name,"","",0),I.storeName?G({db:H,storeNames:[I.storeName]}):G(qf(H))}).then(function(G){return new c(function(H,At){G.db.transaction(function(lt){function ut(Xt){return new c(function(ee,Se){lt.executeSql("DROP TABLE IF EXISTS "+Xt,[],function(){ee()},function(ye,mn){Se(mn)})})}for(var pt=[],Et=0,xt=G.storeNames.length;Et<xt;Et++)pt.push(ut(G.storeNames[Et]));c.all(pt).then(function(){H()}).catch(function(Xt){At(Xt)})},function(lt){At(lt)})})}):F=c.reject("Invalid arguments"),h(F,Q),F}var pf={_driver:"webSQLStorage",_initStorage:Vs,_support:Y(),iterate:rf,getItem:sf,setItem:af,removeItem:of,clear:Af,length:cf,key:lf,keys:uf,dropInstance:hf};function df(){try{return typeof localStorage!="undefined"&&"setItem"in localStorage&&!!localStorage.setItem}catch{return!1}}function Lu(I,Q){var S=I.name+"/";return I.storeName!==Q.storeName&&(S+=I.storeName+"/"),S}function Df(){var I="_localforage_support_test";try{return localStorage.setItem(I,!0),localStorage.removeItem(I),!1}catch{return!0}}function gf(){return!Df()||localStorage.length>0}function ff(I){var Q=this,S={};if(I)for(var x in I)S[x]=I[x];return S.keyPrefix=Lu(I,Q._defaultConfig),gf()?(Q._dbInfo=S,S.serializer=te,c.resolve()):c.reject()}function mf(I){var Q=this,S=Q.ready().then(function(){for(var x=Q._dbInfo.keyPrefix,F=localStorage.length-1;F>=0;F--){var G=localStorage.key(F);G.indexOf(x)===0&&localStorage.removeItem(G)}});return h(S,I),S}function Nf(I,Q){var S=this;I=p(I);var x=S.ready().then(function(){var F=S._dbInfo,G=localStorage.getItem(F.keyPrefix+I);return G&&(G=F.serializer.deserialize(G)),G});return h(x,Q),x}function Vf(I,Q){var S=this,x=S.ready().then(function(){for(var F=S._dbInfo,G=F.keyPrefix,H=G.length,At=localStorage.length,lt=1,ut=0;ut<At;ut++){var pt=localStorage.key(ut);if(pt.indexOf(G)===0){var Et=localStorage.getItem(pt);if(Et&&(Et=F.serializer.deserialize(Et)),Et=I(Et,pt.substring(H),lt++),Et!==void 0)return Et}}});return h(x,Q),x}function Mf(I,Q){var S=this,x=S.ready().then(function(){var F=S._dbInfo,G;try{G=localStorage.key(I)}catch{G=null}return G&&(G=G.substring(F.keyPrefix.length)),G});return h(x,Q),x}function Of(I){var Q=this,S=Q.ready().then(function(){for(var x=Q._dbInfo,F=localStorage.length,G=[],H=0;H<F;H++){var At=localStorage.key(H);At.indexOf(x.keyPrefix)===0&&G.push(At.substring(x.keyPrefix.length))}return G});return h(S,I),S}function yf(I){var Q=this,S=Q.keys().then(function(x){return x.length});return h(S,I),S}function Wf(I,Q){var S=this;I=p(I);var x=S.ready().then(function(){var F=S._dbInfo;localStorage.removeItem(F.keyPrefix+I)});return h(x,Q),x}function Ef(I,Q,S){var x=this;I=p(I);var F=x.ready().then(function(){Q===void 0&&(Q=null);var G=Q;return new c(function(H,At){var lt=x._dbInfo;lt.serializer.serialize(Q,function(ut,pt){if(pt)At(pt);else try{localStorage.setItem(lt.keyPrefix+I,ut),H(G)}catch(Et){(Et.name==="QuotaExceededError"||Et.name==="NS_ERROR_DOM_QUOTA_REACHED")&&At(Et),At(Et)}})})});return h(F,S),F}function Pf(I,Q){if(Q=g.apply(this,arguments),I=typeof I!="function"&&I||{},!I.name){var S=this.config();I.name=I.name||S.name,I.storeName=I.storeName||S.storeName}var x=this,F;return I.name?F=new c(function(G){I.storeName?G(Lu(I,x._defaultConfig)):G(I.name+"/")}).then(function(G){for(var H=localStorage.length-1;H>=0;H--){var At=localStorage.key(H);At.indexOf(G)===0&&localStorage.removeItem(At)}}):F=c.reject("Invalid arguments"),h(F,Q),F}var If={_driver:"localStorageWrapper",_initStorage:ff,_support:df(),iterate:Vf,getItem:Nf,setItem:Ef,removeItem:Wf,clear:mf,length:yf,key:Mf,keys:Of,dropInstance:Pf},Sf=function(Q,S){return Q===S||typeof Q=="number"&&typeof S=="number"&&isNaN(Q)&&isNaN(S)},Cf=function(Q,S){for(var x=Q.length,F=0;F<x;){if(Sf(Q[F],S))return!0;F++}return!1},zu=Array.isArray||function(I){return Object.prototype.toString.call(I)==="[object Array]"},Or={},ju={},Qi={INDEXEDDB:b,WEBSQL:pf,LOCALSTORAGE:If},wf=[Qi.INDEXEDDB._driver,Qi.WEBSQL._driver,Qi.LOCALSTORAGE._driver],Qa=["dropInstance"],JA=["clear","getItem","iterate","key","keys","length","removeItem","setItem"].concat(Qa),Bf={description:"",driver:wf.slice(),name:"localforage",size:4980736,storeName:"keyvaluepairs",version:1};function kf(I,Q){I[Q]=function(){var S=arguments;return I.ready().then(function(){return I[Q].apply(I,S)})}}function LA(){for(var I=1;I<arguments.length;I++){var Q=arguments[I];if(Q)for(var S in Q)Q.hasOwnProperty(S)&&(zu(Q[S])?arguments[0][S]=Q[S].slice():arguments[0][S]=Q[S])}return arguments[0]}var Tf=function(){function I(Q){a(this,I);for(var S in Qi)if(Qi.hasOwnProperty(S)){var x=Qi[S],F=x._driver;this[S]=F,Or[F]||this.defineDriver(x)}this._defaultConfig=LA({},Bf),this._config=LA({},this._defaultConfig,Q),this._driverSet=null,this._initDriver=null,this._ready=!1,this._dbInfo=null,this._wrapLibraryMethodsWithReady(),this.setDriver(this._config.driver).catch(function(){})}return I.prototype.config=function(S){if((typeof S=="undefined"?"undefined":r(S))==="object"){if(this._ready)return new Error("Can't call config() after localforage has been used.");for(var x in S){if(x==="storeName"&&(S[x]=S[x].replace(/\W/g,"_")),x==="version"&&typeof S[x]!="number")return new Error("Database version must be a number.");this._config[x]=S[x]}return"driver"in S&&S.driver?this.setDriver(this._config.driver):!0}else return typeof S=="string"?this._config[S]:this._config},I.prototype.defineDriver=function(S,x,F){var G=new c(function(H,At){try{var lt=S._driver,ut=new Error("Custom driver not compliant; see https://mozilla.github.io/localForage/#definedriver");if(!S._driver){At(ut);return}for(var pt=JA.concat("_initStorage"),Et=0,xt=pt.length;Et<xt;Et++){var Xt=pt[Et],ee=!Cf(Qa,Xt);if((ee||S[Xt])&&typeof S[Xt]!="function"){At(ut);return}}var Se=function(){for(var yr=function(Qf){return function(){var vf=new Error("Method "+Qf+" is not implemented by the current driver"),Hu=c.reject(vf);return h(Hu,arguments[arguments.length-1]),Hu}},zA=0,Uf=Qa.length;zA<Uf;zA++){var jA=Qa[zA];S[jA]||(S[jA]=yr(jA))}};Se();var ye=function(yr){Or[lt]&&console.info("Redefining LocalForage driver: "+lt),Or[lt]=S,ju[lt]=yr,H()};"_support"in S?S._support&&typeof S._support=="function"?S._support().then(ye,At):ye(!!S._support):ye(!0)}catch(mn){At(mn)}});return q(G,x,F),G},I.prototype.driver=function(){return this._driver||null},I.prototype.getDriver=function(S,x,F){var G=Or[S]?c.resolve(Or[S]):c.reject(new Error("Driver not found."));return q(G,x,F),G},I.prototype.getSerializer=function(S){var x=c.resolve(te);return q(x,S),x},I.prototype.ready=function(S){var x=this,F=x._driverSet.then(function(){return x._ready===null&&(x._ready=x._initDriver()),x._ready});return q(F,S,S),F},I.prototype.setDriver=function(S,x,F){var G=this;zu(S)||(S=[S]);var H=this._getSupportedDrivers(S);function At(){G._config.driver=G.driver()}function lt(Et){return G._extend(Et),At(),G._ready=G._initStorage(G._config),G._ready}function ut(Et){return function(){var xt=0;function Xt(){for(;xt<Et.length;){var ee=Et[xt];return xt++,G._dbInfo=null,G._ready=null,G.getDriver(ee).then(lt).catch(Xt)}At();var Se=new Error("No available storage method found.");return G._driverSet=c.reject(Se),G._driverSet}return Xt()}}var pt=this._driverSet!==null?this._driverSet.catch(function(){return c.resolve()}):c.resolve();return this._driverSet=pt.then(function(){var Et=H[0];return G._dbInfo=null,G._ready=null,G.getDriver(Et).then(function(xt){G._driver=xt._driver,At(),G._wrapLibraryMethodsWithReady(),G._initDriver=ut(H)})}).catch(function(){At();var Et=new Error("No available storage method found.");return G._driverSet=c.reject(Et),G._driverSet}),q(this._driverSet,x,F),this._driverSet},I.prototype.supports=function(S){return!!ju[S]},I.prototype._extend=function(S){LA(this,S)},I.prototype._getSupportedDrivers=function(S){for(var x=[],F=0,G=S.length;F<G;F++){var H=S[F];this.supports(H)&&x.push(H)}return x},I.prototype._wrapLibraryMethodsWithReady=function(){for(var S=0,x=JA.length;S<x;S++)kf(this,JA[S])},I.prototype.createInstance=function(S){return new I(S)},I}(),bf=new Tf;s.exports=bf},{"3":3}]},{},[4])(4)})})(ug);var Ki=ug.exports;let ro;const DS=new Uint8Array(16);function gS(){if(!ro&&(ro=typeof crypto!="undefined"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!ro))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return ro(DS)}const Ge=[];for(let e=0;e<256;++e)Ge.push((e+256).toString(16).slice(1));function fS(e,t=0){return(Ge[e[t+0]]+Ge[e[t+1]]+Ge[e[t+2]]+Ge[e[t+3]]+"-"+Ge[e[t+4]]+Ge[e[t+5]]+"-"+Ge[e[t+6]]+Ge[e[t+7]]+"-"+Ge[e[t+8]]+Ge[e[t+9]]+"-"+Ge[e[t+10]]+Ge[e[t+11]]+Ge[e[t+12]]+Ge[e[t+13]]+Ge[e[t+14]]+Ge[e[t+15]]).toLowerCase()}const mS=typeof crypto!="undefined"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);var bh={randomUUID:mS};function NS(e,t,n){if(bh.randomUUID&&!t&&!e)return bh.randomUUID();e=e||{};const s=e.random||(e.rng||gS)();if(s[6]=s[6]&15|64,s[8]=s[8]&63|128,t){n=n||0;for(let i=0;i<16;++i)t[n+i]=s[i];return t}return fS(s)}const VS="po33_web_store";Ki.config({driver:[Ki.INDEXEDDB,Ki.WEBSQL,Ki.LOCALSTORAGE],name:VS});const MS=(e,t)=>(e.uuid=t||NS(),e),Ru=e=>{const t=async l=>{try{return await Ki.setItem(e,JSON.stringify(l)),!0}catch(u){if(yS(u))return!1;throw u}},n=async()=>{try{const l=await Ki.getItem(e);return JSON.parse(l)}catch{return null}},s=async(l,u,c)=>{const h=wt(nt({},MS(c,u)),{name:l,timestamp:Date.now()}),g=[...(await o()).filter(({uuid:d})=>d!==u),h];return t(g)},i=async l=>{const c=(await o()).filter(h=>h.uuid!==l);return t(c)},r=async l=>(await o()).find(h=>h.uuid===l)||null,a=async()=>(await o()).map(u=>u.name),o=async()=>await n()||[],A=async()=>(await n()||[]).filter(c=>c.hasOwnProperty("timestamp")).sort((c,h)=>(h==null?void 0:h.timestamp)-(c==null?void 0:c.timestamp))[0]||null;return()=>({saveItem:s,deleteItem:i,fetchItem:r,fetchAllItemNames:a,fetchAllItems:o,fetchLatestItem:A})},OS="Session data exceeds this browsers capicty. Try removing some sounds.",yS=e=>{const t="exceeded the quota";return e.message.search(t)>-1?(qn.error(OS),!0):!1},WS=Ru("po33_web_sessions"),ES=Ru("po33_web_midi_maps"),PS=Ru("po33_web_key_maps");var IS='{"GlobalPatternManager":"{\\"patterns\\":{\\"PAD_1_DOWN\\":{\\"id\\":\\"PAD_1_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_9_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_14_DOWN\\",\\"pitch\\":5,\\"volume\\":-9,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0},\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_5_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":5,\\"volume\\":-9,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_14_DOWN\\":{\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_4_DOWN\\",\\"pitch\\":5,\\"volume\\":-9,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_2_DOWN\\":{\\"id\\":\\"PAD_2_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_5_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_6_DOWN\\",\\"pitch\\":5,\\"volume\\":-9,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_15_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_3_DOWN\\":{\\"id\\":\\"PAD_3_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_4_DOWN\\":{\\"id\\":\\"PAD_4_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_5_DOWN\\":{\\"id\\":\\"PAD_5_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_9_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0},\\"PAD_12_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{\\"PAD_12_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_14_DOWN\\",\\"pitch\\":5,\\"volume\\":-9,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0},\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_5_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0},\\"PAD_12_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{\\"PAD_12_DOWN\\":{\\"padId\\":\\"PAD_4_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_8_DOWN\\":{\\"PAD_12_DOWN\\":{\\"padId\\":\\"PAD_11_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_9_DOWN\\":{\\"PAD_12_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{\\"PAD_12_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_12_DOWN\\":{\\"PAD_12_DOWN\\":{\\"padId\\":\\"PAD_11_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_13_DOWN\\":{\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":5,\\"volume\\":-9,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0},\\"PAD_12_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_14_DOWN\\":{\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_4_DOWN\\",\\"pitch\\":5,\\"volume\\":-9,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_15_DOWN\\":{\\"PAD_12_DOWN\\":{\\"padId\\":\\"PAD_13_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_16_DOWN\\":{\\"PAD_12_DOWN\\":{\\"padId\\":\\"PAD_10_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}}}},\\"PAD_6_DOWN\\":{\\"id\\":\\"PAD_6_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_5_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_2_DOWN\\":{\\"PAD_12_DOWN\\":{\\"padId\\":\\"PAD_10_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_3_DOWN\\":{\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_6_DOWN\\",\\"pitch\\":5,\\"volume\\":-9,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0},\\"PAD_12_DOWN\\":{\\"padId\\":\\"PAD_10_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_4_DOWN\\":{\\"PAD_12_DOWN\\":{\\"padId\\":\\"PAD_11_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_5_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_15_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_6_DOWN\\":{\\"PAD_12_DOWN\\":{\\"padId\\":\\"PAD_10_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_7_DOWN\\":{\\"PAD_12_DOWN\\":{\\"padId\\":\\"PAD_10_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_8_DOWN\\":{\\"PAD_12_DOWN\\":{\\"padId\\":\\"PAD_11_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_9_DOWN\\":{\\"PAD_12_DOWN\\":{\\"padId\\":\\"PAD_16_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{\\"PAD_12_DOWN\\":{\\"padId\\":\\"PAD_16_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_12_DOWN\\":{\\"PAD_12_DOWN\\":{\\"padId\\":\\"PAD_11_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{\\"PAD_12_DOWN\\":{\\"padId\\":\\"PAD_16_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_15_DOWN\\":{\\"PAD_12_DOWN\\":{\\"padId\\":\\"PAD_11_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_16_DOWN\\":{}}},\\"PAD_7_DOWN\\":{\\"id\\":\\"PAD_7_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_8_DOWN\\":{\\"id\\":\\"PAD_8_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_9_DOWN\\":{\\"id\\":\\"PAD_9_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{\\"PAD_4_DOWN\\":{\\"padId\\":\\"PAD_9_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_10_DOWN\\":{\\"id\\":\\"PAD_10_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_11_DOWN\\":{\\"id\\":\\"PAD_11_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_12_DOWN\\":{\\"id\\":\\"PAD_12_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_13_DOWN\\":{\\"id\\":\\"PAD_13_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_14_DOWN\\":{\\"id\\":\\"PAD_14_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_15_DOWN\\":{\\"id\\":\\"PAD_15_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_16_DOWN\\":{\\"id\\":\\"PAD_16_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}}},\\"currentPattern\\":{\\"id\\":\\"PAD_1_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_9_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_14_DOWN\\",\\"pitch\\":5,\\"volume\\":-9,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0},\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_5_DOWN\\",\\"pitch\\":0,\\"volume\\":0,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":5,\\"volume\\":-9,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_14_DOWN\\":{\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_4_DOWN\\",\\"pitch\\":5,\\"volume\\":-9,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"chain\\":[\\"PAD_1_DOWN\\",\\"PAD_2_DOWN\\",\\"PAD_5_DOWN\\",\\"PAD_6_DOWN\\",\\"PAD_5_DOWN\\",\\"PAD_6_DOWN\\",\\"PAD_5_DOWN\\",\\"PAD_6_DOWN\\",\\"PAD_5_DOWN\\",\\"PAD_2_DOWN\\"],\\"writeModeEnabled\\":false,\\"writeLiveMode\\":false,\\"writeFxLiveMode\\":false,\\"patternMode\\":false,\\"newSequence\\":false}","GlobalPatternPlayer":"{\\"defaultBpm\\":{\\"name\\":\\"HIP HOP\\",\\"value\\":80},\\"bpm\\":{\\"name\\":\\"HIP HOP\\",\\"value\\":80},\\"swing\\":500,\\"isPlaying\\":false,\\"currentPatternStep\\":1,\\"currentChainStep\\":1,\\"loadNewChainOnNextChainStep\\":false}","GlobalMasterFx":"{\\"effects\\":{\\"PAD_1_DOWN\\":{\\"name\\":\\"PAD_1_DOWN - None\\"},\\"PAD_2_DOWN\\":{\\"name\\":\\"PAD_2_DOWN - None\\"},\\"PAD_3_DOWN\\":{\\"name\\":\\"PAD_3_DOWN - None\\"},\\"PAD_4_DOWN\\":{\\"name\\":\\"PAD_4_DOWN - None\\"},\\"PAD_5_DOWN\\":{\\"name\\":\\"PAD_5_DOWN - None\\"},\\"PAD_6_DOWN\\":{\\"name\\":\\"PAD_6_DOWN - None\\"},\\"PAD_7_DOWN\\":{\\"name\\":\\"PAD_7_DOWN - None\\"},\\"PAD_8_DOWN\\":{\\"name\\":\\"PAD_8_DOWN - None\\"},\\"PAD_9_DOWN\\":{\\"name\\":\\"PAD_9_DOWN - None\\"},\\"PAD_10_DOWN\\":{\\"name\\":\\"PAD_10_DOWN - None\\"},\\"PAD_11_DOWN\\":{\\"name\\":\\"PAD_11_DOWN - None\\"},\\"PAD_12_DOWN\\":{\\"name\\":\\"PAD_12_DOWN - None\\"},\\"PAD_13_DOWN\\":{\\"name\\":\\"PAD_13_DOWN - None\\"},\\"PAD_14_DOWN\\":{\\"name\\":\\"PAD_14_DOWN - None\\"},\\"PAD_15_DOWN\\":{\\"name\\":\\"PAD_15_DOWN - None\\"},\\"PAD_16_DOWN\\":{\\"name\\":\\"PAD_16_DOWN - None\\"}},\\"fxMode\\":false,\\"liveFxPadId\\":null,\\"patterns\\":{\\"PAD_1_DOWN\\":{\\"id\\":\\"PAD_1_DOWN\\",\\"steps\\":{}},\\"PAD_2_DOWN\\":{\\"id\\":\\"PAD_2_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_2_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_3_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_4_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_5_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_6_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_7_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_8_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_9_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_10_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_11_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_12_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_13_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_14_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_15_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_16_DOWN\\":\\"PAD_16_DOWN\\"}},\\"PAD_3_DOWN\\":{\\"id\\":\\"PAD_3_DOWN\\",\\"steps\\":{}},\\"PAD_4_DOWN\\":{\\"id\\":\\"PAD_4_DOWN\\",\\"steps\\":{}},\\"PAD_5_DOWN\\":{\\"id\\":\\"PAD_5_DOWN\\",\\"steps\\":{}},\\"PAD_6_DOWN\\":{\\"id\\":\\"PAD_6_DOWN\\",\\"steps\\":{}},\\"PAD_7_DOWN\\":{\\"id\\":\\"PAD_7_DOWN\\",\\"steps\\":{}},\\"PAD_8_DOWN\\":{\\"id\\":\\"PAD_8_DOWN\\",\\"steps\\":{}},\\"PAD_9_DOWN\\":{\\"id\\":\\"PAD_9_DOWN\\",\\"steps\\":{}},\\"PAD_10_DOWN\\":{\\"id\\":\\"PAD_10_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_2_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_3_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_4_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_5_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_6_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_7_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_8_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_9_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_10_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_11_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_12_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_13_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_14_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_15_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_16_DOWN\\":\\"PAD_16_DOWN\\"}},\\"PAD_11_DOWN\\":{\\"id\\":\\"PAD_11_DOWN\\",\\"steps\\":{}},\\"PAD_12_DOWN\\":{\\"id\\":\\"PAD_12_DOWN\\",\\"steps\\":{}},\\"PAD_13_DOWN\\":{\\"id\\":\\"PAD_13_DOWN\\",\\"steps\\":{}},\\"PAD_14_DOWN\\":{\\"id\\":\\"PAD_14_DOWN\\",\\"steps\\":{}},\\"PAD_15_DOWN\\":{\\"id\\":\\"PAD_15_DOWN\\",\\"steps\\":{}},\\"PAD_16_DOWN\\":{\\"id\\":\\"PAD_16_DOWN\\",\\"steps\\":{}}},\\"lastActiveFxPadId\\":\\"PAD_16_DOWN\\"}","GlobalSoundManager":"{\\"soundBanks\\":{\\"PAD_1_DOWN\\":{\\"sound\\":{\\"path\\":\\"blob:https://po33-and-me.onrender.com/5411756e-8571-448b-b839-ecabcff08389\\",\\"blobAsString\\":\\"data:audio/mpeg;base64,\\"},\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_1_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0,\\"endPercentage\\":1}},\\"PAD_2_DOWN\\":{\\"sound\\":{\\"path\\":\\"blob:https://po33-and-me.onrender.com/c418a087-8c27-4933-8e61-026795ff0704\\",\\"blobAsString\\":\\"data:audio/mpeg;base64,},\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_2_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0.10000000000000002,\\"endPercentage\\":1}},\\"PAD_3_DOWN\\":{\\"sound\\":{\\"path\\":\\"blob:https://po33-and-me.onrender.com/26b9149e-c914-400c-94de-454dd3703244\\",\\"blobAsString\\":\\"data:audio/mpeg;base64,\\"},\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_3_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0,\\"endPercentage\\":1}},\\"PAD_4_DOWN\\":{\\"sound\\":{\\"path\\":\\"blob:https://po33-and-me.onrender.com/65c3ed3a-0af4-44b1-bd83-9f5a36505f8d\\",\\"blobAsString\\":\\"data:audio/mpeg;base64,\\"},\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_4_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0,\\"endPercentage\\":1}},\\"PAD_5_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_5_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0,\\"endPercentage\\":1}},\\"PAD_6_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_6_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0,\\"endPercentage\\":1}},\\"PAD_7_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_7_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0,\\"endPercentage\\":1}},\\"PAD_8_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_8_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0,\\"endPercentage\\":1}},\\"PAD_9_DOWN\\":{\\"sound\\":{\\"path\\":\\"/assets/sounds/jazz_kit.mp3\\",\\"blobAsString\\":null},\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_9_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.0625},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.0625,\\"endPercentage\\":0.125},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.125,\\"endPercentage\\":0.1875},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.1875,\\"endPercentage\\":0.25},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.25,\\"endPercentage\\":0.3125},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3125,\\"endPercentage\\":0.375},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.375,\\"endPercentage\\":0.4375},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.4375,\\"endPercentage\\":0.5},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.5,\\"endPercentage\\":0.5625},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"},\\"PAD_10_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_10_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.0625},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.0625,\\"endPercentage\\":0.125},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.125,\\"endPercentage\\":0.1875},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.1875,\\"endPercentage\\":0.25},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.25,\\"endPercentage\\":0.3125},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3125,\\"endPercentage\\":0.375},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.375,\\"endPercentage\\":0.4375},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.4375,\\"endPercentage\\":0.5},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.5,\\"endPercentage\\":0.5625},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"},\\"PAD_11_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_11_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.0625},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.0625,\\"endPercentage\\":0.125},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.125,\\"endPercentage\\":0.1875},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.1875,\\"endPercentage\\":0.25},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.25,\\"endPercentage\\":0.3125},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3125,\\"endPercentage\\":0.375},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.375,\\"endPercentage\\":0.4375},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.4375,\\"endPercentage\\":0.5},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.5,\\"endPercentage\\":0.5625},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"},\\"PAD_12_DOWN\\":{\\"sound\\":{\\"path\\":\\"blob:https://po33-and-me.onrender.com/65c3ed3a-0af4-44b1-bd83-9f5a36505f8d\\",\\"blobAsString\\":\\"data:audio/mpeg;base64,\\"},\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_12_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.0625},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.0625,\\"endPercentage\\":0.125},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.125,\\"endPercentage\\":0.1875},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.1875,\\"endPercentage\\":0.25},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.25,\\"endPercentage\\":0.3125},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3125,\\"endPercentage\\":0.375},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.375,\\"endPercentage\\":0.4375},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.4375,\\"endPercentage\\":0.5},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.5,\\"endPercentage\\":0.5625},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"},\\"PAD_13_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_13_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.0625},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.0625,\\"endPercentage\\":0.125},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.125,\\"endPercentage\\":0.1875},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.1875,\\"endPercentage\\":0.25},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.25,\\"endPercentage\\":0.3125},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3125,\\"endPercentage\\":0.375},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.375,\\"endPercentage\\":0.4375},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.4375,\\"endPercentage\\":0.5},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.5,\\"endPercentage\\":0.5625},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"},\\"PAD_14_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_14_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.0625},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.0625,\\"endPercentage\\":0.125},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.125,\\"endPercentage\\":0.1875},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.1875,\\"endPercentage\\":0.25},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.25,\\"endPercentage\\":0.3125},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3125,\\"endPercentage\\":0.375},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.375,\\"endPercentage\\":0.4375},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.4375,\\"endPercentage\\":0.5},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.5,\\"endPercentage\\":0.5625},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"},\\"PAD_15_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_15_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.0625},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.0625,\\"endPercentage\\":0.125},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.125,\\"endPercentage\\":0.1875},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.1875,\\"endPercentage\\":0.25},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.25,\\"endPercentage\\":0.3125},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3125,\\"endPercentage\\":0.375},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.375,\\"endPercentage\\":0.4375},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.4375,\\"endPercentage\\":0.5},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.5,\\"endPercentage\\":0.5625},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"},\\"PAD_16_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_16_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.0625},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.0625,\\"endPercentage\\":0.125},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.125,\\"endPercentage\\":0.1875},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.1875,\\"endPercentage\\":0.25},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.25,\\"endPercentage\\":0.3125},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3125,\\"endPercentage\\":0.375},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.375,\\"endPercentage\\":0.4375},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.4375,\\"endPercentage\\":0.5},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.5,\\"endPercentage\\":0.5625},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"}},\\"currentSoundBank\\":{\\"sound\\":{\\"path\\":\\"blob:https://po33-and-me.onrender.com/65c3ed3a-0af4-44b1-bd83-9f5a36505f8d\\",\\"blobAsString\\":\\"data:audio/mpeg;base64,\\"},\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_12_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.0625},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.0625,\\"endPercentage\\":0.125},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.125,\\"endPercentage\\":0.1875},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.1875,\\"endPercentage\\":0.25},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.25,\\"endPercentage\\":0.3125},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3125,\\"endPercentage\\":0.375},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.375,\\"endPercentage\\":0.4375},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.4375,\\"endPercentage\\":0.5},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.5,\\"endPercentage\\":0.5625},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"},\\"currentAudioInputDevice\\":\\"hard_drive\\",\\"lastSoundTriggeredByPadPress\\":\\"PAD_11_DOWN\\",\\"masterVolume\\":8}","uuid":"cc6e9736-cf44-40ce-a96c-7ef2d11335f0","name":"11/26/2022"}',SS='{"GlobalPatternManager":"{\\"patterns\\":{\\"PAD_1_DOWN\\":{\\"id\\":\\"PAD_1_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":5,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":5,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":6,\\"volume\\":5,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":6,\\"volume\\":5,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_16_DOWN\\":{}}},\\"PAD_2_DOWN\\":{\\"id\\":\\"PAD_2_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":5,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":5,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":6,\\"volume\\":5,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":6,\\"volume\\":5,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_16_DOWN\\":{}}},\\"PAD_3_DOWN\\":{\\"id\\":\\"PAD_3_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_4_DOWN\\":{\\"id\\":\\"PAD_4_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_5_DOWN\\":{\\"id\\":\\"PAD_5_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_10_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0},\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-2,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-7,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_5_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-1,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_10_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-2,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_8_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_8_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0}},\\"PAD_9_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-4,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-7,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_5_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-6,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-7,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_16_DOWN\\":{\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0},\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_8_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0}}}},\\"PAD_6_DOWN\\":{\\"id\\":\\"PAD_6_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_10_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0},\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-5,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-7,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_5_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-2,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_10_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-1,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-2,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-7,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_5_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-4,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_7_DOWN\\",\\"pitch\\":10,\\"volume\\":-5,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_16_DOWN\\":{\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0}}}},\\"PAD_7_DOWN\\":{\\"id\\":\\"PAD_7_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_10_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0},\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-5,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-7,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_5_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-2,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_10_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-1,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-2,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-7,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-4,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_7_DOWN\\",\\"pitch\\":10,\\"volume\\":-5,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0},\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_9_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0}},\\"PAD_16_DOWN\\":{\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0},\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_9_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0}}}},\\"PAD_8_DOWN\\":{\\"id\\":\\"PAD_8_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_9_DOWN\\":{\\"id\\":\\"PAD_9_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_10_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0},\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-2,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-7,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_5_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-1,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_10_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-2,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_8_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_8_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0}},\\"PAD_9_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-4,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-7,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_5_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-6,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-7,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_16_DOWN\\":{\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0},\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_8_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0}}}},\\"PAD_10_DOWN\\":{\\"id\\":\\"PAD_10_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_10_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0},\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-5,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-7,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_5_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-2,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_10_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-1,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-2,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-7,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_5_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-4,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_7_DOWN\\",\\"pitch\\":10,\\"volume\\":-5,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_16_DOWN\\":{\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0}}}},\\"PAD_11_DOWN\\":{\\"id\\":\\"PAD_11_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_12_DOWN\\":{\\"id\\":\\"PAD_12_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_13_DOWN\\":{\\"id\\":\\"PAD_13_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_10_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0},\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-2,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-7,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_5_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-1,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_10_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-2,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_8_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_8_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0}},\\"PAD_9_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-4,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-7,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_5_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-6,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-7,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_16_DOWN\\":{\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0},\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_8_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0}}}},\\"PAD_14_DOWN\\":{\\"id\\":\\"PAD_14_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_10_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0},\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-5,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-7,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_5_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-2,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_10_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-1,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-2,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-7,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_5_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-4,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_7_DOWN\\",\\"pitch\\":10,\\"volume\\":-5,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_16_DOWN\\":{\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0}}}},\\"PAD_15_DOWN\\":{\\"id\\":\\"PAD_15_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_10_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0},\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-2,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-7,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_5_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-1,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_10_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-2,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_8_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_8_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0}},\\"PAD_9_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-4,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-7,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_5_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-6,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-7,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_16_DOWN\\":{\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0},\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_8_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0}}}},\\"PAD_16_DOWN\\":{\\"id\\":\\"PAD_16_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_10_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0},\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-5,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-7,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_5_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-2,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_10_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-1,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-2,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-7,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_13_DOWN\\":{\\"padId\\":\\"PAD_5_DOWN\\",\\"pitch\\":2,\\"volume\\":9,\\"lowpassCutoff\\":4551,\\"highpassCutoff\\":0},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":10,\\"volume\\":-4,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":6,\\"volume\\":8,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":870},\\"PAD_2_DOWN\\":{\\"padId\\":\\"PAD_7_DOWN\\",\\"pitch\\":10,\\"volume\\":-5,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_16_DOWN\\":{\\"PAD_1_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":8,\\"volume\\":-5,\\"lowpassCutoff\\":512,\\"highpassCutoff\\":0}}}}},\\"currentPattern\\":{\\"id\\":\\"PAD_1_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":5,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_1_DOWN\\",\\"pitch\\":6,\\"volume\\":5,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_2_DOWN\\",\\"pitch\\":6,\\"volume\\":5,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{\\"PAD_3_DOWN\\":{\\"padId\\":\\"PAD_3_DOWN\\",\\"pitch\\":6,\\"volume\\":5,\\"lowpassCutoff\\":20000,\\"highpassCutoff\\":0}},\\"PAD_16_DOWN\\":{}}},\\"chain\\":[\\"PAD_1_DOWN\\",\\"PAD_2_DOWN\\",\\"PAD_5_DOWN\\",\\"PAD_6_DOWN\\",\\"PAD_5_DOWN\\",\\"PAD_7_DOWN\\",\\"PAD_9_DOWN\\",\\"PAD_10_DOWN\\",\\"PAD_9_DOWN\\",\\"PAD_10_DOWN\\",\\"PAD_9_DOWN\\",\\"PAD_10_DOWN\\",\\"PAD_9_DOWN\\",\\"PAD_13_DOWN\\",\\"PAD_9_DOWN\\",\\"PAD_10_DOWN\\",\\"PAD_9_DOWN\\",\\"PAD_15_DOWN\\",\\"PAD_9_DOWN\\",\\"PAD_10_DOWN\\",\\"PAD_9_DOWN\\",\\"PAD_16_DOWN\\"],\\"writeModeEnabled\\":false,\\"writeLiveMode\\":false,\\"writeFxLiveMode\\":false,\\"patternMode\\":false,\\"newSequence\\":false}","GlobalPatternPlayer":"{\\"defaultBpm\\":{\\"name\\":\\"HIP HOP\\",\\"value\\":80},\\"bpm\\":{\\"name\\":\\"HIP HOP\\",\\"value\\":78},\\"swing\\":508,\\"isPlaying\\":false,\\"currentPatternStep\\":1,\\"currentChainStep\\":1,\\"loadNewChainOnNextChainStep\\":false}","GlobalMasterFx":"{\\"effects\\":{\\"PAD_1_DOWN\\":{\\"name\\":\\"The High Road\\",\\"shortName\\":\\"hi f\\",\\"active\\":false},\\"PAD_2_DOWN\\":{\\"name\\":\\"Auto Filter\\",\\"shortName\\":\\"auto f\\",\\"active\\":false},\\"PAD_3_DOWN\\":{\\"name\\":\\"The Low Road\\",\\"shortName\\":\\"lo f\\",\\"active\\":false},\\"PAD_4_DOWN\\":{\\"name\\":\\"Auto Filter\\",\\"shortName\\":\\"auto f\\",\\"active\\":false},\\"PAD_5_DOWN\\":{\\"name\\":\\"Tremelo\\",\\"shortName\\":\\"tremo\\",\\"active\\":false},\\"PAD_6_DOWN\\":{\\"name\\":\\"Taurus Chorus\\",\\"shortName\\":\\"chr t\\",\\"active\\":false},\\"PAD_7_DOWN\\":{\\"name\\":\\"Aquarius Chorus\\",\\"shortName\\":\\"chr a\\",\\"active\\":false},\\"PAD_8_DOWN\\":{\\"name\\":\\"Gemini Chorus\\",\\"shortName\\":\\"chr g\\",\\"active\\":false},\\"PAD_9_DOWN\\":{\\"name\\":\\"16 Looper\\",\\"shortName\\":\\"L 16\\",\\"active\\":false},\\"PAD_10_DOWN\\":{\\"name\\":\\"6 Looper\\",\\"shortName\\":\\"L 6\\",\\"active\\":false},\\"PAD_11_DOWN\\":{\\"name\\":\\"Distort\\",\\"shortName\\":\\"dist\\",\\"active\\":false},\\"PAD_12_DOWN\\":{\\"name\\":\\"Reverse\\",\\"shortName\\":\\"rev\\",\\"active\\":false},\\"PAD_13_DOWN\\":{\\"name\\":\\"Stutter 8\\",\\"shortName\\":\\"St8\\",\\"active\\":false},\\"PAD_14_DOWN\\":{\\"name\\":\\"Stutter 6\\",\\"shortName\\":\\"St6\\",\\"active\\":false},\\"PAD_15_DOWN\\":{\\"name\\":\\"Stutter 3\\",\\"shortName\\":\\"St3\\",\\"active\\":false},\\"PAD_16_DOWN\\":{\\"name\\":\\"No Effect\\",\\"shortName\\":\\"non\\",\\"active\\":false}},\\"fxMode\\":false,\\"liveFxPadIds\\":[],\\"patterns\\":{\\"PAD_1_DOWN\\":{\\"id\\":\\"PAD_1_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":\\"PAD_8_DOWN\\",\\"PAD_2_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_3_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_4_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_5_DOWN\\":\\"PAD_8_DOWN\\",\\"PAD_6_DOWN\\":\\"PAD_8_DOWN\\",\\"PAD_7_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_8_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_9_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_10_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_11_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_12_DOWN\\":\\"PAD_8_DOWN\\",\\"PAD_13_DOWN\\":\\"PAD_8_DOWN\\",\\"PAD_14_DOWN\\":\\"PAD_8_DOWN\\",\\"PAD_15_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_16_DOWN\\":\\"PAD_16_DOWN\\"}},\\"PAD_2_DOWN\\":{\\"id\\":\\"PAD_2_DOWN\\",\\"steps\\":{}},\\"PAD_3_DOWN\\":{\\"id\\":\\"PAD_3_DOWN\\",\\"steps\\":{}},\\"PAD_4_DOWN\\":{\\"id\\":\\"PAD_4_DOWN\\",\\"steps\\":{}},\\"PAD_5_DOWN\\":{\\"id\\":\\"PAD_5_DOWN\\",\\"steps\\":{}},\\"PAD_6_DOWN\\":{\\"id\\":\\"PAD_6_DOWN\\",\\"steps\\":{}},\\"PAD_7_DOWN\\":{\\"id\\":\\"PAD_7_DOWN\\",\\"steps\\":{}},\\"PAD_8_DOWN\\":{\\"id\\":\\"PAD_8_DOWN\\",\\"steps\\":{}},\\"PAD_9_DOWN\\":{\\"id\\":\\"PAD_9_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":\\"PAD_11_DOWN\\",\\"PAD_2_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_3_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_4_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_5_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_6_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_7_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_8_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_9_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_10_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_11_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_12_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_13_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_14_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_15_DOWN\\":\\"PAD_11_DOWN\\",\\"PAD_16_DOWN\\":\\"PAD_11_DOWN\\"}},\\"PAD_10_DOWN\\":{\\"id\\":\\"PAD_10_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":\\"PAD_11_DOWN\\",\\"PAD_2_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_3_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_4_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_5_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_6_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_7_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_8_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_9_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_10_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_11_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_12_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_13_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_14_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_15_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_16_DOWN\\":\\"PAD_11_DOWN\\"}},\\"PAD_11_DOWN\\":{\\"id\\":\\"PAD_11_DOWN\\",\\"steps\\":{}},\\"PAD_12_DOWN\\":{\\"id\\":\\"PAD_12_DOWN\\",\\"steps\\":{}},\\"PAD_13_DOWN\\":{\\"id\\":\\"PAD_13_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":\\"PAD_1_DOWN\\",\\"PAD_2_DOWN\\":\\"PAD_1_DOWN\\",\\"PAD_3_DOWN\\":\\"PAD_1_DOWN\\",\\"PAD_4_DOWN\\":\\"PAD_1_DOWN\\",\\"PAD_5_DOWN\\":\\"PAD_1_DOWN\\",\\"PAD_6_DOWN\\":\\"PAD_1_DOWN\\",\\"PAD_7_DOWN\\":\\"PAD_1_DOWN\\",\\"PAD_8_DOWN\\":\\"PAD_1_DOWN\\",\\"PAD_9_DOWN\\":\\"PAD_1_DOWN\\",\\"PAD_10_DOWN\\":\\"PAD_1_DOWN\\",\\"PAD_11_DOWN\\":\\"PAD_1_DOWN\\",\\"PAD_12_DOWN\\":\\"PAD_1_DOWN\\",\\"PAD_13_DOWN\\":\\"PAD_1_DOWN\\",\\"PAD_14_DOWN\\":\\"PAD_1_DOWN\\",\\"PAD_15_DOWN\\":\\"PAD_1_DOWN\\",\\"PAD_16_DOWN\\":\\"PAD_1_DOWN\\"}},\\"PAD_14_DOWN\\":{\\"id\\":\\"PAD_14_DOWN\\",\\"steps\\":{}},\\"PAD_15_DOWN\\":{\\"id\\":\\"PAD_15_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":\\"PAD_16_DOWN\\",\\"PAD_2_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_3_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_4_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_5_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_6_DOWN\\":\\"PAD_12_DOWN\\",\\"PAD_7_DOWN\\":\\"PAD_12_DOWN\\",\\"PAD_8_DOWN\\":\\"PAD_12_DOWN\\",\\"PAD_9_DOWN\\":\\"PAD_12_DOWN\\",\\"PAD_10_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_11_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_12_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_13_DOWN\\":\\"PAD_6_DOWN\\",\\"PAD_14_DOWN\\":\\"PAD_7_DOWN\\",\\"PAD_15_DOWN\\":\\"PAD_7_DOWN\\",\\"PAD_16_DOWN\\":\\"PAD_7_DOWN\\"}},\\"PAD_16_DOWN\\":{\\"id\\":\\"PAD_16_DOWN\\",\\"steps\\":{}}},\\"lastActiveFxPadId\\":\\"PAD_12_DOWN\\",\\"liveFxPadId\\":null}","GlobalSoundManager":"{\\"soundBanks\\":{\\"PAD_1_DOWN\\":{\\"sound\\":{\\"path\\":\\"blob:https://po33-and-me.onrender.com/e92c3b66-6431-4c17-a8c8-66c6ed3cbbf0\\",\\"blobAsString\\":\\"data:audio/mpeg;base64,\\"},\\"bankPitchInSemitones\\":8,\\"bankVolume\\":-5,\\"bankFilter\\":-6,\\"trimStep\\":0.005,\\"id\\":\\"PAD_1_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0,\\"endPercentage\\":1}},\\"PAD_2_DOWN\\":{\\"sound\\":{\\"path\\":\\"blob:https://po33-and-me.onrender.com/acc9152f-becc-4c28-b29e-96435c049f59\\",\\"blobAsString\\":\\"data:audio/mpeg;base64,\\"},\\"bankPitchInSemitones\\":10,\\"bankVolume\\":-7,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_2_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0.10000000000000002,\\"endPercentage\\":1}},\\"PAD_3_DOWN\\":{\\"sound\\":{\\"path\\":\\"blob:https://po33-and-me.onrender.com/3cda9e85-9c65-403a-a9f3-221ae13ef5e8\\",\\"blobAsString\\":\\"data:audio/mpeg;base64,\\"},\\"bankPitchInSemitones\\":6,\\"bankVolume\\":8,\\"bankFilter\\":4.5,\\"trimStep\\":0.005,\\"id\\":\\"PAD_3_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0,\\"endPercentage\\":1}},\\"PAD_4_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_4_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0,\\"endPercentage\\":1}},\\"PAD_5_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_5_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0,\\"endPercentage\\":1}},\\"PAD_6_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_6_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0,\\"endPercentage\\":1}},\\"PAD_7_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_7_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0,\\"endPercentage\\":1}},\\"PAD_8_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_8_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0,\\"endPercentage\\":1}},\\"PAD_9_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_9_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.0625},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.0625,\\"endPercentage\\":0.125},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.125,\\"endPercentage\\":0.1875},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.1875,\\"endPercentage\\":0.25},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.25,\\"endPercentage\\":0.3125},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3125,\\"endPercentage\\":0.375},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.375,\\"endPercentage\\":0.4375},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.4375,\\"endPercentage\\":0.5},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.5,\\"endPercentage\\":0.5625},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"},\\"PAD_10_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_10_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.0625},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.0625,\\"endPercentage\\":0.125},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.125,\\"endPercentage\\":0.1875},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.1875,\\"endPercentage\\":0.25},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.25,\\"endPercentage\\":0.3125},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3125,\\"endPercentage\\":0.375},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.375,\\"endPercentage\\":0.4375},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.4375,\\"endPercentage\\":0.5},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.5,\\"endPercentage\\":0.5625},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"},\\"PAD_11_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_11_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.0625},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.0625,\\"endPercentage\\":0.125},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.125,\\"endPercentage\\":0.1875},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.1875,\\"endPercentage\\":0.25},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.25,\\"endPercentage\\":0.3125},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3125,\\"endPercentage\\":0.375},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.375,\\"endPercentage\\":0.4375},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.4375,\\"endPercentage\\":0.5},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.5,\\"endPercentage\\":0.5625},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"},\\"PAD_12_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_12_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.0625},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.0625,\\"endPercentage\\":0.125},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.125,\\"endPercentage\\":0.1875},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.1875,\\"endPercentage\\":0.25},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.25,\\"endPercentage\\":0.3125},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3125,\\"endPercentage\\":0.375},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.375,\\"endPercentage\\":0.4375},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.4375,\\"endPercentage\\":0.5},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.5,\\"endPercentage\\":0.5625},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"},\\"PAD_13_DOWN\\":{\\"sound\\":{\\"path\\":\\"blob:https://po33-and-me.onrender.com/4f93cebd-e7bc-4067-8cef-ac258daea377\\",\\"blobAsString\\":\\"data:audio/mpeg;base64,\\"},\\"bankPitchInSemitones\\":2,\\"bankVolume\\":9,\\"bankFilter\\":-3.5,\\"trimStep\\":0.005,\\"id\\":\\"PAD_13_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.19250000000000012},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.032500000000000015,\\"endPercentage\\":0.13},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.17000000000000004,\\"endPercentage\\":0.26250000000000007},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.47250000000000025,\\"endPercentage\\":0.5500000000000003},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.28500000000000003,\\"endPercentage\\":0.4275000000000001},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3375,\\"endPercentage\\":0.5050000000000001},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.5050000000000001,\\"endPercentage\\":0.5825000000000001},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.6025000000000001,\\"endPercentage\\":0.7550000000000002},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.9050000000000004,\\"endPercentage\\":1},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"},\\"PAD_14_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_14_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.022500000000000013},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.032500000000000015,\\"endPercentage\\":0.09499999999999997},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.10499999999999998,\\"endPercentage\\":0.14249999999999996},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.13749999999999996,\\"endPercentage\\":0.16999999999999993},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.15999999999999992,\\"endPercentage\\":0.3225},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3325,\\"endPercentage\\":0.5000000000000001},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.5000000000000001,\\"endPercentage\\":0.6675000000000002},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.6675000000000002,\\"endPercentage\\":0.8350000000000003},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.9050000000000004,\\"endPercentage\\":1},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"},\\"PAD_15_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_15_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.0625},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.0625,\\"endPercentage\\":0.125},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.125,\\"endPercentage\\":0.1875},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.1875,\\"endPercentage\\":0.25},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.25,\\"endPercentage\\":0.3125},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3125,\\"endPercentage\\":0.375},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.375,\\"endPercentage\\":0.4375},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.4375,\\"endPercentage\\":0.5},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.5,\\"endPercentage\\":0.5625},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"},\\"PAD_16_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_16_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.0625},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.0625,\\"endPercentage\\":0.125},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.125,\\"endPercentage\\":0.1875},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.1875,\\"endPercentage\\":0.25},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.25,\\"endPercentage\\":0.3125},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3125,\\"endPercentage\\":0.375},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.375,\\"endPercentage\\":0.4375},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.4375,\\"endPercentage\\":0.5},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.5,\\"endPercentage\\":0.5625},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"}},\\"currentSoundBank\\":{\\"sound\\":{\\"path\\":\\"blob:https://po33-and-me.onrender.com/4f93cebd-e7bc-4067-8cef-ac258daea377\\",\\"blobAsString\\":\\"data:audio/mpeg;base64,\\"},\\"bankPitchInSemitones\\":2,\\"bankVolume\\":9,\\"bankFilter\\":-3.5,\\"trimStep\\":0.005,\\"id\\":\\"PAD_13_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.19250000000000012},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.032500000000000015,\\"endPercentage\\":0.13},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.17000000000000004,\\"endPercentage\\":0.26250000000000007},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.47250000000000025,\\"endPercentage\\":0.5500000000000003},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.28500000000000003,\\"endPercentage\\":0.4275000000000001},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3375,\\"endPercentage\\":0.5050000000000001},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.5050000000000001,\\"endPercentage\\":0.5825000000000001},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.6025000000000001,\\"endPercentage\\":0.7550000000000002},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.9050000000000004,\\"endPercentage\\":1},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"},\\"currentAudioInputDevice\\":\\"hard_drive\\",\\"lastSoundTriggeredByPadPress\\":\\"PAD_16_DOWN\\",\\"masterVolume\\":9,\\"liveLoopInterval\\":null}","uuid":"841739a4-0a06-4a55-b2b8-9de6454d8390","name":"demopoly","timestamp":1708891204938}',CS='{"GlobalPatternManager":"{\\"patterns\\":{\\"PAD_1_DOWN\\":{\\"id\\":\\"PAD_1_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_2_DOWN\\":{\\"id\\":\\"PAD_2_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_3_DOWN\\":{\\"id\\":\\"PAD_3_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_4_DOWN\\":{\\"id\\":\\"PAD_4_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_5_DOWN\\":{\\"id\\":\\"PAD_5_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_6_DOWN\\":{\\"id\\":\\"PAD_6_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_7_DOWN\\":{\\"id\\":\\"PAD_7_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_8_DOWN\\":{\\"id\\":\\"PAD_8_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_9_DOWN\\":{\\"id\\":\\"PAD_9_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_10_DOWN\\":{\\"id\\":\\"PAD_10_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_11_DOWN\\":{\\"id\\":\\"PAD_11_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_12_DOWN\\":{\\"id\\":\\"PAD_12_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_13_DOWN\\":{\\"id\\":\\"PAD_13_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_14_DOWN\\":{\\"id\\":\\"PAD_14_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_15_DOWN\\":{\\"id\\":\\"PAD_15_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"PAD_16_DOWN\\":{\\"id\\":\\"PAD_16_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}}},\\"currentPattern\\":{\\"id\\":\\"PAD_1_DOWN\\",\\"steps\\":{\\"PAD_1_DOWN\\":{},\\"PAD_2_DOWN\\":{},\\"PAD_3_DOWN\\":{},\\"PAD_4_DOWN\\":{},\\"PAD_5_DOWN\\":{},\\"PAD_6_DOWN\\":{},\\"PAD_7_DOWN\\":{},\\"PAD_8_DOWN\\":{},\\"PAD_9_DOWN\\":{},\\"PAD_10_DOWN\\":{},\\"PAD_11_DOWN\\":{},\\"PAD_12_DOWN\\":{},\\"PAD_13_DOWN\\":{},\\"PAD_14_DOWN\\":{},\\"PAD_15_DOWN\\":{},\\"PAD_16_DOWN\\":{}}},\\"chain\\":[\\"PAD_1_DOWN\\"],\\"writeModeEnabled\\":false,\\"writeLiveMode\\":false,\\"writeFxLiveMode\\":false,\\"patternMode\\":false,\\"newSequence\\":false}","GlobalPatternPlayer":"{\\"defaultBpm\\":{\\"name\\":\\"HIP HOP\\",\\"value\\":80},\\"bpm\\":{\\"name\\":\\"HIP HOP\\",\\"value\\":80},\\"swing\\":500,\\"isPlaying\\":false,\\"currentPatternStep\\":1,\\"currentChainStep\\":1,\\"loadNewChainOnNextChainStep\\":false}","GlobalMasterFx":"{\\"effects\\":{\\"PAD_1_DOWN\\":{\\"name\\":\\"No Effect\\",\\"shortName\\":\\"non\\",\\"active\\":false},\\"PAD_2_DOWN\\":{\\"name\\":\\"The High Road\\",\\"shortName\\":\\"hi f\\",\\"active\\":false},\\"PAD_3_DOWN\\":{\\"name\\":\\"The Low Road\\",\\"shortName\\":\\"lo f\\",\\"active\\":false},\\"PAD_4_DOWN\\":{\\"name\\":\\"Auto Filter\\",\\"shortName\\":\\"auto f\\",\\"active\\":false},\\"PAD_5_DOWN\\":{\\"name\\":\\"Tremelo\\",\\"shortName\\":\\"tremo\\",\\"active\\":false},\\"PAD_6_DOWN\\":{\\"name\\":\\"Taurus Chorus\\",\\"shortName\\":\\"chr t\\",\\"active\\":false},\\"PAD_7_DOWN\\":{\\"name\\":\\"Aquarius Chorus\\",\\"shortName\\":\\"chr a\\",\\"active\\":false},\\"PAD_8_DOWN\\":{\\"name\\":\\"Gemini Chorus\\",\\"shortName\\":\\"chr g\\",\\"active\\":false},\\"PAD_9_DOWN\\":{\\"name\\":\\"Reverse\\",\\"shortName\\":\\"rev\\",\\"active\\":false},\\"PAD_10_DOWN\\":{\\"name\\":\\"Delay\\",\\"shortName\\":\\"delay\\",\\"active\\":false},\\"PAD_11_DOWN\\":{\\"name\\":\\"Chubby Cheby\\",\\"shortName\\":\\"cheby\\",\\"active\\":false},\\"PAD_12_DOWN\\":{\\"name\\":\\"Distort\\",\\"shortName\\":\\"dist\\",\\"active\\":false},\\"PAD_13_DOWN\\":{\\"name\\":\\"Pitch Up\\",\\"shortName\\":\\"ocu\\",\\"active\\":false},\\"PAD_14_DOWN\\":{\\"name\\":\\"Pitch Down\\",\\"shortName\\":\\"ocd\\",\\"active\\":false},\\"PAD_15_DOWN\\":{\\"name\\":\\"No Effect\\",\\"shortName\\":\\"non\\",\\"active\\":false},\\"PAD_16_DOWN\\":{\\"name\\":\\"No Effect\\",\\"shortName\\":\\"non\\",\\"active\\":false}},\\"fxMode\\":false,\\"liveFxPadIds\\":[],\\"patterns\\":{\\"PAD_1_DOWN\\":{\\"id\\":\\"PAD_1_DOWN\\",\\"steps\\":{}},\\"PAD_2_DOWN\\":{\\"id\\":\\"PAD_2_DOWN\\",\\"steps\\":{}},\\"PAD_3_DOWN\\":{\\"id\\":\\"PAD_3_DOWN\\",\\"steps\\":{}},\\"PAD_4_DOWN\\":{\\"id\\":\\"PAD_4_DOWN\\",\\"steps\\":{}},\\"PAD_5_DOWN\\":{\\"id\\":\\"PAD_5_DOWN\\",\\"steps\\":{}},\\"PAD_6_DOWN\\":{\\"id\\":\\"PAD_6_DOWN\\",\\"steps\\":{}},\\"PAD_7_DOWN\\":{\\"id\\":\\"PAD_7_DOWN\\",\\"steps\\":{}},\\"PAD_8_DOWN\\":{\\"id\\":\\"PAD_8_DOWN\\",\\"steps\\":{}},\\"PAD_9_DOWN\\":{\\"id\\":\\"PAD_9_DOWN\\",\\"steps\\":{}},\\"PAD_10_DOWN\\":{\\"id\\":\\"PAD_10_DOWN\\",\\"steps\\":{}},\\"PAD_11_DOWN\\":{\\"id\\":\\"PAD_11_DOWN\\",\\"steps\\":{}},\\"PAD_12_DOWN\\":{\\"id\\":\\"PAD_12_DOWN\\",\\"steps\\":{}},\\"PAD_13_DOWN\\":{\\"id\\":\\"PAD_13_DOWN\\",\\"steps\\":{}},\\"PAD_14_DOWN\\":{\\"id\\":\\"PAD_14_DOWN\\",\\"steps\\":{}},\\"PAD_15_DOWN\\":{\\"id\\":\\"PAD_15_DOWN\\",\\"steps\\":{}},\\"PAD_16_DOWN\\":{\\"id\\":\\"PAD_16_DOWN\\",\\"steps\\":{}}},\\"lastActiveFxPadId\\":\\"PAD_16_DOWN\\",\\"liveFxPadId\\":null}","GlobalSoundManager":"{\\"soundBanks\\":{\\"PAD_1_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_1_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0,\\"endPercentage\\":1}},\\"PAD_2_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_2_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0.10000000000000002,\\"endPercentage\\":1}},\\"PAD_3_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_3_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0,\\"endPercentage\\":1}},\\"PAD_4_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_4_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0,\\"endPercentage\\":1}},\\"PAD_5_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_5_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0,\\"endPercentage\\":1}},\\"PAD_6_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_6_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0,\\"endPercentage\\":1}},\\"PAD_7_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_7_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0,\\"endPercentage\\":1}},\\"PAD_8_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_8_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0,\\"endPercentage\\":1}},\\"PAD_9_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_9_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.0625},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.0625,\\"endPercentage\\":0.125},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.125,\\"endPercentage\\":0.1875},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.1875,\\"endPercentage\\":0.25},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.25,\\"endPercentage\\":0.3125},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3125,\\"endPercentage\\":0.375},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.375,\\"endPercentage\\":0.4375},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.4375,\\"endPercentage\\":0.5},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.5,\\"endPercentage\\":0.5625},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"},\\"PAD_10_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_10_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.0625},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.0625,\\"endPercentage\\":0.125},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.125,\\"endPercentage\\":0.1875},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.1875,\\"endPercentage\\":0.25},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.25,\\"endPercentage\\":0.3125},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3125,\\"endPercentage\\":0.375},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.375,\\"endPercentage\\":0.4375},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.4375,\\"endPercentage\\":0.5},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.5,\\"endPercentage\\":0.5625},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"},\\"PAD_11_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_11_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.0625},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.0625,\\"endPercentage\\":0.125},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.125,\\"endPercentage\\":0.1875},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.1875,\\"endPercentage\\":0.25},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.25,\\"endPercentage\\":0.3125},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3125,\\"endPercentage\\":0.375},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.375,\\"endPercentage\\":0.4375},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.4375,\\"endPercentage\\":0.5},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.5,\\"endPercentage\\":0.5625},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"},\\"PAD_12_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_12_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.0625},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.0625,\\"endPercentage\\":0.125},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.125,\\"endPercentage\\":0.1875},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.1875,\\"endPercentage\\":0.25},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.25,\\"endPercentage\\":0.3125},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3125,\\"endPercentage\\":0.375},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.375,\\"endPercentage\\":0.4375},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.4375,\\"endPercentage\\":0.5},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.5,\\"endPercentage\\":0.5625},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"},\\"PAD_13_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_13_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.0625},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.0625,\\"endPercentage\\":0.125},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.125,\\"endPercentage\\":0.1875},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.1875,\\"endPercentage\\":0.25},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.25,\\"endPercentage\\":0.3125},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3125,\\"endPercentage\\":0.375},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.375,\\"endPercentage\\":0.4375},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.4375,\\"endPercentage\\":0.5},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.5,\\"endPercentage\\":0.5625},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"},\\"PAD_14_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_14_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.0625},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.0625,\\"endPercentage\\":0.125},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.125,\\"endPercentage\\":0.1875},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.1875,\\"endPercentage\\":0.25},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.25,\\"endPercentage\\":0.3125},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3125,\\"endPercentage\\":0.375},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.375,\\"endPercentage\\":0.4375},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.4375,\\"endPercentage\\":0.5},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.5,\\"endPercentage\\":0.5625},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"},\\"PAD_15_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_15_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.0625},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.0625,\\"endPercentage\\":0.125},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.125,\\"endPercentage\\":0.1875},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.1875,\\"endPercentage\\":0.25},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.25,\\"endPercentage\\":0.3125},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3125,\\"endPercentage\\":0.375},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.375,\\"endPercentage\\":0.4375},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.4375,\\"endPercentage\\":0.5},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.5,\\"endPercentage\\":0.5625},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"},\\"PAD_16_DOWN\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_16_DOWN\\",\\"trims\\":{\\"PAD_1_DOWN\\":{\\"startPercentage\\":0,\\"endPercentage\\":0.0625},\\"PAD_2_DOWN\\":{\\"startPercentage\\":0.0625,\\"endPercentage\\":0.125},\\"PAD_3_DOWN\\":{\\"startPercentage\\":0.125,\\"endPercentage\\":0.1875},\\"PAD_4_DOWN\\":{\\"startPercentage\\":0.1875,\\"endPercentage\\":0.25},\\"PAD_5_DOWN\\":{\\"startPercentage\\":0.25,\\"endPercentage\\":0.3125},\\"PAD_6_DOWN\\":{\\"startPercentage\\":0.3125,\\"endPercentage\\":0.375},\\"PAD_7_DOWN\\":{\\"startPercentage\\":0.375,\\"endPercentage\\":0.4375},\\"PAD_8_DOWN\\":{\\"startPercentage\\":0.4375,\\"endPercentage\\":0.5},\\"PAD_9_DOWN\\":{\\"startPercentage\\":0.5,\\"endPercentage\\":0.5625},\\"PAD_10_DOWN\\":{\\"startPercentage\\":0.5625,\\"endPercentage\\":0.625},\\"PAD_11_DOWN\\":{\\"startPercentage\\":0.625,\\"endPercentage\\":0.6875},\\"PAD_12_DOWN\\":{\\"startPercentage\\":0.6875,\\"endPercentage\\":0.75},\\"PAD_13_DOWN\\":{\\"startPercentage\\":0.75,\\"endPercentage\\":0.8125},\\"PAD_14_DOWN\\":{\\"startPercentage\\":0.8125,\\"endPercentage\\":0.875},\\"PAD_15_DOWN\\":{\\"startPercentage\\":0.875,\\"endPercentage\\":0.9375},\\"PAD_16_DOWN\\":{\\"startPercentage\\":0.9375,\\"endPercentage\\":1}},\\"bankType\\":\\"DrumSoundBank\\"}},\\"currentSoundBank\\":{\\"sound\\":null,\\"bankPitchInSemitones\\":0,\\"bankVolume\\":0,\\"bankFilter\\":0,\\"trimStep\\":0.005,\\"id\\":\\"PAD_1_DOWN\\",\\"bankType\\":\\"MelodicSoundBank\\",\\"trim\\":{\\"startPercentage\\":0,\\"endPercentage\\":1}},\\"currentAudioInputDevice\\":\\"hard_drive\\",\\"lastSoundTriggeredByPadPress\\":\\"PAD_4_DOWN\\",\\"masterVolume\\":8}","uuid":"28082991-6d2d-48de-96c3-c0bf8795748b","name":"empty","timestamp":1707687437716}',qg={one:IS,two:SS,empty:CS};const Pi=WS(),hg=()=>({save:wS,load:BS,fetchAsString:US,loadFromString:kS,loadLastSession:TS,loadEmptySession:bS,delete:QS,fetchAllItemNames:Pi.fetchAllItemNames,fetchAllItems:Pi.fetchAllItems}),wS=async(e,t)=>{const n={};pg.forEach(({key:i,instance:r})=>{n[i]=vS(r)}),await Pi.saveItem(e,t,n)&&qn.success("session saved")},BS=async e=>{const t=await Pi.fetchItem(e);GA(t)},kS=async e=>{try{const t=JSON.parse(e);GA(t)}catch{qn.error("sorry, we could not load this file")}},TS=async()=>{const t=await Pi.fetchLatestItem()||JSON.parse(qg.two);GA(t)},bS=async()=>{GA(JSON.parse(qg.empty))},US=async e=>{const t=await Pi.fetchItem(e);return JSON.stringify(t)},GA=e=>{pg.forEach(({key:t,displayName:n,instance:s})=>{const i=RS(e[t],s);i?s=i:qn.error(`could not load ${n} into this session`)}),qn.success("session loaded")},QS=async e=>{await Pi.deleteItem(e)},vS=e=>pS(e).serialize(),RS=(e,t)=>dS(t).deserialize(e),YS={key:"GlobalPatternManager",displayName:"patterns",instance:Lt},GS={key:"GlobalPatternPlayer",displayName:"patterns",instance:Xe},_S={key:"GlobalMasterFx",displayName:"fx patterns",instance:Fe},xS={key:"GlobalSoundManager",displayName:"sounds",instance:It},pg=[YS,GS,_S,xS];const FS={class:"session-loader-overlay"},ZS=qt("div",null,"Save",-1),KS={style:{display:"inline-block"}},JS=["placeholder"],LS={key:0},zS=_e(" Import \xA0 "),jS=qt("br",null,null,-1),HS={key:1},XS={class:"session-loader-overlay__load"},$S={style:{display:"inline-block"}},tC=["onClick"],eC=["onClick"],nC=["onClick"],sC=["onClick"],Yu=oe({props:{saver:null,title:null,overlayId:null},async setup(e){let t,n;const s=e,i=s.saver(),a=new Date().toLocaleDateString(),o=de(""),A=async(f=null,y=null)=>{const N=f||o.value||a;await i.save(N,y);const M=await i.fetchAllItems();d.value=M},l=async f=>{await i.load(f)},u=async f=>{await i.delete(f);const y=await i.fetchAllItems();d.value=y},c=async(f,y)=>{const N=await i.fetchAsString(y),M=new Blob([N],{type:"text/plain"}),P=URL.createObjectURL(M),O=document.createElement("a");O.href=P,O.download=`${f}.txt`,document.body.appendChild(O),O.click(),document.body.removeChild(O),URL.revokeObjectURL(P)},h=f=>{const N=f.target.files[0];if(N){const M=new FileReader;M.onload=P=>{var E;const O=(E=P==null?void 0:P.target)==null?void 0:E.result;i.loadFromString(O)},M.readAsText(N)}},q=()=>{var f;(f=document.getElementById("session-loader-overlay__button__import_input"))==null||f.click()},p="fetchAsString"in i,g="loadFromString"in i,d=de([]),D=([t,n]=J0(()=>i.fetchAllItems()),t=await t,n(),t);return d.value=D,(f,y)=>{const N=Gl("font-awesome-icon"),M=w0("auto-animate");return vt(),ve(RA,{"overlay-id":s.overlayId},{default:we(()=>[qt("div",FS,[qt("h1",null,Cs(s.title),1),ZS,qt("div",KS,[Mo(qt("input",{"onUpdate:modelValue":y[0]||(y[0]=P=>o.value=P),placeholder:Me(a),type:"text",name:"session-name",id:"session-name",class:"session-loader-overlay__input"},null,8,JS),[[dN,o.value]]),qt("button",{class:"session-loader-overlay__button session-loader-overlay__button--default session-loader-overlay__load__action_button",onClick:y[1]||(y[1]=()=>A())},[Ot(N,{icon:"fa-solid fa-floppy-disk"})]),qt("div",null,Cs(o.value),1)]),g?(vt(),ne("div",LS,[qt("button",{id:"session-loader-overlay__button__import_button",class:"session-loader-overlay__button session-loader-overlay__button--default session-loader-overlay__load__action_button",onClick:q},[zS,Ot(N,{icon:"fa-solid fa-upload"})]),qt("input",{id:"session-loader-overlay__button__import_input",style:{display:"none"},type:"file",accept:"txt/*",onChange:h},null,32)])):Jn("",!0),jS,d.value.length>0?(vt(),ne("div",HS,"Load")):Jn("",!0),Mo((vt(),ne("div",XS,[(vt(!0),ne($e,null,wc(d.value,({name:P,uuid:O})=>(vt(),ne("div",$S,[qt("button",{class:"session-loader-overlay__button session-loader-overlay__button--inverted session-loader-overlay__load__action_button",onClick:()=>u(O)},[Ot(N,{icon:"fa-solid fa-trash"})],8,tC),qt("button",{class:"session-loader-overlay__button session-loader-overlay__button--default session-loader-overlay__load__load_button",onClick:()=>l(O)},Cs(P),9,eC),qt("button",{class:"session-loader-overlay__button session-loader-overlay__button--default session-loader-overlay__load__action_button",onClick:()=>A(P,O)},[Ot(N,{icon:"fa-solid fa-floppy-disk"})],8,nC),p?(vt(),ne("button",{key:0,class:"session-loader-overlay__button session-loader-overlay__button--default session-loader-overlay__load__action_button",onClick:()=>c(P,O)},[Ot(N,{icon:"fa-solid fa-download"})],8,sC)):Jn("",!0)]))),256))])),[[M]])])]),_:1},8,["overlay-id"])}}}),iC=oe({setup(e){return(t,n)=>(vt(),ve(Yu,{saver:Me(hg),title:"Session Manager","overlay-id":"session-loader-overlay"},null,8,["saver"]))}});var rC=["C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B"],aC=function(e){if(isNaN(e)||e<0||e>127)return null;var t=rC[e%12],n=Math.floor(e/12)-1;return t+n};const lc=50;class oC{constructor(t){this.inputManager=t,this.midiInstance=null,this.currentMap=JD(AC),this.padToRemap=null,this.setupListeners()}loadMap(t){return this.currentMap=t}getMap(){return this.currentMap}addToMap(t,n){this.currentMap[t]=n}getMapped(t,n){const s=this.getMap();return Object.entries(s).filter(([o,A])=>A.DOWN===t).map(([o])=>o.split("_")).map(this.formatSignal).join("; ")}formatSignal([t,n]){return["144","128"].includes(t)?aC(n):`c: ${t}, v: ${n}`}toggleRemapMode(t){this.padToRemap===t?this.stopRemapMode(t):this.padToRemap===null?this.startRemapMode(t):this.startRemapMode(t)}stopRemapMode(t){this.padToRemap=null,yt.emit("ready_midi_remap",[t,!1])}startRemapMode(t){this.padToRemap=t,yt.emit("ready_midi_remap",[t,!0])}remap(t){const n={DOWN:this.padToRemap,UP:null,lastTriggerTime:0},s={DOWN:null,UP:this.padToRemap.replace("DOWN","UP"),lastTriggerTime:0},i=t.replace("144","128");this.addToMap(t,n),t!==i&&this.addToMap(i,s),this.stopRemapMode(this.padToRemap),this.refreshMidimapOverlay()}refreshMidimapOverlay(){yt.emit("toggle_midimap_overlay",!0),yt.emit("toggle_midimap_overlay",!0)}shouldRemap(){return this.padToRemap!==null}setupListeners(){this.requestMidiInstance()}async requestMidiInstance(){const t=await navigator.requestMIDIAccess();try{this.onMIDISuccess(t)}catch(n){this.onMIDIFailure(n)}}onMIDISuccess(t){console.log("MIDI ready!"),this.midiInstance=t,this.startLoggingMIDIInput()}onMIDIFailure(t){console.log("Failed to get MIDI access - "+t)}handleMidiMessage(t,n){const[s,i]=t.data,r=[s,i].join("_"),a=this.getMap();if(this.shouldRemap())this.remap(r);else{if(!a[r])return;this.handleTriggers(t,a[r],n),this.handleAfterTriggers(t,a[r],n)}}startLoggingMIDIInput(t){this.midiInstance.inputs.forEach(n=>{n.onmidimessage=s=>this.handleMidiMessage(s,this.inputManager)})}handleTriggers(t,n,s){if(t.timeStamp-n.lastTriggerTime>lc){const r=n.UP,a=n.DOWN;r&&s.release(r),a&&s.press(a)}n.lastTriggerTime=t.timeStamp}handleAfterTriggers(t,n,s){const i=n.triggerPressAfterThreshold;i&&setTimeout(()=>{s.press(i),n.lastTriggerTime=t.timeStamp},lc);const r=n.triggerReleaseAfterThreshold;r&&setTimeout(()=>{s.release(r),n.lastTriggerTime=t.timeStamp},lc)}}const AC={"176_51":{DOWN:"PLAY_DOWN",UP:null,triggerReleaseAfterThreshold:"PLAY_UP",lastTriggerTime:0},"176_50":{DOWN:"WRITE_DOWN",UP:null,triggerReleaseAfterThreshold:"WRITE_UP",lastTriggerTime:0},"144_48":{DOWN:"SOUND_DOWN",UP:null,lastTriggerTime:0},"128_48":{DOWN:null,UP:"SOUND_UP",lastTriggerTime:0},"144_49":{DOWN:"PATTERN_DOWN",UP:null,lastTriggerTime:0},"128_49":{DOWN:null,UP:"PATTERN_UP",lastTriggerTime:0},"144_50":{DOWN:"BPM_DOWN",UP:null,lastTriggerTime:0},"128_50":{DOWN:null,UP:"BPM_UP",lastTriggerTime:0},"144_51":{DOWN:"FX_DOWN",UP:null,lastTriggerTime:0},"128_51":{DOWN:null,UP:"FX_UP",lastTriggerTime:0},"144_44":{DOWN:"PAD_1_DOWN",UP:null,lastTriggerTime:0},"128_44":{DOWN:null,UP:"PAD_1_UP",lastTriggerTime:0},"144_45":{DOWN:"PAD_2_DOWN",UP:null,lastTriggerTime:0},"128_45":{DOWN:null,UP:"PAD_2_UP",lastTriggerTime:0},"144_46":{DOWN:"PAD_3_DOWN",UP:null,lastTriggerTime:0},"128_46":{DOWN:null,UP:"PAD_3_UP",lastTriggerTime:0},"144_47":{DOWN:"PAD_4_DOWN",UP:null,lastTriggerTime:0},"128_47":{DOWN:null,UP:"PAD_4_UP",lastTriggerTime:0},"144_40":{DOWN:"PAD_5_DOWN",UP:null,lastTriggerTime:0},"128_40":{DOWN:null,UP:"PAD_5_UP",lastTriggerTime:0},"144_41":{DOWN:"PAD_6_DOWN",UP:null,lastTriggerTime:0},"128_41":{DOWN:null,UP:"PAD_6_UP",lastTriggerTime:0},"144_42":{DOWN:"PAD_7_DOWN",UP:null,lastTriggerTime:0},"128_42":{DOWN:null,UP:"PAD_7_UP",lastTriggerTime:0},"144_43":{DOWN:"PAD_8_DOWN",UP:null,lastTriggerTime:0},"128_43":{DOWN:null,UP:"PAD_8_UP",lastTriggerTime:0},"144_36":{DOWN:"PAD_9_DOWN",UP:null,lastTriggerTime:0},"128_36":{DOWN:null,UP:"PAD_9_UP",lastTriggerTime:0},"144_37":{DOWN:"PAD_10_DOWN",UP:null,lastTriggerTime:0},"128_37":{DOWN:null,UP:"PAD_10_UP",lastTriggerTime:0},"144_38":{DOWN:"PAD_11_DOWN",UP:null,lastTriggerTime:0},"128_38":{DOWN:null,UP:"PAD_11_UP",lastTriggerTime:0},"144_39":{DOWN:"PAD_12_DOWN",UP:null,lastTriggerTime:0},"128_39":{DOWN:null,UP:"PAD_12_UP",lastTriggerTime:0},"144_32":{DOWN:"SOUND_DOWN",UP:null,lastTriggerTime:0},"128_32":{DOWN:null,UP:"SOUND_UP",lastTriggerTime:0},"144_33":{DOWN:"PATTERN_DOWN",UP:null,lastTriggerTime:0},"128_33":{DOWN:null,UP:"PATTERN_UP",lastTriggerTime:0},"144_34":{DOWN:"BPM_DOWN",UP:null,lastTriggerTime:0},"128_34":{DOWN:null,UP:"BPM_UP",lastTriggerTime:0},"144_35":{DOWN:"FX_DOWN",UP:null,lastTriggerTime:0},"128_35":{DOWN:null,UP:"FX_UP",lastTriggerTime:0},"144_28":{DOWN:"PAD_5_DOWN",UP:null,lastTriggerTime:0},"128_28":{DOWN:null,UP:"PAD_5_UP",lastTriggerTime:0},"144_29":{DOWN:"PAD_6_DOWN",UP:null,lastTriggerTime:0},"128_29":{DOWN:null,UP:"PAD_6_UP",lastTriggerTime:0},"144_30":{DOWN:"PAD_7_DOWN",UP:null,lastTriggerTime:0},"128_30":{DOWN:null,UP:"PAD_7_UP",lastTriggerTime:0},"144_31":{DOWN:"PAD_8_DOWN",UP:null,lastTriggerTime:0},"128_31":{DOWN:null,UP:"PAD_8_UP",lastTriggerTime:0},"144_24":{DOWN:"PAD_9_DOWN",UP:null,lastTriggerTime:0},"128_24":{DOWN:null,UP:"PAD_9_UP",lastTriggerTime:0},"144_25":{DOWN:"PAD_10_DOWN",UP:null,lastTriggerTime:0},"128_25":{DOWN:null,UP:"PAD_10_UP",lastTriggerTime:0},"144_26":{DOWN:"PAD_11_DOWN",UP:null,lastTriggerTime:0},"128_26":{DOWN:null,UP:"PAD_11_UP",lastTriggerTime:0},"144_27":{DOWN:"PAD_12_DOWN",UP:null,lastTriggerTime:0},"128_27":{DOWN:null,UP:"PAD_12_UP",lastTriggerTime:0},"144_20":{DOWN:"PAD_13_DOWN",UP:null,lastTriggerTime:0},"128_20":{DOWN:null,UP:"PAD_13_UP",lastTriggerTime:0},"144_21":{DOWN:"PAD_14_DOWN",UP:null,lastTriggerTime:0},"128_21":{DOWN:null,UP:"PAD_14_UP",lastTriggerTime:0},"144_22":{DOWN:"PAD_15_DOWN",UP:null,lastTriggerTime:0},"128_22":{DOWN:null,UP:"PAD_15_UP",lastTriggerTime:0},"144_23":{DOWN:"PAD_16_DOWN",UP:null,lastTriggerTime:0},"128_23":{DOWN:null,UP:"PAD_16_UP",lastTriggerTime:0},"144_64":{DOWN:"PAD_1_DOWN",UP:null,lastTriggerTime:0},"128_64":{DOWN:null,UP:"PAD_1_UP",lastTriggerTime:0},"144_65":{DOWN:"PAD_2_DOWN",UP:null,lastTriggerTime:0},"128_65":{DOWN:null,UP:"PAD_2_UP",lastTriggerTime:0},"144_66":{DOWN:"PAD_3_DOWN",UP:null,lastTriggerTime:0},"128_66":{DOWN:null,UP:"PAD_3_UP",lastTriggerTime:0},"144_67":{DOWN:"PAD_4_DOWN",UP:null,lastTriggerTime:0},"128_67":{DOWN:null,UP:"PAD_4_UP",lastTriggerTime:0},"144_60":{DOWN:"PAD_5_DOWN",UP:null,lastTriggerTime:0},"128_60":{DOWN:null,UP:"PAD_5_UP",lastTriggerTime:0},"144_61":{DOWN:"PAD_6_DOWN",UP:null,lastTriggerTime:0},"128_61":{DOWN:null,UP:"PAD_6_UP",lastTriggerTime:0},"144_62":{DOWN:"PAD_7_DOWN",UP:null,lastTriggerTime:0},"128_62":{DOWN:null,UP:"PAD_7_UP",lastTriggerTime:0},"144_63":{DOWN:"PAD_8_DOWN",UP:null,lastTriggerTime:0},"128_63":{DOWN:null,UP:"PAD_8_UP",lastTriggerTime:0},"144_56":{DOWN:"PAD_9_DOWN",UP:null,lastTriggerTime:0},"128_56":{DOWN:null,UP:"PAD_9_UP",lastTriggerTime:0},"144_57":{DOWN:"PAD_10_DOWN",UP:null,lastTriggerTime:0},"128_57":{DOWN:null,UP:"PAD_10_UP",lastTriggerTime:0},"144_58":{DOWN:"PAD_11_DOWN",UP:null,lastTriggerTime:0},"128_58":{DOWN:null,UP:"PAD_11_UP",lastTriggerTime:0},"144_59":{DOWN:"PAD_12_DOWN",UP:null,lastTriggerTime:0},"128_59":{DOWN:null,UP:"PAD_12_UP",lastTriggerTime:0},"144_52":{DOWN:"PAD_13_DOWN",UP:null,lastTriggerTime:0},"128_52":{DOWN:null,UP:"PAD_13_UP",lastTriggerTime:0},"144_53":{DOWN:"PAD_14_DOWN",UP:null,lastTriggerTime:0},"128_53":{DOWN:null,UP:"PAD_14_UP",lastTriggerTime:0},"144_54":{DOWN:"PAD_15_DOWN",UP:null,lastTriggerTime:0},"128_54":{DOWN:null,UP:"PAD_15_UP",lastTriggerTime:0},"144_55":{DOWN:"PAD_16_DOWN",UP:null,lastTriggerTime:0},"128_55":{DOWN:null,UP:"PAD_16_UP",lastTriggerTime:0}},cC=async()=>await navigator.keyboard.getLayoutMap(),lC=e=>e.search("POT_")>-1;class uC{constructor(t){this.inputManager=t,this.currentMap=JD(qC),this.padToRemap=null,this.keyboardLayoutMap=null}toggleRemapMode(){this.remapMode=!this.remapMode}getKeymap(){return this.currentMap}loadMap(t){return this.currentMap=t}addToMap(t,n){this.currentMap[t]=n}getMappedKey(t,n){const s=this.getKeymap();return Object.entries(s).filter(([,o])=>o.DOWN===t||o.UP===n).map(([o])=>o).map(o=>this.getKeyboardKeyFromLayout(o)).join(", ")}toggleRemapMode(t){this.padToRemap===t?this.stopRemapMode(t):this.padToRemap===null?this.startRemapMode(t):this.startRemapMode(t)}stopRemapMode(t){this.padToRemap=null,yt.emit("ready_key_remap",[t,!1])}startRemapMode(t){this.padToRemap=t,yt.emit("ready_key_remap",[t,!0])}remap(t){const n=this.getKeymap()[t],s=lC(this.padToRemap)&&n?n.UP:this.padToRemap.replace("DOWN","UP"),i={DOWN:this.padToRemap,UP:s};this.addToMap(t,i),this.stopRemapMode(this.padToRemap),this.refreshKeymapOverlay()}refreshKeymapOverlay(){yt.emit("toggle_keymap_overlay",!0),yt.emit("toggle_keymap_overlay",!0)}shouldRemap(){return this.padToRemap!==null}setupListeners(){const t=s=>{const r=this.currentMap[s.code];s.repeat&&!r.repeatable||(this.shouldRemap()?this.remap(s.code):r&&this.inputManager.press(r.DOWN))},n=s=>{const r=this.currentMap[s.code];r&&r.UP&&this.inputManager.release(r.UP)};document.onkeydown=t,document.onkeyup=n}async setupKeyboardLayoutMap(){this.keyboardLayoutMap=await cC()}async initialize(){this.setupKeyboardLayoutMap(),this.setupListeners()}getKeyboardKeyFromLayout(t){return this.keyboardLayoutMap&&this.keyboardLayoutMap.get(t)}}const qC={Digit1:{DOWN:U.PAD_1_DOWN,UP:U.PAD_1_UP},Digit2:{DOWN:U.PAD_2_DOWN,UP:U.PAD_2_UP},Digit3:{DOWN:U.PAD_3_DOWN,UP:U.PAD_3_UP},Digit4:{DOWN:U.PAD_4_DOWN,UP:U.PAD_4_UP},KeyM:{DOWN:U.PAD_4_DOWN,UP:U.PAD_4_UP},KeyQ:{DOWN:U.PAD_5_DOWN,UP:U.PAD_5_UP},KeyW:{DOWN:U.PAD_6_DOWN,UP:U.PAD_6_UP},KeyE:{DOWN:U.PAD_7_DOWN,UP:U.PAD_7_UP},KeyR:{DOWN:U.PAD_8_DOWN,UP:U.PAD_8_UP},KeyA:{DOWN:U.PAD_9_DOWN,UP:U.PAD_9_UP},KeyS:{DOWN:U.PAD_10_DOWN,UP:U.PAD_10_UP},KeyD:{DOWN:U.PAD_11_DOWN,UP:U.PAD_11_UP},KeyF:{DOWN:U.PAD_12_DOWN,UP:U.PAD_12_UP},KeyZ:{DOWN:U.PAD_13_DOWN,UP:U.PAD_13_UP},KeyX:{DOWN:U.PAD_14_DOWN,UP:U.PAD_14_UP},KeyC:{DOWN:U.PAD_15_DOWN,UP:U.PAD_15_UP},KeyV:{DOWN:U.PAD_16_DOWN,UP:U.PAD_16_UP},Digit5:{DOWN:U.RECORD_DOWN,UP:U.RECORD_UP},KeyT:{DOWN:U.FX_DOWN,UP:U.FX_UP},KeyG:{DOWN:U.PLAY_DOWN,UP:U.PLAY_UP},KeyB:{DOWN:U.WRITE_DOWN,UP:U.WRITE_UP},Digit6:{DOWN:U.SOUND_DOWN,UP:U.SOUND_UP},Digit7:{DOWN:U.PATTERN_DOWN,UP:U.PATTERN_UP},Digit8:{DOWN:U.BPM_DOWN,UP:U.BPM_UP},Digit9:{DOWN:U.POT_LEFT_DOWN,UP:U.POT_LEFT_UP,repeatable:!0},Digit0:{DOWN:U.POT_LEFT_UP,UP:U.POT_LEFT_UP,repeatable:!0},Minus:{DOWN:U.POT_RIGHT_DOWN,UP:U.POT_RIGHT_UP,repeatable:!0},Equal:{DOWN:U.POT_RIGHT_UP,UP:U.POT_RIGHT_UP,repeatable:!0}},Uh=15,dg={[U.POT_LEFT_DOWN]:{lastPosition:0,threshold:Uh},[U.POT_RIGHT_DOWN]:{lastPosition:0,threshold:Uh}},uc=e=>Object.keys(dg).includes(e);class hC{constructor(t){this.inputManager=t,this.activePot=null}setupListeners(){const t=i=>{var a,o,A;const r=(A=(o=(a=i==null?void 0:i.target)==null?void 0:a.children[0])==null?void 0:o.dataset)==null?void 0:A.pressedId;!r||(uc(r)?uc(r)&&(this.activePot=r):this.inputManager.press(r))},n=i=>{var a,o,A;const r=(A=(o=(a=i==null?void 0:i.target)==null?void 0:a.children[0])==null?void 0:o.dataset)==null?void 0:A.releasedId;r&&!uc(r)&&this.inputManager.release(r),this.activePot=null};document.addEventListener("pointerdown",t),document.addEventListener("pointerup",n);const s=i=>{i.preventDefault(),i.stopImmediatePropagation(),this.handlePotSlideEvent(i)};document.addEventListener("pointermove",s,{passive:!1}),document.oncontextmenu=function(i){const r=i;return r.pointerType==="touch"?!1:(r.pointerType==="mouse",!0)}}handlePotSlideEvent(t){if(this.activePot===null)return;const n=(t==null?void 0:t.clientY)||0,s=this.activePot,i=dg[s],r=i.lastPosition-n;if(Math.abs(r)>i.threshold){if(r>0){const a=s.replace("DOWN","UP");this.inputManager.press(a)}else this.inputManager.press(s);i.lastPosition=n}}}class pC{constructor(){this.mic=new Zi,this.recorder=new nr,this.mic.connect(this.recorder),this.lastPadId=null}start(t){this.clear(),this.lastPadId=t,this.mic.open(),this.recorder.start(),yt.emit("recorder_on",!0)}async stop(){if(this.recorder.state==="stopped")return;const t=await this.recorder.stop();yt.emit("recorder_off",!0);const n=URL.createObjectURL(t);It.importSoundToBankFromFileUrl(this.lastPadId,n,t)}clear(){this.lastPadId=null}}const Dg=new pC,qi={FILTER:"FILTER",TRIM:"TRIM",TONE:"TONE"},ao={[qi.FILTER]:{left_pot:{increase:()=>It.getCurrentSoundBank().increaseBankFilter(),decrease:()=>It.getCurrentSoundBank().decreaseBankFilter()},right_pot:{increase:()=>console.log("increase"),decrease:()=>console.log("decrease")}},[qi.TRIM]:{left_pot:{increase:()=>It.getCurrentSoundBank().increaseStartTrim(),decrease:()=>It.getCurrentSoundBank().decreaseStartTrim()},right_pot:{increase:()=>It.getCurrentSoundBank().increaseEndTrim(),decrease:()=>It.getCurrentSoundBank().decreaseEndTrim()}},[qi.TONE]:{left_pot:{increase:()=>It.getCurrentSoundBank().increaseBankPitch(),decrease:()=>It.getCurrentSoundBank().decreaseBankPitch()},right_pot:{increase:()=>It.getCurrentSoundBank().increaseBankVolume(),decrease:()=>It.getCurrentSoundBank().decreaseBankVolume()}}};class dC{constructor(){this.mode=qi.TONE}cycleToNextMode(){const t=this.mode,n=Object.keys(qi),i=(n.findIndex(a=>t===qi[a])+1)%n.length,r=qi[n[i]];return Ce(r),this.mode=r,r}increaseLeftPotEffect(){ao[this.mode].left_pot.increase()}decreaseLeftPotEffect(){ao[this.mode].left_pot.decrease()}increaseRightPotEffect(){ao[this.mode].right_pot.increase()}decreaseRightPotEffect(){ao[this.mode].right_pot.decrease()}}const as=new dC,DC=e=>{!Ft[e]||(Lt.writeModeEnabled?Lt.setCurrentPatternStep(e):(It.play(e),It.setLastSoundTriggeredByPadPress(e)))},Mr={},gC=e=>()=>{Lt.writeLiveMode&&Xe.writeStepLive(e)};for(let e=1;e<=16;e++){const t=`PAD_${e}_DOWN`;Mr[`${U.WRITE_DOWN}${t}`]=gC(t)}const _A=(e,t,n)=>()=>{Le.popCombo(),yt.emit(t),n(),Lt.writeLiveMode&&(Lt.writeFxLiveMode=!0)};Mr[`${U.WRITE_DOWN}${U.POT_LEFT_DOWN}`]=_A(U.POT_LEFT_DOWN,"pot_left_down",()=>as.decreaseLeftPotEffect());Mr[`${U.WRITE_DOWN}${U.POT_LEFT_UP}`]=_A(U.POT_LEFT_UP,"pot_left_up",()=>as.increaseLeftPotEffect());Mr[`${U.WRITE_DOWN}${U.POT_RIGHT_DOWN}`]=_A(U.POT_RIGHT_DOWN,"pot_right_down",()=>as.decreaseRightPotEffect());Mr[`${U.WRITE_DOWN}${U.POT_RIGHT_UP}`]=_A(U.POT_RIGHT_UP,"pot_right_up",()=>as.increaseRightPotEffect());const gg={};for(let e=1;e<=16;e++){const t=`PAD_${e}_DOWN`;gg[`${U.RECORD_DOWN}${t}`]=()=>{It.currentAudioInputDevice===rs.MIC?Dg.start(t):It.currentAudioInputDevice===rs.HARD_DRIVE&&yt.emit("record_audio_from_hard_drive",t),Zt.deactivateLayer(Qt.RECORD),It.selectSoundBank(t),Le.clearCombo()}}const fg={};for(let e=1;e<=16;e++){const t=`PAD_${e}_DOWN`;fg[`${U.PATTERN_DOWN}${t}`]=()=>{Lt.addPatternIdToChain(t),Xe.isPlaying?Lt.selectPattern(t):Lt.selectFirstPatternInChain(),Lt.turnOnLightForUsedPatterns()}}const ul={};for(let e=1;e<=16;e++){const t=`PAD_${e}_DOWN`,n=()=>{Ce("CPY");const s=Lt.getCurrentPattern();Lt.getPatternById(t).load(s),Lt.replaceChain(t),Lt.selectFirstPatternInChain()};ul[`${U.PATTERN_DOWN}${U.WRITE_DOWN}${t}`]=n,ul[`${U.WRITE_DOWN}${U.PATTERN_DOWN}${t}`]=n}const mg={};for(const e in Ft){const t=Ft[e];mg[`${U.BPM_DOWN}${t}`]=()=>{It.setMasterVolumeByPadId(t),It.turnOnLightForMasterVolume()}}const Ng={};for(const e in Ft){const t=Ft[e];Ng[`${U.SOUND_DOWN}${t}`]=()=>{It.selectSoundBank(t),It.turnOnLightForUsedSoundBanks()}}const Gu={};for(const e in Ft){const t=Ft[e];Gu[`${U.FX_DOWN}${t}`]=()=>{Fe.addLiveFxPadId(t),Fe.activateByPad(t)}}for(const e in Ft){const t=Ft[e];for(const n in Ft){const s=Ft[n];Gu[`${U.FX_DOWN}${t}${s}`]=()=>{Fe.addLiveFxPadId(s),Fe.deactivateByPad(t),Fe.activateByPad(s)}}}const ql={};for(let e=1;e<=16;e++){const t=`PAD_${e}_DOWN`,n=()=>{const s=It.getCurrentSoundBank();It.getSoundBankById(t).load(s),It.selectSoundBank(t),It.turnOnLightForUsedSoundBanks()};ql[`${U.SOUND_DOWN}${U.WRITE_DOWN}${t}`]=n,ql[`${U.WRITE_DOWN}${U.SOUND_DOWN}${t}`]=n}const fC=nt(nt(nt(nt(nt(nt(nt(nt({[U.FX_DOWN]:()=>{Xe.isPlaying&&Fe.turnFxModeOn()},[U.POT_LEFT_DOWN]:()=>{Le.clearCombo(),yt.emit("pot_left_down"),as.decreaseLeftPotEffect()},[U.POT_LEFT_UP]:()=>{Le.clearCombo(),yt.emit("pot_left_up"),as.increaseLeftPotEffect()},[U.POT_RIGHT_DOWN]:()=>{Le.clearCombo(),yt.emit("pot_right_down"),as.decreaseRightPotEffect()},[U.POT_RIGHT_UP]:()=>{Le.clearCombo(),yt.emit("pot_right_up"),as.increaseRightPotEffect()},[`${U.BPM_DOWN}${U.POT_LEFT_DOWN}`]:()=>{Le.clearPadIdFromCombo(U.POT_LEFT_DOWN),yt.emit("pot_left_down"),Xe.decrementSwing(),Ce(`${Xe.swing}`)},[`${U.BPM_DOWN}${U.POT_LEFT_UP}`]:()=>{Le.clearPadIdFromCombo(U.POT_LEFT_UP),yt.emit("pot_left_up"),Xe.incrementSwing(),Ce(`${Xe.swing}`)},[`${U.BPM_DOWN}${U.POT_RIGHT_DOWN}`]:()=>{Le.clearPadIdFromCombo(U.POT_RIGHT_DOWN),yt.emit("pot_right_down"),Xe.decrementBpm(),Ce(`${Xe.bpm.value}`)},[`${U.BPM_DOWN}${U.POT_RIGHT_UP}`]:()=>{Le.clearPadIdFromCombo(U.POT_RIGHT_UP),yt.emit("pot_right_up"),Xe.incrementBpm(),Ce(`${Xe.bpm.value}`)},[U.BPM_DOWN]:()=>{Zt.activateLayer(Qt.BPM),It.turnOnLightForMasterVolume()},[U.PLAY_DOWN]:()=>{Xe.toggle()},[U.PATTERN_DOWN]:()=>{Lt.startPatternMode()},[U.WRITE_DOWN]:()=>{Xe.isPlaying&&!Lt.writeModeEnabled&&(Lt.writeLiveMode=!0)},[U.SOUND_DOWN]:()=>{Zt.activateLayer(Qt.SOUND),It.turnOnLightForUsedSoundBanks()},[`${U.SOUND_DOWN}${U.WRITE_DOWN}`]:()=>{Ce("CPY")},[`${U.WRITE_DOWN}${U.SOUND_DOWN}`]:()=>{Ce("CPY")},[`${U.RECORD_DOWN}`]:()=>{Zt.activateLayer(Qt.RECORD),It.turnOnLightForRecordedSoundBanks(),Ce("rEc")},[`${U.RECORD_DOWN}${U.SOUND_DOWN}`]:e=>{It.clearCurrentSoundBank(),It.turnOnLightForRecordedSoundBanks(),Ce("dEL")},[`${U.RECORD_DOWN}${U.PATTERN_DOWN}`]:()=>{Lt.getCurrentPattern().clear(),Lt.turnOnLightForUsedPatterns(),Zt.activateLayer(Qt.PATTERN),Ce("cLr")}},gg),Ng),Gu),mg),fg),ul),ql),Mr),mC=e=>{!eI[e]||Fe.fxMode&&(Fe.removeLiveFxPadId(e),Fe.deactivateByPad(e))},NC={[U.PATTERN_UP]:()=>{Lt.stopPatternMode()},[U.WRITE_UP]:(e,t)=>{t<=200&&Lt.toggleWriteMode(),Lt.writeLiveMode=!1,Lt.writeFxLiveMode=!1},[U.SOUND_UP]:()=>{Zt.deactivateLayer(Qt.SOUND)},[U.BPM_UP]:(e,t)=>{t<=200&&Xe.cycleDefaultBpms(),Zt.deactivateLayer(Qt.BPM)},[U.FX_UP]:(e,t)=>{t<=200?as.cycleToNextMode():Fe.turnFxModeOff()},[U.RECORD_UP]:()=>{It.currentAudioInputDevice===rs.MIC&&Dg.stop(),Zt.deactivateLayer(Qt.RECORD)}};class VC{constructor(){this.midiInputHandler=new oC(this),this.keyboardInputHandler=new uC(this),this.touchInputHandler=new hC(this),this.padsDown=new Set,this.padHeldFor=nt({},U),this.initialize()}getCurrentPadsDownCombo(){return Array.from(this.padsDown).join("")}controlIsComboStarter(t){return!t.includes("PAD")}clearCombo(){return this.padsDown.clear()}popCombo(){const t=Array.from(this.padsDown).pop();this.padsDown.delete(t)}clearPadIdFromCombo(t){return this.padsDown.delete(t)}press(t){this.padHeldFor[t]=performance.now(),this.padsDown.size===0?this.controlIsComboStarter(t)&&this.padsDown.add(t):this.padsDown.add(t),ll.playLineBurstForPadById(t);const n=fC[this.getCurrentPadsDownCombo()]||DC;n?n(t):console.log("no PRESS handler")}release(t){const n=t.replace("UP","DOWN");this.padHeldFor[n]=performance.now()-this.padHeldFor[n],this.padsDown.delete(t),this.padsDown.delete(n);const s=NC[t]||mC;s?s(t,this.padHeldFor[n]):console.log("no RELEASE handler")}initialize(){this.keyboardInputHandler.initialize(),this.midiInputHandler.setupListeners(),this.touchInputHandler.setupListeners()}}const Le=new VC,rA=Le.keyboardInputHandler,aA=Le.midiInputHandler;yt.on("toggle_keymap_mode",e=>Le.keyboardInputHandler.toggleRemapMode(e));yt.on("toggle_keymap_overlay",e=>Le.keyboardInputHandler.stopRemapMode(e));yt.on("toggle_midimap_mode",e=>Le.midiInputHandler.toggleRemapMode(e));yt.on("toggle_midimap_overlay",e=>Le.midiInputHandler.stopRemapMode(e));const Na=ES(),MC=()=>({save:OC,load:yC,delete:WC,fetchAllItemNames:Na.fetchAllItemNames,fetchAllItems:Na.fetchAllItems}),OC=async(e,t)=>{await Na.saveItem(e,t,aA.currentMap)&&qn.success("midimap saved")},yC=async e=>{const n=await Na.fetchItem(e);n?(aA.loadMap(n),qn.success("midi map loaded")):qn.error(`could not load ${e} midi map into this session`)},WC=async e=>{await Na.deleteItem(e)},EC=oe({setup(e){return(t,n)=>(vt(),ve(Yu,{saver:Me(MC),title:"Midimap Manager","overlay-id":"midimap-loader-overlay"},null,8,["saver"]))}}),Va=PS(),PC=()=>({save:IC,load:SC,delete:CC,fetchAllItemNames:Va.fetchAllItemNames,fetchAllItems:Va.fetchAllItems}),IC=async(e,t)=>{await Va.saveItem(e,t,rA.currentMap)&&qn.success("key map saved")},SC=async e=>{const n=await Va.fetchItem(e);n?(rA.loadMap(n),qn.success("key map loaded")):qn.error(`could not load ${e} key map into this session`)},CC=async e=>{await Va.deleteItem(e)},wC=oe({setup(e){return(t,n)=>(vt(),ve(Yu,{saver:Me(PC),title:"Keymap Manager","overlay-id":"keymap-loader-overlay"},null,8,["saver"]))}});const BC=qt("p",{class:"credits-overlay"},[qt("h1",null,"Credits"),qt("div",null,[_e(" boxing gloves graphic provided by art shop via "),qt("a",{href:"https://thenounproject.com/browse/icons/term/boxing/",target:"_blank"},"the Noun Project")]),qt("div",null,[_e(" cartoon bang graphic provided by icon by Elisabeta via "),qt("a",{href:"https://thenounproject.com/browse/icons/term/blot/",target:"_blank"},"the Noun Project")]),qt("div",null,[_e(" cartoon boom graphic provided by Michael G Brown via "),qt("a",{href:"https://thenounproject.com/browse/icons/term/boom/",target:"_blank"},"the Noun Project")]),qt("div",null,[_e(" two stick figures boxing provided by Adrien Coquet via "),qt("a",{href:"https://thenounproject.com/browse/icons/term/boxing/",target:"_blank"},"the Noun Project")]),qt("div",null,[_e(" punching bag graphic provided by Yo! Baba via "),qt("a",{href:"https://thenounproject.com/browse/icons/term/boxing/",target:"_blank"},"the Noun Project")]),qt("div",null,[_e(" speed bag graphic provided by icon by Vectorstall via "),qt("a",{href:"https://thenounproject.com/browse/icons/term/boxing/",target:"_blank"},"the Noun Project")]),qt("div",null,[_e(" female boxer graphic provided by Amethyst Studio via "),qt("a",{href:"https://thenounproject.com/browse/icons/term/boxing/",target:"_blank"},"the Noun Project")]),qt("div",null,[_e(" male boxer graphic provided by Amethyst Studio via "),qt("a",{href:"https://thenounproject.com/browse/icons/term/boxing/",target:"_blank"},"the Noun Project")])],-1),kC=oe({setup(e){return(t,n)=>(vt(),ve(RA,{"overlay-id":"credits"},{default:we(()=>[BC]),_:1}))}});const TC={id:"po_display",class:"po_display"},bC={style:{"white-space":"pre-wrap"}},UC={key:0,class:"write_mode"},QC={class:"FAB_container",style:{visibility:"visible"}},vC={href:"https://docs.google.com/forms/d/e/1FAIpQLScpr9GhJzk4jMJbfpOqM6RJJ23-Rj8rtUu2-SgQinQbf6F8aw/viewform?usp=sf_link",target:"_blank",rel:"noopener noreferrer"},RC={style:{display:"flex","flex-direction":"column-reverse"}},YC=_e(" cc "),GC={style:{display:"flex","flex-direction":"column-reverse"}},_C={href:"https://teenage.engineering/store/po-33/",target:"_blank",rel:"noopener noreferrer"},xC=oe({setup(e){const t=de(""),n=de(!1);yt.on("write_message_to_display",r=>t.value=r),yt.on("toggle_write_mode",r=>n.value=r);const s=()=>yt.emit("toggle_keymap_overlay",!0),i=()=>yt.emit("toggle_midimap_overlay",!0);return(r,a)=>{const o=Gl("font-awesome-icon");return vt(),ne("div",TC,[qt("div",bC,[n.value?(vt(),ne("span",UC,"=*=")):Jn("",!0),_e(" "+Cs(t.value),1)]),Ot(tI),qt("div",QC,[qt("a",vC,[Ot(En,null,{default:we(()=>[Ot(o,{icon:"fa-solid fa-comment"})]),_:1})]),Ot(En,{"overlay-id":"session-loader-overlay"},{default:we(()=>[Ot(o,{icon:"fa-solid fa-floppy-disk"})]),_:1}),(vt(),ve($A,null,{default:we(()=>[Ot(iC)]),_:1})),Ot(En,{"overlay-id":"input-output-overlay"},{default:we(()=>[Ot(o,{icon:"fa-solid fa-plug"})]),_:1}),Ot(QI),qt("div",RC,[Ot(En,{"overlay-id":"midimap",onClick:i},{default:we(()=>[YC]),_:1}),Ot(En,{"overlay-id":"midimap-loader-overlay"},{default:we(()=>[Ot(o,{icon:"fa-solid fa-floppy-disk"})]),_:1}),(vt(),ve($A,null,{default:we(()=>[Ot(EC)]),_:1}))]),qt("div",GC,[Ot(En,{"overlay-id":"keymap",onClick:s},{default:we(()=>[Ot(o,{icon:"fa-solid fa-keyboard"})]),_:1}),Ot(En,{"overlay-id":"keymap-loader-overlay"},{default:we(()=>[Ot(o,{icon:"fa-solid fa-floppy-disk"})]),_:1}),(vt(),ve($A,null,{default:we(()=>[Ot(wC)]),_:1}))]),Ot(En,{"overlay-id":"welcome"},{default:we(()=>[Ot(o,{icon:"fa-solid fa-circle-info"})]),_:1}),Ot(En,{"overlay-id":"credits"},{default:we(()=>[Ot(o,{icon:"fa-solid fa-copyright"})]),_:1}),Ot(kC),qt("a",_C,[Ot(En,null,{default:we(()=>[Ot(o,{icon:"fa-solid fa-dollar-sign"})]),_:1})])])])}}});var Qh="/assets/pot.png";const FC=["data-pressed-id","data-released-id"],vh=oe({props:{pressedEventId:null,releasedEventId:null},setup(e){const t=e;let n=de(!1),s=de(!1),i=de(!1);const r=(l,u)=>{l===t.pressedEventId&&(n.value=!0,i.value=u)},a=l=>{l===t.releasedEventId&&(n.value=!1)},o=(l,u)=>{l===t.pressedEventId&&(s.value=!0,i.value=u)},A=l=>{l===t.releasedEventId&&(s.value=!1)};return yt.on("pad_light_on",({pad_id:l,bright:u})=>r(l,u)),yt.on("pad_light_off",({pad_id:l})=>a(l)),yt.on("pad_blink_light_on",({pad_id:l,bright:u})=>o(l,u)),yt.on("pad_blink_light_off",({pad_id:l})=>A(l)),(l,u)=>(vt(),ne("div",{class:Rn(["pad",{pad__active:Me(n),pad__blink:Me(s),pad__bright:Me(i)}]),"data-pressed-id":t.pressedEventId,"data-released-id":t.releasedEventId},null,10,FC))}});const ZC=["data-pressed-id","data-released-id"],KC={class:"keymap_overlay__content__key"},JC=oe({props:{pressedEventId:null,releasedEventId:null},setup(e){const t=e,n=de(!1),s=de(rA.getMappedKey(t.pressedEventId,t.releasedEventId)),i=()=>{s.value=rA.getMappedKey(t.pressedEventId,t.releasedEventId)},r=()=>yt.emit("toggle_keymap_mode",t.pressedEventId);return yt.on("toggle_keymap_overlay",i),yt.on("ready_key_remap",([a,o])=>{a!==t.pressedEventId?n.value=!1:n.value=o}),(a,o)=>(vt(),ne("div",{class:"keymap_overlay","data-pressed-id":t.pressedEventId,"data-released-id":t.releasedEventId,onClick:r},[qt("div",{class:Rn(["keymap_overlay__content",{keymap_overlay__remapping_active:n.value}])},[qt("span",KC,Cs(s.value),1)],2)],8,ZC))}}),LC=["data-pressed-id","data-released-id"],zC={class:"keymap_overlay__content__key"},jC=oe({props:{pressedEventId:null,releasedEventId:null},setup(e){const t=e,n=de(!1),s=de(aA.getMapped(t.pressedEventId,t.releasedEventId)),i=()=>{s.value=aA.getMapped(t.pressedEventId,t.releasedEventId)},r=()=>yt.emit("toggle_midimap_mode",t.pressedEventId);return yt.on("toggle_midimap_overlay",i),yt.on("ready_midi_remap",([a,o])=>{a!==t.pressedEventId?n.value=!1:n.value=o}),(a,o)=>(vt(),ne("div",{class:"keymap_overlay","data-pressed-id":t.pressedEventId,"data-released-id":t.releasedEventId,onClick:r},[qt("div",{class:Rn(["keymap_overlay__content",{keymap_overlay__remapping_active:n.value}])},[qt("span",zC,Cs(s.value),1)],2)],8,LC))}});const HC={class:"Grid"},XC={class:"Grid__row"},$C={class:"Grid__row__entry"},qc=oe({props:{matrix:null},setup(e){const t=e,n=r=>({Pad:vh})[r]||vh,s=de(!1),i=de(!1);return yt.on("toggle_midimap_overlay",()=>{s.value=!s.value,s.value&&(i.value=!1)}),yt.on("toggle_keymap_overlay",()=>{i.value=!i.value,i.value&&(s.value=!1)}),(r,a)=>(vt(),ne("div",HC,[(vt(!0),ne($e,null,wc(t.matrix,(o,A)=>(vt(),ne("span",XC,[(vt(!0),ne($e,null,wc(o,(l,u)=>(vt(),ne("span",$C,[(vt(),ve(C0(Zl(n(l.componentName),l.props)))),s.value?(vt(),ve(jC,{key:0,"pressed-event-id":l.props.pressedEventId,"released-event-id":l.props.releasedEventId},null,8,["pressed-event-id","released-event-id"])):Jn("",!0),i.value?(vt(),ve(JC,{key:1,"pressed-event-id":l.props.pressedEventId,"released-event-id":l.props.releasedEventId},null,8,["pressed-event-id","released-event-id"])):Jn("",!0)]))),256))]))),256))]))}}),tw=e=>`PAD_${e+1}_DOWN`,ew=e=>`PAD_${e+1}_UP`,hc=4,nw=4,sw=Array(hc).fill("").map((e,t)=>Array(nw).fill("").map((n,s)=>({componentName:"Pad",props:{pressedEventId:tw(t*hc+s),releasedEventId:ew(t*hc+s)}}))),iw=[[{componentName:"Pad",props:{pressedEventId:U.SOUND_DOWN,releasedEventId:U.SOUND_UP}},{componentName:"Pad",props:{pressedEventId:U.PATTERN_DOWN,releasedEventId:U.PATTERN_UP}},{componentName:"Pad",props:{pressedEventId:U.BPM_DOWN,releasedEventId:U.BPM_UP}},{componentName:"Pad",props:{pressedEventId:U.POT_LEFT_DOWN,releasedEventId:U.POT_LEFT_UP}},{componentName:"Pad",props:{pressedEventId:U.POT_RIGHT_DOWN,releasedEventId:U.POT_RIGHT_UP}}]],rw=[[{componentName:"Pad",props:{pressedEventId:U.RECORD_DOWN,releasedEventId:U.RECORD_UP}}],[{componentName:"Pad",props:{pressedEventId:U.FX_DOWN,releasedEventId:U.FX_UP}}],[{componentName:"Pad",props:{pressedEventId:U.PLAY_DOWN,releasedEventId:U.PLAY_UP}}],[{componentName:"Pad",props:{pressedEventId:U.WRITE_DOWN,releasedEventId:U.WRITE_UP}}]];const aw={class:"control_overlay"},ow={class:"control_overlay__top"},Aw={class:"control_overlay__bottom"},cw={class:"control_overlay__bottom__left"},lw={class:"control_overlay__bottom__right"},uw={class:"pots"},qw=oe({setup(e){let t=0,n=0;const s=A=>`transform: rotate(${A}deg);`,i=de(s(t)),r=de(s(n)),a=A=>{t+=A,t<0&&(t=360-Math.abs(A)),t>360&&(t=Math.abs(A)),i.value=s(t)},o=A=>{n+=A,n<0&&(n=360-Math.abs(A)),n>360&&(n=Math.abs(A)),r.value=s(n)};return yt.on("pot_left_down",()=>a(-10)),yt.on("pot_right_down",()=>o(-10)),yt.on("pot_left_up",()=>a(10)),yt.on("pot_right_up",()=>o(10)),(A,l)=>(vt(),ne("div",aw,[qt("div",ow,[Ot(qc,{matrix:Me(iw)},null,8,["matrix"])]),qt("div",Aw,[qt("div",cw,[Ot(qc,{matrix:Me(sw)},null,8,["matrix"])]),qt("div",lw,[Ot(qc,{matrix:Me(rw)},null,8,["matrix"])])]),qt("div",uw,[qt("img",{class:"pot pot_left",src:Qh,alt:"pot left",style:vr(i.value)},null,4),qt("img",{class:"pot pot_right",src:Qh,alt:"pot right",style:vr(r.value)},null,4)])]))}});const hw=e=>(bl("data-v-1bcbdf40"),e=e(),Ul(),e),pw=hw(()=>qt("div",{class:"audio_jack"},null,-1)),dw=oe({setup(e){const t=de(!1),n=s=>{s===rs.MIC?t.value=!1:t.value=!0};return(s,i)=>(vt(),ne("div",{id:"audio_inputs",class:Rn(["audio_inputs",{plugged_in:t.value}])},[Ot(XD,{onSelect:n}),pw],2))}});var Dw=Ns(dw,[["__scopeId","data-v-1bcbdf40"]]);const gw=e=>(bl("data-v-2fb995b0"),e=e(),Ul(),e),fw=gw(()=>qt("div",{class:"audio_jack"},null,-1)),mw=oe({setup(e){const t=de(!1),n=s=>{s===ma.NONE?t.value=!1:t.value=!0};return(s,i)=>(vt(),ne("div",{id:"audio_outputs",class:Rn(["audio_outputs",{plugged_in:t.value}])},[fw,Ot($D,{onSelect:n})],2))}});var Nw=Ns(mw,[["__scopeId","data-v-2fb995b0"]]);const Vw=oe({setup(e){const t=i=>{const r=i.target.files,a=r.length>0?URL.createObjectURL(r[0]):null;a&&It.importSoundToBankFromFileUrl(n.value,a,r[0])},n=de(""),s=i=>{var r;n.value=i,(r=document.getElementById("audio_file"))==null||r.click()};return yt.on("record_audio_from_hard_drive",s),(i,r)=>(vt(),ne("input",{id:"audio_file",type:"file",accept:"audio/*",onChange:t},null,32))}});var Mw=Ns(Vw,[["__scopeId","data-v-35d83b2e"]]);const Ow={class:"indicators"},yw=oe({setup(e){const t=de(!1),n=()=>t.value=!0,s=()=>t.value=!1;return yt.on("recorder_on",n),yt.on("recorder_off",s),(i,r)=>(vt(),ne("div",Ow,[qt("span",{class:Rn(["recorder_indicator",{recorder_indicator__on:t.value}])},null,2)]))}});var Ww=Ns(yw,[["__scopeId","data-v-3537ce7c"]]);const Ew={key:0,id:"live-fx-text-scroll-container"},Pw={id:"live-fx-scrolling-text"},Iw=oe({setup(e){const t=de(null),n=s=>t.value=s;return yt.on("update_live_fx_text",s=>n(s)),(s,i)=>t.value?(vt(),ne("div",Ew,[qt("div",Pw,Cs(Array(80).fill(t.value).join(" ")),1)])):Jn("",!0)}});var Sw=Ns(Iw,[["__scopeId","data-v-0a2d7bf8"]]);const Cw=e=>(bl("data-v-0c193259"),e=e(),Ul(),e),ww={class:"po33"},Bw=Cw(()=>qt("img",{id:"po33_bg",src:GP},null,-1)),kw=oe({setup(e){return(t,n)=>(vt(),ne("div",ww,[Ot(Ww),Ot(Dw,{style:{visibility:"hidden"}}),Ot(Nw,{style:{visibility:"hidden"}}),Ot(Mw),Ot(xC),Ot(qw),Bw,Ot(Sw)]))}});var Tw=Ns(kw,[["__scopeId","data-v-0c193259"]]);function Rh(){const e=()=>navigator.userAgent.indexOf("Chrome")>-1,t=()=>navigator.userAgent.indexOf("iPhone")>-1,n=()=>navigator.userAgent.indexOf("iPad")>-1;return{isChrome:e,isIOS:()=>t()||n()}}const bw=qt("div",{id:"top"},null,-1),Uw=qt("div",{style:{"text-align":"center"}},[qt("h1",{style:{"margin-bottom":"0"}},"BO-33"),qt("i",null,"*not affiliated with Teenage Engineering*")],-1),Qw=qt("div",{id:"bottom"},null,-1),vw=oe({setup(e){Rh().isChrome()||qn.info(`This was developed and tested with Chrome. 
    If it's acting out, try switching to Chrome.
  `,1e4,!0),Rh().isIOS()&&qn.info("If you are can't hear your samples, try turnng your phone off silent.",-1,!0),(()=>{const a=["color: #2c3e50","background: #FFD36E"].join(";");console.log("%c%s",a,`This project was made with many thanks to the following libraries:
    * Vue 3
    * Tone JS
    * localforage
    * mitt
    * midi-note
    
    Thanks to you all was inspired and motivated 
    to get this little project to place I'm proud of.`)})();const n=async()=>{await uP(),await FI.initializeCustomFx(),setTimeout(()=>{Fe.initialize()},1e3),console.log("Tone is ready")},s=()=>{hg().loadLastSession()};let i=!1;const r=()=>{i||(n(),s(),i=!0)};return(a,o)=>(vt(),ne($e,null,[bw,Ot(vP,{onClickOnce:r}),Ot(YP),Uw,Ot(Tw),Qw],64))}});h1.add(B1,U1,G1,_1,b1,C1,k1,w1,R1,T1,Y1,Q1,v1);fN(vw).use(TN).component("font-awesome-icon",S1).mount("#app");/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Vg=function(e){const t=[];let n=0;for(let s=0;s<e.length;s++){let i=e.charCodeAt(s);i<128?t[n++]=i:i<2048?(t[n++]=i>>6|192,t[n++]=i&63|128):(i&64512)===55296&&s+1<e.length&&(e.charCodeAt(s+1)&64512)===56320?(i=65536+((i&1023)<<10)+(e.charCodeAt(++s)&1023),t[n++]=i>>18|240,t[n++]=i>>12&63|128,t[n++]=i>>6&63|128,t[n++]=i&63|128):(t[n++]=i>>12|224,t[n++]=i>>6&63|128,t[n++]=i&63|128)}return t},Rw=function(e){const t=[];let n=0,s=0;for(;n<e.length;){const i=e[n++];if(i<128)t[s++]=String.fromCharCode(i);else if(i>191&&i<224){const r=e[n++];t[s++]=String.fromCharCode((i&31)<<6|r&63)}else if(i>239&&i<365){const r=e[n++],a=e[n++],o=e[n++],A=((i&7)<<18|(r&63)<<12|(a&63)<<6|o&63)-65536;t[s++]=String.fromCharCode(55296+(A>>10)),t[s++]=String.fromCharCode(56320+(A&1023))}else{const r=e[n++],a=e[n++];t[s++]=String.fromCharCode((i&15)<<12|(r&63)<<6|a&63)}}return t.join("")},Mg={byteToCharMap_:null,charToByteMap_:null,byteToCharMapWebSafe_:null,charToByteMapWebSafe_:null,ENCODED_VALS_BASE:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",get ENCODED_VALS(){return this.ENCODED_VALS_BASE+"+/="},get ENCODED_VALS_WEBSAFE(){return this.ENCODED_VALS_BASE+"-_."},HAS_NATIVE_SUPPORT:typeof atob=="function",encodeByteArray(e,t){if(!Array.isArray(e))throw Error("encodeByteArray takes an array as a parameter");this.init_();const n=t?this.byteToCharMapWebSafe_:this.byteToCharMap_,s=[];for(let i=0;i<e.length;i+=3){const r=e[i],a=i+1<e.length,o=a?e[i+1]:0,A=i+2<e.length,l=A?e[i+2]:0,u=r>>2,c=(r&3)<<4|o>>4;let h=(o&15)<<2|l>>6,q=l&63;A||(q=64,a||(h=64)),s.push(n[u],n[c],n[h],n[q])}return s.join("")},encodeString(e,t){return this.HAS_NATIVE_SUPPORT&&!t?btoa(e):this.encodeByteArray(Vg(e),t)},decodeString(e,t){return this.HAS_NATIVE_SUPPORT&&!t?atob(e):Rw(this.decodeStringToByteArray(e,t))},decodeStringToByteArray(e,t){this.init_();const n=t?this.charToByteMapWebSafe_:this.charToByteMap_,s=[];for(let i=0;i<e.length;){const r=n[e.charAt(i++)],o=i<e.length?n[e.charAt(i)]:0;++i;const l=i<e.length?n[e.charAt(i)]:64;++i;const c=i<e.length?n[e.charAt(i)]:64;if(++i,r==null||o==null||l==null||c==null)throw Error();const h=r<<2|o>>4;if(s.push(h),l!==64){const q=o<<4&240|l>>2;if(s.push(q),c!==64){const p=l<<6&192|c;s.push(p)}}}return s},init_(){if(!this.byteToCharMap_){this.byteToCharMap_={},this.charToByteMap_={},this.byteToCharMapWebSafe_={},this.charToByteMapWebSafe_={};for(let e=0;e<this.ENCODED_VALS.length;e++)this.byteToCharMap_[e]=this.ENCODED_VALS.charAt(e),this.charToByteMap_[this.byteToCharMap_[e]]=e,this.byteToCharMapWebSafe_[e]=this.ENCODED_VALS_WEBSAFE.charAt(e),this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[e]]=e,e>=this.ENCODED_VALS_BASE.length&&(this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(e)]=e,this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(e)]=e)}}},Yw=function(e){const t=Vg(e);return Mg.encodeByteArray(t,!0)},Og=function(e){return Yw(e).replace(/\./g,"")},Gw=function(e){try{return Mg.decodeString(e,!0)}catch(t){console.error("base64Decode failed: ",t)}return null};function _w(){const e=typeof chrome=="object"?chrome.runtime:typeof browser=="object"?browser.runtime:void 0;return typeof e=="object"&&e.id!==void 0}function yg(){return typeof indexedDB=="object"}function Wg(){return new Promise((e,t)=>{try{let n=!0;const s="validate-browser-context-for-indexeddb-analytics-module",i=self.indexedDB.open(s);i.onsuccess=()=>{i.result.close(),n||self.indexedDB.deleteDatabase(s),e(!0)},i.onupgradeneeded=()=>{n=!1},i.onerror=()=>{var r;t(((r=i.error)===null||r===void 0?void 0:r.message)||"")}}catch(n){t(n)}})}function xw(){return!(typeof navigator=="undefined"||!navigator.cookieEnabled)}function Fw(){if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw new Error("Unable to locate global object.")}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Zw=()=>Fw().__FIREBASE_DEFAULTS__,Kw=()=>{if(typeof process=="undefined"||typeof process.env=="undefined")return;const e={}.__FIREBASE_DEFAULTS__;if(e)return JSON.parse(e)},Jw=()=>{if(typeof document=="undefined")return;let e;try{e=document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/)}catch{return}const t=e&&Gw(e[1]);return t&&JSON.parse(t)},Lw=()=>{try{return Zw()||Kw()||Jw()}catch(e){console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);return}},zw=()=>{var e;return(e=Lw())===null||e===void 0?void 0:e.config};/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class jw{constructor(){this.reject=()=>{},this.resolve=()=>{},this.promise=new Promise((t,n)=>{this.resolve=t,this.reject=n})}wrapCallback(t){return(n,s)=>{n?this.reject(n):this.resolve(s),typeof t=="function"&&(this.promise.catch(()=>{}),t.length===1?t(n):t(n,s))}}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Hw="FirebaseError";class Ui extends Error{constructor(t,n,s){super(n),this.code=t,this.customData=s,this.name=Hw,Object.setPrototypeOf(this,Ui.prototype),Error.captureStackTrace&&Error.captureStackTrace(this,xA.prototype.create)}}class xA{constructor(t,n,s){this.service=t,this.serviceName=n,this.errors=s}create(t,...n){const s=n[0]||{},i=`${this.service}/${t}`,r=this.errors[t],a=r?Xw(r,s):"Error",o=`${this.serviceName}: ${a} (${i}).`;return new Ui(i,o,s)}}function Xw(e,t){return e.replace($w,(n,s)=>{const i=t[s];return i!=null?String(i):`<${s}?>`})}const $w=/\{\$([^}]+)}/g;function oA(e,t){if(e===t)return!0;const n=Object.keys(e),s=Object.keys(t);for(const i of n){if(!s.includes(i))return!1;const r=e[i],a=t[i];if(Yh(r)&&Yh(a)){if(!oA(r,a))return!1}else if(r!==a)return!1}for(const i of s)if(!n.includes(i))return!1;return!0}function Yh(e){return e!==null&&typeof e=="object"}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const tB=1e3,eB=2,nB=4*60*60*1e3,sB=.5;function Gh(e,t=tB,n=eB){const s=t*Math.pow(n,e),i=Math.round(sB*s*(Math.random()-.5)*2);return Math.min(nB,s+i)}/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function Eg(e){return e&&e._delegate?e._delegate:e}class Xs{constructor(t,n,s){this.name=t,this.instanceFactory=n,this.type=s,this.multipleInstances=!1,this.serviceProps={},this.instantiationMode="LAZY",this.onInstanceCreated=null}setInstantiationMode(t){return this.instantiationMode=t,this}setMultipleInstances(t){return this.multipleInstances=t,this}setServiceProps(t){return this.serviceProps=t,this}setInstanceCreatedCallback(t){return this.onInstanceCreated=t,this}}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const ii="[DEFAULT]";/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class iB{constructor(t,n){this.name=t,this.container=n,this.component=null,this.instances=new Map,this.instancesDeferred=new Map,this.instancesOptions=new Map,this.onInitCallbacks=new Map}get(t){const n=this.normalizeInstanceIdentifier(t);if(!this.instancesDeferred.has(n)){const s=new jw;if(this.instancesDeferred.set(n,s),this.isInitialized(n)||this.shouldAutoInitialize())try{const i=this.getOrInitializeService({instanceIdentifier:n});i&&s.resolve(i)}catch{}}return this.instancesDeferred.get(n).promise}getImmediate(t){var n;const s=this.normalizeInstanceIdentifier(t==null?void 0:t.identifier),i=(n=t==null?void 0:t.optional)!==null&&n!==void 0?n:!1;if(this.isInitialized(s)||this.shouldAutoInitialize())try{return this.getOrInitializeService({instanceIdentifier:s})}catch(r){if(i)return null;throw r}else{if(i)return null;throw Error(`Service ${this.name} is not available`)}}getComponent(){return this.component}setComponent(t){if(t.name!==this.name)throw Error(`Mismatching Component ${t.name} for Provider ${this.name}.`);if(this.component)throw Error(`Component for ${this.name} has already been provided`);if(this.component=t,!!this.shouldAutoInitialize()){if(aB(t))try{this.getOrInitializeService({instanceIdentifier:ii})}catch{}for(const[n,s]of this.instancesDeferred.entries()){const i=this.normalizeInstanceIdentifier(n);try{const r=this.getOrInitializeService({instanceIdentifier:i});s.resolve(r)}catch{}}}}clearInstance(t=ii){this.instancesDeferred.delete(t),this.instancesOptions.delete(t),this.instances.delete(t)}async delete(){const t=Array.from(this.instances.values());await Promise.all([...t.filter(n=>"INTERNAL"in n).map(n=>n.INTERNAL.delete()),...t.filter(n=>"_delete"in n).map(n=>n._delete())])}isComponentSet(){return this.component!=null}isInitialized(t=ii){return this.instances.has(t)}getOptions(t=ii){return this.instancesOptions.get(t)||{}}initialize(t={}){const{options:n={}}=t,s=this.normalizeInstanceIdentifier(t.instanceIdentifier);if(this.isInitialized(s))throw Error(`${this.name}(${s}) has already been initialized`);if(!this.isComponentSet())throw Error(`Component ${this.name} has not been registered yet`);const i=this.getOrInitializeService({instanceIdentifier:s,options:n});for(const[r,a]of this.instancesDeferred.entries()){const o=this.normalizeInstanceIdentifier(r);s===o&&a.resolve(i)}return i}onInit(t,n){var s;const i=this.normalizeInstanceIdentifier(n),r=(s=this.onInitCallbacks.get(i))!==null&&s!==void 0?s:new Set;r.add(t),this.onInitCallbacks.set(i,r);const a=this.instances.get(i);return a&&t(a,i),()=>{r.delete(t)}}invokeOnInitCallbacks(t,n){const s=this.onInitCallbacks.get(n);if(!!s)for(const i of s)try{i(t,n)}catch{}}getOrInitializeService({instanceIdentifier:t,options:n={}}){let s=this.instances.get(t);if(!s&&this.component&&(s=this.component.instanceFactory(this.container,{instanceIdentifier:rB(t),options:n}),this.instances.set(t,s),this.instancesOptions.set(t,n),this.invokeOnInitCallbacks(s,t),this.component.onInstanceCreated))try{this.component.onInstanceCreated(this.container,t,s)}catch{}return s||null}normalizeInstanceIdentifier(t=ii){return this.component?this.component.multipleInstances?t:ii:t}shouldAutoInitialize(){return!!this.component&&this.component.instantiationMode!=="EXPLICIT"}}function rB(e){return e===ii?void 0:e}function aB(e){return e.instantiationMode==="EAGER"}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class oB{constructor(t){this.name=t,this.providers=new Map}addComponent(t){const n=this.getProvider(t.name);if(n.isComponentSet())throw new Error(`Component ${t.name} has already been registered with ${this.name}`);n.setComponent(t)}addOrOverwriteComponent(t){this.getProvider(t.name).isComponentSet()&&this.providers.delete(t.name),this.addComponent(t)}getProvider(t){if(this.providers.has(t))return this.providers.get(t);const n=new iB(t,this);return this.providers.set(t,n),n}getProviders(){return Array.from(this.providers.values())}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var qe;(function(e){e[e.DEBUG=0]="DEBUG",e[e.VERBOSE=1]="VERBOSE",e[e.INFO=2]="INFO",e[e.WARN=3]="WARN",e[e.ERROR=4]="ERROR",e[e.SILENT=5]="SILENT"})(qe||(qe={}));const AB={debug:qe.DEBUG,verbose:qe.VERBOSE,info:qe.INFO,warn:qe.WARN,error:qe.ERROR,silent:qe.SILENT},cB=qe.INFO,lB={[qe.DEBUG]:"log",[qe.VERBOSE]:"log",[qe.INFO]:"info",[qe.WARN]:"warn",[qe.ERROR]:"error"},uB=(e,t,...n)=>{if(t<e.logLevel)return;const s=new Date().toISOString(),i=lB[t];if(i)console[i](`[${s}]  ${e.name}:`,...n);else throw new Error(`Attempted to log a message with an invalid logType (value: ${t})`)};class Pg{constructor(t){this.name=t,this._logLevel=cB,this._logHandler=uB,this._userLogHandler=null}get logLevel(){return this._logLevel}set logLevel(t){if(!(t in qe))throw new TypeError(`Invalid value "${t}" assigned to \`logLevel\``);this._logLevel=t}setLogLevel(t){this._logLevel=typeof t=="string"?AB[t]:t}get logHandler(){return this._logHandler}set logHandler(t){if(typeof t!="function")throw new TypeError("Value assigned to `logHandler` must be a function");this._logHandler=t}get userLogHandler(){return this._userLogHandler}set userLogHandler(t){this._userLogHandler=t}debug(...t){this._userLogHandler&&this._userLogHandler(this,qe.DEBUG,...t),this._logHandler(this,qe.DEBUG,...t)}log(...t){this._userLogHandler&&this._userLogHandler(this,qe.VERBOSE,...t),this._logHandler(this,qe.VERBOSE,...t)}info(...t){this._userLogHandler&&this._userLogHandler(this,qe.INFO,...t),this._logHandler(this,qe.INFO,...t)}warn(...t){this._userLogHandler&&this._userLogHandler(this,qe.WARN,...t),this._logHandler(this,qe.WARN,...t)}error(...t){this._userLogHandler&&this._userLogHandler(this,qe.ERROR,...t),this._logHandler(this,qe.ERROR,...t)}}const qB=(e,t)=>t.some(n=>e instanceof n);let _h,xh;function hB(){return _h||(_h=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function pB(){return xh||(xh=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const Ig=new WeakMap,hl=new WeakMap,Sg=new WeakMap,pc=new WeakMap,_u=new WeakMap;function dB(e){const t=new Promise((n,s)=>{const i=()=>{e.removeEventListener("success",r),e.removeEventListener("error",a)},r=()=>{n(Qs(e.result)),i()},a=()=>{s(e.error),i()};e.addEventListener("success",r),e.addEventListener("error",a)});return t.then(n=>{n instanceof IDBCursor&&Ig.set(n,e)}).catch(()=>{}),_u.set(t,e),t}function DB(e){if(hl.has(e))return;const t=new Promise((n,s)=>{const i=()=>{e.removeEventListener("complete",r),e.removeEventListener("error",a),e.removeEventListener("abort",a)},r=()=>{n(),i()},a=()=>{s(e.error||new DOMException("AbortError","AbortError")),i()};e.addEventListener("complete",r),e.addEventListener("error",a),e.addEventListener("abort",a)});hl.set(e,t)}let pl={get(e,t,n){if(e instanceof IDBTransaction){if(t==="done")return hl.get(e);if(t==="objectStoreNames")return e.objectStoreNames||Sg.get(e);if(t==="store")return n.objectStoreNames[1]?void 0:n.objectStore(n.objectStoreNames[0])}return Qs(e[t])},set(e,t,n){return e[t]=n,!0},has(e,t){return e instanceof IDBTransaction&&(t==="done"||t==="store")?!0:t in e}};function gB(e){pl=e(pl)}function fB(e){return e===IDBDatabase.prototype.transaction&&!("objectStoreNames"in IDBTransaction.prototype)?function(t,...n){const s=e.call(dc(this),t,...n);return Sg.set(s,t.sort?t.sort():[t]),Qs(s)}:pB().includes(e)?function(...t){return e.apply(dc(this),t),Qs(Ig.get(this))}:function(...t){return Qs(e.apply(dc(this),t))}}function mB(e){return typeof e=="function"?fB(e):(e instanceof IDBTransaction&&DB(e),qB(e,hB())?new Proxy(e,pl):e)}function Qs(e){if(e instanceof IDBRequest)return dB(e);if(pc.has(e))return pc.get(e);const t=mB(e);return t!==e&&(pc.set(e,t),_u.set(t,e)),t}const dc=e=>_u.get(e);function Cg(e,t,{blocked:n,upgrade:s,blocking:i,terminated:r}={}){const a=indexedDB.open(e,t),o=Qs(a);return s&&a.addEventListener("upgradeneeded",A=>{s(Qs(a.result),A.oldVersion,A.newVersion,Qs(a.transaction))}),n&&a.addEventListener("blocked",()=>n()),o.then(A=>{r&&A.addEventListener("close",()=>r()),i&&A.addEventListener("versionchange",()=>i())}).catch(()=>{}),o}const NB=["get","getKey","getAll","getAllKeys","count"],VB=["put","add","delete","clear"],Dc=new Map;function Fh(e,t){if(!(e instanceof IDBDatabase&&!(t in e)&&typeof t=="string"))return;if(Dc.get(t))return Dc.get(t);const n=t.replace(/FromIndex$/,""),s=t!==n,i=VB.includes(n);if(!(n in(s?IDBIndex:IDBObjectStore).prototype)||!(i||NB.includes(n)))return;const r=async function(a,...o){const A=this.transaction(a,i?"readwrite":"readonly");let l=A.store;return s&&(l=l.index(o.shift())),(await Promise.all([l[n](...o),i&&A.done]))[0]};return Dc.set(t,r),r}gB(e=>wt(nt({},e),{get:(t,n,s)=>Fh(t,n)||e.get(t,n,s),has:(t,n)=>!!Fh(t,n)||e.has(t,n)}));/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class MB{constructor(t){this.container=t}getPlatformInfoString(){return this.container.getProviders().map(n=>{if(OB(n)){const s=n.getImmediate();return`${s.library}/${s.version}`}else return null}).filter(n=>n).join(" ")}}function OB(e){const t=e.getComponent();return(t==null?void 0:t.type)==="VERSION"}const dl="@firebase/app",Zh="0.8.4";/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Ii=new Pg("@firebase/app"),yB="@firebase/app-compat",WB="@firebase/analytics-compat",EB="@firebase/analytics",PB="@firebase/app-check-compat",IB="@firebase/app-check",SB="@firebase/auth",CB="@firebase/auth-compat",wB="@firebase/database",BB="@firebase/database-compat",kB="@firebase/functions",TB="@firebase/functions-compat",bB="@firebase/installations",UB="@firebase/installations-compat",QB="@firebase/messaging",vB="@firebase/messaging-compat",RB="@firebase/performance",YB="@firebase/performance-compat",GB="@firebase/remote-config",_B="@firebase/remote-config-compat",xB="@firebase/storage",FB="@firebase/storage-compat",ZB="@firebase/firestore",KB="@firebase/firestore-compat",JB="firebase";/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Dl="[DEFAULT]",LB={[dl]:"fire-core",[yB]:"fire-core-compat",[EB]:"fire-analytics",[WB]:"fire-analytics-compat",[IB]:"fire-app-check",[PB]:"fire-app-check-compat",[SB]:"fire-auth",[CB]:"fire-auth-compat",[wB]:"fire-rtdb",[BB]:"fire-rtdb-compat",[kB]:"fire-fn",[TB]:"fire-fn-compat",[bB]:"fire-iid",[UB]:"fire-iid-compat",[QB]:"fire-fcm",[vB]:"fire-fcm-compat",[RB]:"fire-perf",[YB]:"fire-perf-compat",[GB]:"fire-rc",[_B]:"fire-rc-compat",[xB]:"fire-gcs",[FB]:"fire-gcs-compat",[ZB]:"fire-fst",[KB]:"fire-fst-compat","fire-js":"fire-js",[JB]:"fire-js-all"};/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const AA=new Map,gl=new Map;function zB(e,t){try{e.container.addComponent(t)}catch(n){Ii.debug(`Component ${t.name} failed to register with FirebaseApp ${e.name}`,n)}}function Si(e){const t=e.name;if(gl.has(t))return Ii.debug(`There were multiple attempts to register component ${t}.`),!1;gl.set(t,e);for(const n of AA.values())zB(n,e);return!0}function FA(e,t){const n=e.container.getProvider("heartbeat").getImmediate({optional:!0});return n&&n.triggerHeartbeat(),e.container.getProvider(t)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const jB={["no-app"]:"No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()",["bad-app-name"]:"Illegal App name: '{$appName}",["duplicate-app"]:"Firebase App named '{$appName}' already exists with different options or config",["app-deleted"]:"Firebase App named '{$appName}' already deleted",["no-options"]:"Need to provide options, when not being deployed to hosting via source.",["invalid-app-argument"]:"firebase.{$appName}() takes either no argument or a Firebase App instance.",["invalid-log-argument"]:"First argument to `onLog` must be null or a function.",["idb-open"]:"Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.",["idb-get"]:"Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.",["idb-set"]:"Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.",["idb-delete"]:"Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}."},vs=new xA("app","Firebase",jB);/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class HB{constructor(t,n,s){this._isDeleted=!1,this._options=Object.assign({},t),this._config=Object.assign({},n),this._name=n.name,this._automaticDataCollectionEnabled=n.automaticDataCollectionEnabled,this._container=s,this.container.addComponent(new Xs("app",()=>this,"PUBLIC"))}get automaticDataCollectionEnabled(){return this.checkDestroyed(),this._automaticDataCollectionEnabled}set automaticDataCollectionEnabled(t){this.checkDestroyed(),this._automaticDataCollectionEnabled=t}get name(){return this.checkDestroyed(),this._name}get options(){return this.checkDestroyed(),this._options}get config(){return this.checkDestroyed(),this._config}get container(){return this._container}get isDeleted(){return this._isDeleted}set isDeleted(t){this._isDeleted=t}checkDestroyed(){if(this.isDeleted)throw vs.create("app-deleted",{appName:this._name})}}function wg(e,t={}){let n=e;typeof t!="object"&&(t={name:t});const s=Object.assign({name:Dl,automaticDataCollectionEnabled:!1},t),i=s.name;if(typeof i!="string"||!i)throw vs.create("bad-app-name",{appName:String(i)});if(n||(n=zw()),!n)throw vs.create("no-options");const r=AA.get(i);if(r){if(oA(n,r.options)&&oA(s,r.config))return r;throw vs.create("duplicate-app",{appName:i})}const a=new oB(i);for(const A of gl.values())a.addComponent(A);const o=new HB(n,s,a);return AA.set(i,o),o}function XB(e=Dl){const t=AA.get(e);if(!t&&e===Dl)return wg();if(!t)throw vs.create("no-app",{appName:e});return t}function Rs(e,t,n){var s;let i=(s=LB[e])!==null&&s!==void 0?s:e;n&&(i+=`-${n}`);const r=i.match(/\s|\//),a=t.match(/\s|\//);if(r||a){const o=[`Unable to register library "${i}" with version "${t}":`];r&&o.push(`library name "${i}" contains illegal characters (whitespace or "/")`),r&&a&&o.push("and"),a&&o.push(`version name "${t}" contains illegal characters (whitespace or "/")`),Ii.warn(o.join(" "));return}Si(new Xs(`${i}-version`,()=>({library:i,version:t}),"VERSION"))}/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const $B="firebase-heartbeat-database",tk=1,Ma="firebase-heartbeat-store";let gc=null;function Bg(){return gc||(gc=Cg($B,tk,{upgrade:(e,t)=>{switch(t){case 0:e.createObjectStore(Ma)}}}).catch(e=>{throw vs.create("idb-open",{originalErrorMessage:e.message})})),gc}async function ek(e){var t;try{return(await Bg()).transaction(Ma).objectStore(Ma).get(kg(e))}catch(n){if(n instanceof Ui)Ii.warn(n.message);else{const s=vs.create("idb-get",{originalErrorMessage:(t=n)===null||t===void 0?void 0:t.message});Ii.warn(s.message)}}}async function Kh(e,t){var n;try{const i=(await Bg()).transaction(Ma,"readwrite");return await i.objectStore(Ma).put(t,kg(e)),i.done}catch(s){if(s instanceof Ui)Ii.warn(s.message);else{const i=vs.create("idb-set",{originalErrorMessage:(n=s)===null||n===void 0?void 0:n.message});Ii.warn(i.message)}}}function kg(e){return`${e.name}!${e.options.appId}`}/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const nk=1024,sk=30*24*60*60*1e3;class ik{constructor(t){this.container=t,this._heartbeatsCache=null;const n=this.container.getProvider("app").getImmediate();this._storage=new ak(n),this._heartbeatsCachePromise=this._storage.read().then(s=>(this._heartbeatsCache=s,s))}async triggerHeartbeat(){const n=this.container.getProvider("platform-logger").getImmediate().getPlatformInfoString(),s=Jh();if(this._heartbeatsCache===null&&(this._heartbeatsCache=await this._heartbeatsCachePromise),!(this._heartbeatsCache.lastSentHeartbeatDate===s||this._heartbeatsCache.heartbeats.some(i=>i.date===s)))return this._heartbeatsCache.heartbeats.push({date:s,agent:n}),this._heartbeatsCache.heartbeats=this._heartbeatsCache.heartbeats.filter(i=>{const r=new Date(i.date).valueOf();return Date.now()-r<=sk}),this._storage.overwrite(this._heartbeatsCache)}async getHeartbeatsHeader(){if(this._heartbeatsCache===null&&await this._heartbeatsCachePromise,this._heartbeatsCache===null||this._heartbeatsCache.heartbeats.length===0)return"";const t=Jh(),{heartbeatsToSend:n,unsentEntries:s}=rk(this._heartbeatsCache.heartbeats),i=Og(JSON.stringify({version:2,heartbeats:n}));return this._heartbeatsCache.lastSentHeartbeatDate=t,s.length>0?(this._heartbeatsCache.heartbeats=s,await this._storage.overwrite(this._heartbeatsCache)):(this._heartbeatsCache.heartbeats=[],this._storage.overwrite(this._heartbeatsCache)),i}}function Jh(){return new Date().toISOString().substring(0,10)}function rk(e,t=nk){const n=[];let s=e.slice();for(const i of e){const r=n.find(a=>a.agent===i.agent);if(r){if(r.dates.push(i.date),Lh(n)>t){r.dates.pop();break}}else if(n.push({agent:i.agent,dates:[i.date]}),Lh(n)>t){n.pop();break}s=s.slice(1)}return{heartbeatsToSend:n,unsentEntries:s}}class ak{constructor(t){this.app=t,this._canUseIndexedDBPromise=this.runIndexedDBEnvironmentCheck()}async runIndexedDBEnvironmentCheck(){return yg()?Wg().then(()=>!0).catch(()=>!1):!1}async read(){return await this._canUseIndexedDBPromise?await ek(this.app)||{heartbeats:[]}:{heartbeats:[]}}async overwrite(t){var n;if(await this._canUseIndexedDBPromise){const i=await this.read();return Kh(this.app,{lastSentHeartbeatDate:(n=t.lastSentHeartbeatDate)!==null&&n!==void 0?n:i.lastSentHeartbeatDate,heartbeats:t.heartbeats})}else return}async add(t){var n;if(await this._canUseIndexedDBPromise){const i=await this.read();return Kh(this.app,{lastSentHeartbeatDate:(n=t.lastSentHeartbeatDate)!==null&&n!==void 0?n:i.lastSentHeartbeatDate,heartbeats:[...i.heartbeats,...t.heartbeats]})}else return}}function Lh(e){return Og(JSON.stringify({version:2,heartbeats:e})).length}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function ok(e){Si(new Xs("platform-logger",t=>new MB(t),"PRIVATE")),Si(new Xs("heartbeat",t=>new ik(t),"PRIVATE")),Rs(dl,Zh,e),Rs(dl,Zh,"esm2017"),Rs("fire-js","")}ok("");var Ak="firebase",ck="9.14.0";/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */Rs(Ak,ck,"app");const Tg="@firebase/installations",xu="0.5.16";/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const bg=1e4,Ug=`w:${xu}`,Qg="FIS_v2",lk="https://firebaseinstallations.googleapis.com/v1",uk=60*60*1e3,qk="installations",hk="Installations";/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const pk={["missing-app-config-values"]:'Missing App configuration value: "{$valueName}"',["not-registered"]:"Firebase Installation is not registered.",["installation-not-found"]:"Firebase Installation not found.",["request-failed"]:'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',["app-offline"]:"Could not process request. Application offline.",["delete-pending-registration"]:"Can't delete installation while there is a pending registration request."},Ci=new xA(qk,hk,pk);function vg(e){return e instanceof Ui&&e.code.includes("request-failed")}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function Rg({projectId:e}){return`${lk}/projects/${e}/installations`}function Yg(e){return{token:e.token,requestStatus:2,expiresIn:Dk(e.expiresIn),creationTime:Date.now()}}async function Gg(e,t){const s=(await t.json()).error;return Ci.create("request-failed",{requestName:e,serverCode:s.code,serverMessage:s.message,serverStatus:s.status})}function _g({apiKey:e}){return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":e})}function dk(e,{refreshToken:t}){const n=_g(e);return n.append("Authorization",gk(t)),n}async function xg(e){const t=await e();return t.status>=500&&t.status<600?e():t}function Dk(e){return Number(e.replace("s","000"))}function gk(e){return`${Qg} ${e}`}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function fk({appConfig:e,heartbeatServiceProvider:t},{fid:n}){const s=Rg(e),i=_g(e),r=t.getImmediate({optional:!0});if(r){const l=await r.getHeartbeatsHeader();l&&i.append("x-firebase-client",l)}const a={fid:n,authVersion:Qg,appId:e.appId,sdkVersion:Ug},o={method:"POST",headers:i,body:JSON.stringify(a)},A=await xg(()=>fetch(s,o));if(A.ok){const l=await A.json();return{fid:l.fid||n,registrationStatus:2,refreshToken:l.refreshToken,authToken:Yg(l.authToken)}}else throw await Gg("Create Installation",A)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function Fg(e){return new Promise(t=>{setTimeout(t,e)})}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function mk(e){return btoa(String.fromCharCode(...e)).replace(/\+/g,"-").replace(/\//g,"_")}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Nk=/^[cdef][\w-]{21}$/,fl="";function Vk(){try{const e=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(e),e[0]=112+e[0]%16;const n=Mk(e);return Nk.test(n)?n:fl}catch{return fl}}function Mk(e){return mk(e).substr(0,22)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function ZA(e){return`${e.appName}!${e.appId}`}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Zg=new Map;function Kg(e,t){const n=ZA(e);Jg(n,t),Ok(n,t)}function Jg(e,t){const n=Zg.get(e);if(!!n)for(const s of n)s(t)}function Ok(e,t){const n=yk();n&&n.postMessage({key:e,fid:t}),Wk()}let hi=null;function yk(){return!hi&&"BroadcastChannel"in self&&(hi=new BroadcastChannel("[Firebase] FID Change"),hi.onmessage=e=>{Jg(e.data.key,e.data.fid)}),hi}function Wk(){Zg.size===0&&hi&&(hi.close(),hi=null)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Ek="firebase-installations-database",Pk=1,wi="firebase-installations-store";let fc=null;function Fu(){return fc||(fc=Cg(Ek,Pk,{upgrade:(e,t)=>{switch(t){case 0:e.createObjectStore(wi)}}})),fc}async function cA(e,t){const n=ZA(e),i=(await Fu()).transaction(wi,"readwrite"),r=i.objectStore(wi),a=await r.get(n);return await r.put(t,n),await i.done,(!a||a.fid!==t.fid)&&Kg(e,t.fid),t}async function Lg(e){const t=ZA(e),s=(await Fu()).transaction(wi,"readwrite");await s.objectStore(wi).delete(t),await s.done}async function KA(e,t){const n=ZA(e),i=(await Fu()).transaction(wi,"readwrite"),r=i.objectStore(wi),a=await r.get(n),o=t(a);return o===void 0?await r.delete(n):await r.put(o,n),await i.done,o&&(!a||a.fid!==o.fid)&&Kg(e,o.fid),o}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function Zu(e){let t;const n=await KA(e.appConfig,s=>{const i=Ik(s),r=Sk(e,i);return t=r.registrationPromise,r.installationEntry});return n.fid===fl?{installationEntry:await t}:{installationEntry:n,registrationPromise:t}}function Ik(e){const t=e||{fid:Vk(),registrationStatus:0};return zg(t)}function Sk(e,t){if(t.registrationStatus===0){if(!navigator.onLine){const i=Promise.reject(Ci.create("app-offline"));return{installationEntry:t,registrationPromise:i}}const n={fid:t.fid,registrationStatus:1,registrationTime:Date.now()},s=Ck(e,n);return{installationEntry:n,registrationPromise:s}}else return t.registrationStatus===1?{installationEntry:t,registrationPromise:wk(e)}:{installationEntry:t}}async function Ck(e,t){try{const n=await fk(e,t);return cA(e.appConfig,n)}catch(n){throw vg(n)&&n.customData.serverCode===409?await Lg(e.appConfig):await cA(e.appConfig,{fid:t.fid,registrationStatus:0}),n}}async function wk(e){let t=await zh(e.appConfig);for(;t.registrationStatus===1;)await Fg(100),t=await zh(e.appConfig);if(t.registrationStatus===0){const{installationEntry:n,registrationPromise:s}=await Zu(e);return s||n}return t}function zh(e){return KA(e,t=>{if(!t)throw Ci.create("installation-not-found");return zg(t)})}function zg(e){return Bk(e)?{fid:e.fid,registrationStatus:0}:e}function Bk(e){return e.registrationStatus===1&&e.registrationTime+bg<Date.now()}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function kk({appConfig:e,heartbeatServiceProvider:t},n){const s=Tk(e,n),i=dk(e,n),r=t.getImmediate({optional:!0});if(r){const l=await r.getHeartbeatsHeader();l&&i.append("x-firebase-client",l)}const a={installation:{sdkVersion:Ug,appId:e.appId}},o={method:"POST",headers:i,body:JSON.stringify(a)},A=await xg(()=>fetch(s,o));if(A.ok){const l=await A.json();return Yg(l)}else throw await Gg("Generate Auth Token",A)}function Tk(e,{fid:t}){return`${Rg(e)}/${t}/authTokens:generate`}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function Ku(e,t=!1){let n;const s=await KA(e.appConfig,r=>{if(!jg(r))throw Ci.create("not-registered");const a=r.authToken;if(!t&&Qk(a))return r;if(a.requestStatus===1)return n=bk(e,t),r;{if(!navigator.onLine)throw Ci.create("app-offline");const o=Rk(r);return n=Uk(e,o),o}});return n?await n:s.authToken}async function bk(e,t){let n=await jh(e.appConfig);for(;n.authToken.requestStatus===1;)await Fg(100),n=await jh(e.appConfig);const s=n.authToken;return s.requestStatus===0?Ku(e,t):s}function jh(e){return KA(e,t=>{if(!jg(t))throw Ci.create("not-registered");const n=t.authToken;return Yk(n)?Object.assign(Object.assign({},t),{authToken:{requestStatus:0}}):t})}async function Uk(e,t){try{const n=await kk(e,t),s=Object.assign(Object.assign({},t),{authToken:n});return await cA(e.appConfig,s),n}catch(n){if(vg(n)&&(n.customData.serverCode===401||n.customData.serverCode===404))await Lg(e.appConfig);else{const s=Object.assign(Object.assign({},t),{authToken:{requestStatus:0}});await cA(e.appConfig,s)}throw n}}function jg(e){return e!==void 0&&e.registrationStatus===2}function Qk(e){return e.requestStatus===2&&!vk(e)}function vk(e){const t=Date.now();return t<e.creationTime||e.creationTime+e.expiresIn<t+uk}function Rk(e){const t={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},e),{authToken:t})}function Yk(e){return e.requestStatus===1&&e.requestTime+bg<Date.now()}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function Gk(e){const t=e,{installationEntry:n,registrationPromise:s}=await Zu(t);return s?s.catch(console.error):Ku(t).catch(console.error),n.fid}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function _k(e,t=!1){const n=e;return await xk(n),(await Ku(n,t)).token}async function xk(e){const{registrationPromise:t}=await Zu(e);t&&await t}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function Fk(e){if(!e||!e.options)throw mc("App Configuration");if(!e.name)throw mc("App Name");const t=["projectId","apiKey","appId"];for(const n of t)if(!e.options[n])throw mc(n);return{appName:e.name,projectId:e.options.projectId,apiKey:e.options.apiKey,appId:e.options.appId}}function mc(e){return Ci.create("missing-app-config-values",{valueName:e})}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Hg="installations",Zk="installations-internal",Kk=e=>{const t=e.getProvider("app").getImmediate(),n=Fk(t),s=FA(t,"heartbeat");return{app:t,appConfig:n,heartbeatServiceProvider:s,_delete:()=>Promise.resolve()}},Jk=e=>{const t=e.getProvider("app").getImmediate(),n=FA(t,Hg).getImmediate();return{getId:()=>Gk(n),getToken:i=>_k(n,i)}};function Lk(){Si(new Xs(Hg,Kk,"PUBLIC")),Si(new Xs(Zk,Jk,"PRIVATE"))}Lk();Rs(Tg,xu);Rs(Tg,xu,"esm2017");/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const lA="analytics",zk="firebase_id",jk="origin",Hk=60*1e3,Xk="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig",Xg="https://www.googletagmanager.com/gtag/js";/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const dn=new Pg("@firebase/analytics");/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function $g(e){return Promise.all(e.map(t=>t.catch(n=>n)))}function $k(e,t){const n=document.createElement("script");n.src=`${Xg}?l=${e}&id=${t}`,n.async=!0,document.head.appendChild(n)}function tT(e){let t=[];return Array.isArray(window[e])?t=window[e]:window[e]=t,t}async function eT(e,t,n,s,i,r){const a=s[i];try{if(a)await t[a];else{const A=(await $g(n)).find(l=>l.measurementId===i);A&&await t[A.appId]}}catch(o){dn.error(o)}e("config",i,r)}async function nT(e,t,n,s,i){try{let r=[];if(i&&i.send_to){let a=i.send_to;Array.isArray(a)||(a=[a]);const o=await $g(n);for(const A of a){const l=o.find(c=>c.measurementId===A),u=l&&t[l.appId];if(u)r.push(u);else{r=[];break}}}r.length===0&&(r=Object.values(t)),await Promise.all(r),e("event",s,i||{})}catch(r){dn.error(r)}}function sT(e,t,n,s){async function i(r,a,o){try{r==="event"?await nT(e,t,n,a,o):r==="config"?await eT(e,t,n,s,a,o):r==="consent"?e("consent","update",o):e("set",a)}catch(A){dn.error(A)}}return i}function iT(e,t,n,s,i){let r=function(...a){window[s].push(arguments)};return window[i]&&typeof window[i]=="function"&&(r=window[i]),window[i]=sT(r,e,t,n),{gtagCore:r,wrappedGtag:window[i]}}function rT(e){const t=window.document.getElementsByTagName("script");for(const n of Object.values(t))if(n.src&&n.src.includes(Xg)&&n.src.includes(e))return n;return null}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const aT={["already-exists"]:"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.",["already-initialized"]:"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.",["already-initialized-settings"]:"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.",["interop-component-reg-failed"]:"Firebase Analytics Interop Component failed to instantiate: {$reason}",["invalid-analytics-context"]:"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}",["indexeddb-unavailable"]:"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}",["fetch-throttle"]:"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.",["config-fetch-failed"]:"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}",["no-api-key"]:'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',["no-app-id"]:'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.'},On=new xA("analytics","Analytics",aT);/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const oT=30,AT=1e3;class cT{constructor(t={},n=AT){this.throttleMetadata=t,this.intervalMillis=n}getThrottleMetadata(t){return this.throttleMetadata[t]}setThrottleMetadata(t,n){this.throttleMetadata[t]=n}deleteThrottleMetadata(t){delete this.throttleMetadata[t]}}const tf=new cT;function lT(e){return new Headers({Accept:"application/json","x-goog-api-key":e})}async function uT(e){var t;const{appId:n,apiKey:s}=e,i={method:"GET",headers:lT(s)},r=Xk.replace("{app-id}",n),a=await fetch(r,i);if(a.status!==200&&a.status!==304){let o="";try{const A=await a.json();!((t=A.error)===null||t===void 0)&&t.message&&(o=A.error.message)}catch{}throw On.create("config-fetch-failed",{httpStatus:a.status,responseMessage:o})}return a.json()}async function qT(e,t=tf,n){const{appId:s,apiKey:i,measurementId:r}=e.options;if(!s)throw On.create("no-app-id");if(!i){if(r)return{measurementId:r,appId:s};throw On.create("no-api-key")}const a=t.getThrottleMetadata(s)||{backoffCount:0,throttleEndTimeMillis:Date.now()},o=new dT;return setTimeout(async()=>{o.abort()},n!==void 0?n:Hk),ef({appId:s,apiKey:i,measurementId:r},a,o,t)}async function ef(e,{throttleEndTimeMillis:t,backoffCount:n},s,i=tf){var r,a;const{appId:o,measurementId:A}=e;try{await hT(s,t)}catch(l){if(A)return dn.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${A} provided in the "measurementId" field in the local Firebase config. [${(r=l)===null||r===void 0?void 0:r.message}]`),{appId:o,measurementId:A};throw l}try{const l=await uT(e);return i.deleteThrottleMetadata(o),l}catch(l){const u=l;if(!pT(u)){if(i.deleteThrottleMetadata(o),A)return dn.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${A} provided in the "measurementId" field in the local Firebase config. [${u==null?void 0:u.message}]`),{appId:o,measurementId:A};throw l}const c=Number((a=u==null?void 0:u.customData)===null||a===void 0?void 0:a.httpStatus)===503?Gh(n,i.intervalMillis,oT):Gh(n,i.intervalMillis),h={throttleEndTimeMillis:Date.now()+c,backoffCount:n+1};return i.setThrottleMetadata(o,h),dn.debug(`Calling attemptFetch again in ${c} millis`),ef(e,h,s,i)}}function hT(e,t){return new Promise((n,s)=>{const i=Math.max(t-Date.now(),0),r=setTimeout(n,i);e.addEventListener(()=>{clearTimeout(r),s(On.create("fetch-throttle",{throttleEndTimeMillis:t}))})})}function pT(e){if(!(e instanceof Ui)||!e.customData)return!1;const t=Number(e.customData.httpStatus);return t===429||t===500||t===503||t===504}class dT{constructor(){this.listeners=[]}addEventListener(t){this.listeners.push(t)}abort(){this.listeners.forEach(t=>t())}}async function DT(e,t,n,s,i){if(i&&i.global){e("event",n,s);return}else{const r=await t,a=Object.assign(Object.assign({},s),{send_to:r});e("event",n,a)}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function gT(){var e;if(yg())try{await Wg()}catch(t){return dn.warn(On.create("indexeddb-unavailable",{errorInfo:(e=t)===null||e===void 0?void 0:e.toString()}).message),!1}else return dn.warn(On.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;return!0}async function fT(e,t,n,s,i,r,a){var o;const A=qT(e);A.then(q=>{n[q.measurementId]=q.appId,e.options.measurementId&&q.measurementId!==e.options.measurementId&&dn.warn(`The measurement ID in the local Firebase config (${e.options.measurementId}) does not match the measurement ID fetched from the server (${q.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)}).catch(q=>dn.error(q)),t.push(A);const l=gT().then(q=>{if(q)return s.getId()}),[u,c]=await Promise.all([A,l]);rT(r)||$k(r,u.measurementId),i("js",new Date);const h=(o=a==null?void 0:a.config)!==null&&o!==void 0?o:{};return h[jk]="firebase",h.update=!0,c!=null&&(h[zk]=c),i("config",u.measurementId,h),u.measurementId}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class mT{constructor(t){this.app=t}_delete(){return delete Qr[this.app.options.appId],Promise.resolve()}}let Qr={},Hh=[];const Xh={};let Nc="dataLayer",NT="gtag",$h,nf,tp=!1;function VT(){const e=[];if(_w()&&e.push("This is a browser extension environment."),xw()||e.push("Cookies are not available."),e.length>0){const t=e.map((s,i)=>`(${i+1}) ${s}`).join(" "),n=On.create("invalid-analytics-context",{errorInfo:t});dn.warn(n.message)}}function MT(e,t,n){VT();const s=e.options.appId;if(!s)throw On.create("no-app-id");if(!e.options.apiKey)if(e.options.measurementId)dn.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${e.options.measurementId} provided in the "measurementId" field in the local Firebase config.`);else throw On.create("no-api-key");if(Qr[s]!=null)throw On.create("already-exists",{id:s});if(!tp){tT(Nc);const{wrappedGtag:r,gtagCore:a}=iT(Qr,Hh,Xh,Nc,NT);nf=r,$h=a,tp=!0}return Qr[s]=fT(e,Hh,Xh,t,$h,Nc,n),new mT(e)}function OT(e=XB()){e=Eg(e);const t=FA(e,lA);return t.isInitialized()?t.getImmediate():yT(e)}function yT(e,t={}){const n=FA(e,lA);if(n.isInitialized()){const i=n.getImmediate();if(oA(t,n.getOptions()))return i;throw On.create("already-initialized")}return n.initialize({options:t})}function WT(e,t,n,s){e=Eg(e),DT(nf,Qr[e.app.options.appId],t,n,s).catch(i=>dn.error(i))}const ep="@firebase/analytics",np="0.8.4";function ET(){Si(new Xs(lA,(t,{options:n})=>{const s=t.getProvider("app").getImmediate(),i=t.getProvider("installations-internal").getImmediate();return MT(s,i,n)},"PUBLIC")),Si(new Xs("analytics-internal",e,"PRIVATE")),Rs(ep,np),Rs(ep,np,"esm2017");function e(t){try{const n=t.getProvider(lA).getImmediate();return{logEvent:(s,i,r)=>WT(n,s,i,r)}}catch(n){throw On.create("interop-component-reg-failed",{reason:n})}}}ET();const PT={apiKey:"AIzaSyDzROhbmJv6b-4v0r-uyR0VNVMEX1Ag-Jo",authDomain:"browser-operator-analytics.firebaseapp.com",projectId:"browser-operator-analytics",storageBucket:"browser-operator-analytics.appspot.com",messagingSenderId:"1035842881251",appId:"1:1035842881251:web:92a4d06e1c043fc9fa27d6",measurementId:"G-V9E58KM5WY"},IT=wg(PT);OT(IT);
